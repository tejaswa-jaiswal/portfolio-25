import{r as mx,a as j_,g as J_}from"./react-vendor-Bpz2gU7X.js";var Yl={},jm;function gx(){if(jm)return Yl;jm=1;var r=mx();return Yl.createRoot=r.createRoot,Yl.hydrateRoot=r.hydrateRoot,Yl}var uC=gx(),Le=j_();const hC=J_(Le);/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ru="159",is={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},rs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},K_=0,Of=1,Q_=2,_x=3,$_=0,su=1,fa=2,yi=3,rr=0,Fn=1,Ui=2,vx=2,ir=0,fs=1,Ff=2,zf=3,Bf=4,e0=5,Ar=100,t0=101,n0=102,kf=103,Hf=104,i0=200,r0=201,s0=202,o0=203,Jc=204,Kc=205,a0=206,l0=207,c0=208,u0=209,h0=210,f0=211,d0=212,p0=213,m0=214,g0=0,_0=1,v0=2,va=3,y0=4,x0=5,S0=6,M0=7,Ba=0,E0=1,w0=2,Oi=0,T0=1,A0=2,b0=3,Cd=4,C0=5,Vf="attached",R0="detached",ou=300,sr=301,Lr=302,ya=303,xa=304,Ao=306,Sa=1e3,Rn=1001,Ma=1002,$t=1003,Qc=1004,yx=1004,da=1005,xx=1005,en=1006,Rd=1007,Sx=1007,Ir=1008,Mx=1008,Fi=1009,P0=1010,L0=1011,au=1012,Pd=1013,nr=1014,Si=1015,yo=1016,Ld=1017,Id=1018,br=1020,I0=1021,On=1023,D0=1024,N0=1025,Cr=1026,_s=1027,U0=1028,Dd=1029,O0=1030,Nd=1031,Ud=1033,Vc=33776,Gc=33777,Wc=33778,Xc=33779,Gf=35840,Wf=35841,Xf=35842,Yf=35843,Od=36196,qf=37492,Zf=37496,jf=37808,Jf=37809,Kf=37810,Qf=37811,$f=37812,ed=37813,td=37814,nd=37815,id=37816,rd=37817,sd=37818,od=37819,ad=37820,ld=37821,Yc=36492,cd=36494,ud=36495,F0=36283,hd=36284,fd=36285,dd=36286,z0=2200,B0=2201,k0=2202,Ea=2300,wa=2301,qc=2302,ls=2400,cs=2401,Ta=2402,lu=2500,Fd=2501,Ex=0,wx=1,Tx=2,zd=3e3,Rr=3001,H0=3200,V0=3201,Nr=0,G0=1,ei="",an="srgb",Bi="srgb-linear",cu="display-p3",ka="display-p3-linear",Aa="linear",Ft="srgb",ba="rec709",Ca="p3",Ax=0,ss=7680,bx=7681,Cx=7682,Rx=7683,Px=34055,Lx=34056,Ix=5386,Dx=512,Nx=513,Ux=514,Ox=515,Fx=516,zx=517,Bx=518,pd=519,W0=512,X0=513,Y0=514,Bd=515,q0=516,Z0=517,j0=518,J0=519,Ra=35044,kx=35048,Hx=35040,Vx=35045,Gx=35049,Wx=35041,Xx=35046,Yx=35050,qx=35042,Zx="100",md="300 es",$c=1035,Mi=2e3,xo=2001;let ar=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}};const An=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Jm=1234567;const ds=Math.PI/180,So=180/Math.PI;function ti(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(An[r&255]+An[r>>8&255]+An[r>>16&255]+An[r>>24&255]+"-"+An[e&255]+An[e>>8&255]+"-"+An[e>>16&15|64]+An[e>>24&255]+"-"+An[t&63|128]+An[t>>8&255]+"-"+An[t>>16&255]+An[t>>24&255]+An[n&255]+An[n>>8&255]+An[n>>16&255]+An[n>>24&255]).toLowerCase()}function Zt(r,e,t){return Math.max(e,Math.min(t,r))}function kd(r,e){return(r%e+e)%e}function jx(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Jx(r,e,t){return r!==e?(t-r)/(e-r):0}function pa(r,e,t){return(1-t)*r+t*e}function Kx(r,e,t,n){return pa(r,e,1-Math.exp(-t*n))}function Qx(r,e=1){return e-Math.abs(kd(r,e*2)-e)}function $x(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function eS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function tS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function nS(r,e){return r+Math.random()*(e-r)}function iS(r){return r*(.5-Math.random())}function rS(r){r!==void 0&&(Jm=r);let e=Jm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function sS(r){return r*ds}function oS(r){return r*So}function gd(r){return(r&r-1)===0&&r!==0}function aS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function eu(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function lS(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),f=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),_=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*_,c*h);break;case"YXY":r.set(u*_,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*_,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Xn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function gt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const cS={DEG2RAD:ds,RAD2DEG:So,generateUUID:ti,clamp:Zt,euclideanModulo:kd,mapLinear:jx,inverseLerp:Jx,lerp:pa,damp:Kx,pingpong:Qx,smoothstep:$x,smootherstep:eS,randInt:tS,randFloat:nS,randFloatSpread:iS,seededRandom:rS,degToRad:sS,radToDeg:oS,isPowerOfTwo:gd,ceilPowerOfTwo:aS,floorPowerOfTwo:eu,setQuaternionFromProperEuler:lS,normalize:gt,denormalize:Xn};class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class yt{constructor(e,t,n,i,s,l,c,u,h){yt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=l,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],_=n[5],y=n[8],M=i[0],x=i[3],v=i[6],w=i[1],E=i[4],A=i[7],C=i[2],R=i[5],N=i[8];return s[0]=l*M+c*w+u*C,s[3]=l*x+c*E+u*R,s[6]=l*v+c*A+u*N,s[1]=h*M+f*w+p*C,s[4]=h*x+f*E+p*R,s[7]=h*v+f*A+p*N,s[2]=m*M+_*w+y*C,s[5]=m*x+_*E+y*R,s[8]=m*v+_*A+y*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*l*f-t*c*h-n*s*f+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*l-c*h,m=c*u-f*s,_=h*s-l*u,y=t*p+n*m+i*_;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/y;return e[0]=p*M,e[1]=(i*h-f*n)*M,e[2]=(c*n-i*l)*M,e[3]=m*M,e[4]=(f*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=_*M,e[7]=(n*u-h*t)*M,e[8]=(l*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Bh.makeScale(e,t)),this}rotate(e){return this.premultiply(Bh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Bh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Bh=new yt;function K0(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const uS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function fo(r,e){return new uS[r](e)}function Pa(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Q0(){const r=Pa("canvas");return r.style.display="block",r}const Km={};function ma(r){r in Km||(Km[r]=!0,console.warn(r))}const Qm=new yt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),$m=new yt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ql={[Bi]:{transfer:Aa,primaries:ba,toReference:r=>r,fromReference:r=>r},[an]:{transfer:Ft,primaries:ba,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[ka]:{transfer:Aa,primaries:Ca,toReference:r=>r.applyMatrix3($m),fromReference:r=>r.applyMatrix3(Qm)},[cu]:{transfer:Ft,primaries:Ca,toReference:r=>r.convertSRGBToLinear().applyMatrix3($m),fromReference:r=>r.applyMatrix3(Qm).convertLinearToSRGB()}},hS=new Set([Bi,ka]),Lt={enabled:!0,_workingColorSpace:Bi,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!hS.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=ql[e].toReference,i=ql[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return ql[r].primaries},getTransfer:function(r){return r===ei?Aa:ql[r].transfer}};function vo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function kh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Hs;class Hd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Hs===void 0&&(Hs=Pa("canvas")),Hs.width=e.width,Hs.height=e.height;const n=Hs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Hs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Pa("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=vo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(vo(t[n]/255)*255):t[n]=vo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let fS=0;class us{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:fS++}),this.uuid=ti(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Hh(i[l].image)):s.push(Hh(i[l]))}else s=Hh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Hh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Hd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let dS=0;class jt extends ar{constructor(e=jt.DEFAULT_IMAGE,t=jt.DEFAULT_MAPPING,n=Rn,i=Rn,s=en,l=Ir,c=On,u=Fi,h=jt.DEFAULT_ANISOTROPY,f=ei){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:dS++}),this.uuid=ti(),this.name="",this.source=new us(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===Rr?an:ei),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ou)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Sa:e.x=e.x-Math.floor(e.x);break;case Rn:e.x=e.x<0?0:1;break;case Ma:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Sa:e.y=e.y-Math.floor(e.y);break;case Rn:e.y=e.y<0?0:1;break;case Ma:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===an?Rr:zd}set encoding(e){ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Rr?an:ei}}jt.DEFAULT_IMAGE=null;jt.DEFAULT_MAPPING=ou;jt.DEFAULT_ANISOTROPY=1;class It{constructor(e=0,t=0,n=0,i=1){It.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],_=u[5],y=u[9],M=u[2],x=u[6],v=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-M)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+M)<.1&&Math.abs(y+x)<.1&&Math.abs(h+_+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(h+1)/2,A=(_+1)/2,C=(v+1)/2,R=(f+m)/4,N=(p+M)/4,F=(y+x)/4;return E>A&&E>C?E<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(E),i=R/n,s=N/n):A>C?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=R/i,s=F/i):C<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(C),n=N/s,i=F/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-M)*(p-M)+(m-f)*(m-f));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-M)/w,this.z=(m-f)/w,this.w=Math.acos((h+_+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class $0 extends ar{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new It(0,0,e,t),this.scissorTest=!1,this.viewport=new It(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(ma("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Rr?an:ei),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:en,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new jt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new us(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ei extends $0{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class uu extends jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=$t,this.minFilter=$t,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class pS extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new uu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vd extends jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=$t,this.minFilter=$t,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class mS extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Vd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class gS extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Pn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[l+0],_=s[l+1],y=s[l+2],M=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=_,e[t+2]=y,e[t+3]=M;return}if(p!==M||u!==m||h!==_||f!==y){let x=1-c;const v=u*m+h*_+f*y+p*M,w=v>=0?1:-1,E=1-v*v;if(E>Number.EPSILON){const C=Math.sqrt(E),R=Math.atan2(C,v*w);x=Math.sin(x*R)/C,c=Math.sin(c*R)/C}const A=c*w;if(u=u*x+m*A,h=h*x+_*A,f=f*x+y*A,p=p*x+M*A,x===1-c){const C=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=C,h*=C,f*=C,p*=C}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[l],m=s[l+1],_=s[l+2],y=s[l+3];return e[t]=c*y+f*p+u*_-h*m,e[t+1]=u*y+f*m+h*p-c*_,e[t+2]=h*y+f*_+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),_=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*f*p+h*_*y,this._y=h*_*p-m*f*y,this._z=h*f*y+m*_*p,this._w=h*f*p-m*_*y;break;case"YXZ":this._x=m*f*p+h*_*y,this._y=h*_*p-m*f*y,this._z=h*f*y-m*_*p,this._w=h*f*p+m*_*y;break;case"ZXY":this._x=m*f*p-h*_*y,this._y=h*_*p+m*f*y,this._z=h*f*y+m*_*p,this._w=h*f*p-m*_*y;break;case"ZYX":this._x=m*f*p-h*_*y,this._y=h*_*p+m*f*y,this._z=h*f*y-m*_*p,this._w=h*f*p+m*_*y;break;case"YZX":this._x=m*f*p+h*_*y,this._y=h*_*p+m*f*y,this._z=h*f*y-m*_*p,this._w=h*f*p-m*_*y;break;case"XZY":this._x=m*f*p-h*_*y,this._y=h*_*p-m*f*y,this._z=h*f*y+m*_*p,this._w=h*f*p+m*_*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const _=.5/Math.sqrt(m+1);this._w=.25/_,this._x=(f-u)*_,this._y=(s-h)*_,this._z=(l-i)*_}else if(n>c&&n>p){const _=2*Math.sqrt(1+n-c-p);this._w=(f-u)/_,this._x=.25*_,this._y=(i+l)/_,this._z=(s+h)/_}else if(c>p){const _=2*Math.sqrt(1+c-n-p);this._w=(s-h)/_,this._x=(i+l)/_,this._y=.25*_,this._z=(u+f)/_}else{const _=2*Math.sqrt(1+p-n-c);this._w=(l-i)/_,this._x=(s+h)/_,this._y=(u+f)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Zt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+l*c+i*h-s*u,this._y=i*f+l*u+s*c-n*h,this._z=s*f+l*h+n*u-i*c,this._w=l*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*l+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(eg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(eg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),f=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Vh.copy(this).projectOnVector(e),this.sub(Vh)}reflect(e){return this.sub(Vh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Vh=new D,eg=new Pn;class zn{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(gi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(gi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=gi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,gi):gi.fromBufferAttribute(s,l),gi.applyMatrix4(e.matrixWorld),this.expandByPoint(gi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Zl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Zl.copy(n.boundingBox)),Zl.applyMatrix4(e.matrixWorld),this.union(Zl)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,gi),gi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ko),jl.subVectors(this.max,Ko),Vs.subVectors(e.a,Ko),Gs.subVectors(e.b,Ko),Ws.subVectors(e.c,Ko),_r.subVectors(Gs,Vs),vr.subVectors(Ws,Gs),qr.subVectors(Vs,Ws);let t=[0,-_r.z,_r.y,0,-vr.z,vr.y,0,-qr.z,qr.y,_r.z,0,-_r.x,vr.z,0,-vr.x,qr.z,0,-qr.x,-_r.y,_r.x,0,-vr.y,vr.x,0,-qr.y,qr.x,0];return!Gh(t,Vs,Gs,Ws,jl)||(t=[1,0,0,0,1,0,0,0,1],!Gh(t,Vs,Gs,Ws,jl))?!1:(Jl.crossVectors(_r,vr),t=[Jl.x,Jl.y,Jl.z],Gh(t,Vs,Gs,Ws,jl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,gi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(gi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Zi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Zi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Zi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Zi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Zi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Zi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Zi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Zi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Zi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Zi=[new D,new D,new D,new D,new D,new D,new D,new D],gi=new D,Zl=new zn,Vs=new D,Gs=new D,Ws=new D,_r=new D,vr=new D,qr=new D,Ko=new D,jl=new D,Jl=new D,Zr=new D;function Gh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Zr.fromArray(r,s);const c=i.x*Math.abs(Zr.x)+i.y*Math.abs(Zr.y)+i.z*Math.abs(Zr.z),u=e.dot(Zr),h=t.dot(Zr),f=n.dot(Zr);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const _S=new zn,Qo=new D,Wh=new D;let Ln=class{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):_S.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Qo.subVectors(e,this.center);const t=Qo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Qo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Wh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Qo.copy(e.center).add(Wh)),this.expandByPoint(Qo.copy(e.center).sub(Wh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const ji=new D,Xh=new D,Kl=new D,yr=new D,Yh=new D,Ql=new D,qh=new D;class Ss{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ji)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ji.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ji.copy(this.origin).addScaledVector(this.direction,t),ji.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Xh.copy(e).add(t).multiplyScalar(.5),Kl.copy(t).sub(e).normalize(),yr.copy(this.origin).sub(Xh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Kl),c=yr.dot(this.direction),u=-yr.dot(Kl),h=yr.lengthSq(),f=Math.abs(1-l*l);let p,m,_,y;if(f>0)if(p=l*u-c,m=l*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const M=1/f;p*=M,m*=M,_=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),_=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Xh).addScaledVector(Kl,m),_}intersectSphere(e,t){ji.subVectors(e.center,this.origin);const n=ji.dot(this.direction),i=ji.dot(ji)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,l=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,l=(e.min.y-m.y)*f),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,ji)!==null}intersectTriangle(e,t,n,i,s){Yh.subVectors(t,e),Ql.subVectors(n,e),qh.crossVectors(Yh,Ql);let l=this.direction.dot(qh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;yr.subVectors(this.origin,e);const u=c*this.direction.dot(Ql.crossVectors(yr,Ql));if(u<0)return null;const h=c*this.direction.dot(Yh.cross(yr));if(h<0||u+h>l)return null;const f=-c*yr.dot(qh);return f<0?null:this.at(f/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class lt{constructor(e,t,n,i,s,l,c,u,h,f,p,m,_,y,M,x){lt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,f,p,m,_,y,M,x)}set(e,t,n,i,s,l,c,u,h,f,p,m,_,y,M,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=f,v[10]=p,v[14]=m,v[3]=_,v[7]=y,v[11]=M,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new lt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Xs.setFromMatrixColumn(e,0).length(),s=1/Xs.setFromMatrixColumn(e,1).length(),l=1/Xs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*f,_=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=_+y*h,t[5]=m-M*h,t[9]=-c*u,t[2]=M-m*h,t[6]=y+_*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*f,_=u*p,y=h*f,M=h*p;t[0]=m+M*c,t[4]=y*c-_,t[8]=l*h,t[1]=l*p,t[5]=l*f,t[9]=-c,t[2]=_*c-y,t[6]=M+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*f,_=u*p,y=h*f,M=h*p;t[0]=m-M*c,t[4]=-l*p,t[8]=y+_*c,t[1]=_+y*c,t[5]=l*f,t[9]=M-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*f,_=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=y*h-_,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=_*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,_=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=M-m*p,t[8]=y*p+_,t[1]=p,t[5]=l*f,t[9]=-c*f,t[2]=-h*f,t[6]=_*p+y,t[10]=m-M*p}else if(e.order==="XZY"){const m=l*u,_=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+M,t[5]=l*f,t[9]=_*p-y,t[2]=y*p-_,t[6]=c*f,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(vS,e,yS)}lookAt(e,t,n){const i=this.elements;return Qn.subVectors(e,t),Qn.lengthSq()===0&&(Qn.z=1),Qn.normalize(),xr.crossVectors(n,Qn),xr.lengthSq()===0&&(Math.abs(n.z)===1?Qn.x+=1e-4:Qn.z+=1e-4,Qn.normalize(),xr.crossVectors(n,Qn)),xr.normalize(),$l.crossVectors(Qn,xr),i[0]=xr.x,i[4]=$l.x,i[8]=Qn.x,i[1]=xr.y,i[5]=$l.y,i[9]=Qn.y,i[2]=xr.z,i[6]=$l.z,i[10]=Qn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],_=n[13],y=n[2],M=n[6],x=n[10],v=n[14],w=n[3],E=n[7],A=n[11],C=n[15],R=i[0],N=i[4],F=i[8],b=i[12],L=i[1],B=i[5],j=i[9],ae=i[13],H=i[2],Q=i[6],oe=i[10],se=i[14],X=i[3],Y=i[7],Z=i[11],ee=i[15];return s[0]=l*R+c*L+u*H+h*X,s[4]=l*N+c*B+u*Q+h*Y,s[8]=l*F+c*j+u*oe+h*Z,s[12]=l*b+c*ae+u*se+h*ee,s[1]=f*R+p*L+m*H+_*X,s[5]=f*N+p*B+m*Q+_*Y,s[9]=f*F+p*j+m*oe+_*Z,s[13]=f*b+p*ae+m*se+_*ee,s[2]=y*R+M*L+x*H+v*X,s[6]=y*N+M*B+x*Q+v*Y,s[10]=y*F+M*j+x*oe+v*Z,s[14]=y*b+M*ae+x*se+v*ee,s[3]=w*R+E*L+A*H+C*X,s[7]=w*N+E*B+A*Q+C*Y,s[11]=w*F+E*j+A*oe+C*Z,s[15]=w*b+E*ae+A*se+C*ee,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],_=e[14],y=e[3],M=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*_-n*u*_)+M*(+t*u*_-t*h*m+s*l*m-i*l*_+i*h*f-s*u*f)+x*(+t*h*p-t*c*_-s*l*p+n*l*_+s*c*f-n*h*f)+v*(-i*c*f-t*u*p+t*c*m+i*l*p-n*l*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],_=e[11],y=e[12],M=e[13],x=e[14],v=e[15],w=p*x*h-M*m*h+M*u*_-c*x*_-p*u*v+c*m*v,E=y*m*h-f*x*h-y*u*_+l*x*_+f*u*v-l*m*v,A=f*M*h-y*p*h+y*c*_-l*M*_-f*c*v+l*p*v,C=y*p*u-f*M*u-y*c*m+l*M*m+f*c*x-l*p*x,R=t*w+n*E+i*A+s*C;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/R;return e[0]=w*N,e[1]=(M*m*s-p*x*s-M*i*_+n*x*_+p*i*v-n*m*v)*N,e[2]=(c*x*s-M*u*s+M*i*h-n*x*h-c*i*v+n*u*v)*N,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*_-n*u*_)*N,e[4]=E*N,e[5]=(f*x*s-y*m*s+y*i*_-t*x*_-f*i*v+t*m*v)*N,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*N,e[7]=(l*m*s-f*u*s+f*i*h-t*m*h-l*i*_+t*u*_)*N,e[8]=A*N,e[9]=(y*p*s-f*M*s-y*n*_+t*M*_+f*n*v-t*p*v)*N,e[10]=(l*M*s-y*c*s+y*n*h-t*M*h-l*n*v+t*c*v)*N,e[11]=(f*c*s-l*p*s-f*n*h+t*p*h+l*n*_-t*c*_)*N,e[12]=C*N,e[13]=(f*M*i-y*p*i+y*n*m-t*M*m-f*n*x+t*p*x)*N,e[14]=(y*c*i-l*M*i-y*n*u+t*M*u+l*n*x-t*c*x)*N,e[15]=(l*p*i-f*c*i+f*n*u-t*p*u-l*n*m+t*c*m)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,f=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*l,0,h*u-i*c,f*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,f=l+l,p=c+c,m=s*h,_=s*f,y=s*p,M=l*f,x=l*p,v=c*p,w=u*h,E=u*f,A=u*p,C=n.x,R=n.y,N=n.z;return i[0]=(1-(M+v))*C,i[1]=(_+A)*C,i[2]=(y-E)*C,i[3]=0,i[4]=(_-A)*R,i[5]=(1-(m+v))*R,i[6]=(x+w)*R,i[7]=0,i[8]=(y+E)*N,i[9]=(x-w)*N,i[10]=(1-(m+M))*N,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Xs.set(i[0],i[1],i[2]).length();const l=Xs.set(i[4],i[5],i[6]).length(),c=Xs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],_i.copy(this);const h=1/s,f=1/l,p=1/c;return _i.elements[0]*=h,_i.elements[1]*=h,_i.elements[2]*=h,_i.elements[4]*=f,_i.elements[5]*=f,_i.elements[6]*=f,_i.elements[8]*=p,_i.elements[9]*=p,_i.elements[10]*=p,t.setFromRotationMatrix(_i),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Mi){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let _,y;if(c===Mi)_=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===xo)_=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=_,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Mi){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(l-s),m=(t+e)*h,_=(n+i)*f;let y,M;if(c===Mi)y=(l+s)*p,M=-2*p;else if(c===xo)y=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-_,u[2]=0,u[6]=0,u[10]=M,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Xs=new D,_i=new lt,vS=new D(0,0,0),yS=new D(1,1,1),xr=new D,$l=new D,Qn=new D,tg=new lt,ng=new Pn;class Ha{constructor(e=0,t=0,n=0,i=Ha.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Zt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,_),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Zt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Zt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,_),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Zt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Zt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-Zt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return tg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(tg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ng.setFromEuler(this),this.setFromQuaternion(ng,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ha.DEFAULT_ORDER="XYZ";class ps{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let xS=0;const ig=new D,Ys=new Pn,Ji=new lt,ec=new D,$o=new D,SS=new D,MS=new Pn,rg=new D(1,0,0),sg=new D(0,1,0),og=new D(0,0,1),ES={type:"added"},wS={type:"removed"};class Pt extends ar{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:xS++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Pt.DEFAULT_UP.clone();const e=new D,t=new Ha,n=new Pn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new lt},normalMatrix:{value:new yt}}),this.matrix=new lt,this.matrixWorld=new lt,this.matrixAutoUpdate=Pt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ps,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ys.setFromAxisAngle(e,t),this.quaternion.multiply(Ys),this}rotateOnWorldAxis(e,t){return Ys.setFromAxisAngle(e,t),this.quaternion.premultiply(Ys),this}rotateX(e){return this.rotateOnAxis(rg,e)}rotateY(e){return this.rotateOnAxis(sg,e)}rotateZ(e){return this.rotateOnAxis(og,e)}translateOnAxis(e,t){return ig.copy(e).applyQuaternion(this.quaternion),this.position.add(ig.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(rg,e)}translateY(e){return this.translateOnAxis(sg,e)}translateZ(e){return this.translateOnAxis(og,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ji.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ec.copy(e):ec.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),$o.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ji.lookAt($o,ec,this.up):Ji.lookAt(ec,$o,this.up),this.quaternion.setFromRotationMatrix(Ji),i&&(Ji.extractRotation(i.matrixWorld),Ys.setFromRotationMatrix(Ji),this.quaternion.premultiply(Ys.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(ES)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(wS)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ji.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ji.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ji),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($o,e,SS),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($o,MS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),f=l(e.images),p=l(e.shapes),m=l(e.skeletons),_=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Pt.DEFAULT_UP=new D(0,1,0);Pt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const vi=new D,Ki=new D,Zh=new D,Qi=new D,qs=new D,Zs=new D,ag=new D,jh=new D,Jh=new D,Kh=new D;let tc=!1;class Wn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),vi.subVectors(e,t),i.cross(vi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){vi.subVectors(i,t),Ki.subVectors(n,t),Zh.subVectors(e,t);const l=vi.dot(vi),c=vi.dot(Ki),u=vi.dot(Zh),h=Ki.dot(Ki),f=Ki.dot(Zh),p=l*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,_=(h*u-c*f)*m,y=(l*f-c*u)*m;return s.set(1-_-y,y,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Qi),Qi.x>=0&&Qi.y>=0&&Qi.x+Qi.y<=1}static getUV(e,t,n,i,s,l,c,u){return tc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tc=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,Qi),u.setScalar(0),u.addScaledVector(s,Qi.x),u.addScaledVector(l,Qi.y),u.addScaledVector(c,Qi.z),u}static isFrontFacing(e,t,n,i){return vi.subVectors(n,t),Ki.subVectors(e,t),vi.cross(Ki).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return vi.subVectors(this.c,this.b),Ki.subVectors(this.a,this.b),vi.cross(Ki).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Wn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Wn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return tc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tc=!0),Wn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Wn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Wn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Wn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;qs.subVectors(i,n),Zs.subVectors(s,n),jh.subVectors(e,n);const u=qs.dot(jh),h=Zs.dot(jh);if(u<=0&&h<=0)return t.copy(n);Jh.subVectors(e,i);const f=qs.dot(Jh),p=Zs.dot(Jh);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return l=u/(u-f),t.copy(n).addScaledVector(qs,l);Kh.subVectors(e,s);const _=qs.dot(Kh),y=Zs.dot(Kh);if(y>=0&&_<=y)return t.copy(s);const M=_*h-u*y;if(M<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Zs,c);const x=f*y-_*p;if(x<=0&&p-f>=0&&_-y>=0)return ag.subVectors(s,i),c=(p-f)/(p-f+(_-y)),t.copy(i).addScaledVector(ag,c);const v=1/(x+M+m);return l=M*v,c=m*v,t.copy(n).addScaledVector(qs,l).addScaledVector(Zs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const ev={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Sr={h:0,s:0,l:0},nc={h:0,s:0,l:0};function Qh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class ke{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=an){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Lt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Lt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Lt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Lt.workingColorSpace){if(e=kd(e,1),t=Zt(t,0,1),n=Zt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Qh(l,s,e+1/3),this.g=Qh(l,s,e),this.b=Qh(l,s,e-1/3)}return Lt.toWorkingColorSpace(this,i),this}setStyle(e,t=an){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=an){const n=ev[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=vo(e.r),this.g=vo(e.g),this.b=vo(e.b),this}copyLinearToSRGB(e){return this.r=kh(e.r),this.g=kh(e.g),this.b=kh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=an){return Lt.fromWorkingColorSpace(bn.copy(this),e),Math.round(Zt(bn.r*255,0,255))*65536+Math.round(Zt(bn.g*255,0,255))*256+Math.round(Zt(bn.b*255,0,255))}getHexString(e=an){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Lt.workingColorSpace){Lt.fromWorkingColorSpace(bn.copy(this),t);const n=bn.r,i=bn.g,s=bn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=f<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=Lt.workingColorSpace){return Lt.fromWorkingColorSpace(bn.copy(this),t),e.r=bn.r,e.g=bn.g,e.b=bn.b,e}getStyle(e=an){Lt.fromWorkingColorSpace(bn.copy(this),e);const t=bn.r,n=bn.g,i=bn.b;return e!==an?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Sr),this.setHSL(Sr.h+e,Sr.s+t,Sr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Sr),e.getHSL(nc);const n=pa(Sr.h,nc.h,t),i=pa(Sr.s,nc.s,t),s=pa(Sr.l,nc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const bn=new ke;ke.NAMES=ev;let TS=0;class Sn extends ar{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:TS++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=fs,this.side=rr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Jc,this.blendDst=Kc,this.blendEquation=Ar,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ke(0,0,0),this.blendAlpha=0,this.depthFunc=va,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=pd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ss,this.stencilZFail=ss,this.stencilZPass=ss,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==fs&&(n.blending=this.blending),this.side!==rr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Jc&&(n.blendSrc=this.blendSrc),this.blendDst!==Kc&&(n.blendDst=this.blendDst),this.blendEquation!==Ar&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==va&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==pd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ss&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ss&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ss&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ur extends Sn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ke(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ba,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const tr=AS();function AS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;(h&8388608)===0;)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Gn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Zt(r,-65504,65504),tr.floatView[0]=r;const e=tr.uint32View[0],t=e>>23&511;return tr.baseTable[t]+((e&8388607)>>tr.shiftTable[t])}function ua(r){const e=r>>10;return tr.uint32View[0]=tr.mantissaTable[tr.offsetTable[e]+(r&1023)]+tr.exponentTable[e],tr.floatView[0]}const bS={toHalfFloat:Gn,fromHalfFloat:ua},sn=new D,ic=new fe;class Dt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ra,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Si,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn('THREE.BufferAttribute: "updateRange" is deprecated and removed in r169. Use "addUpdateRange()" instead.'),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ic.fromBufferAttribute(this,t),ic.applyMatrix3(e),this.setXY(t,ic.x,ic.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.applyMatrix3(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.applyMatrix4(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.applyNormalMatrix(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.transformDirection(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Xn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=gt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Xn(t,this.array)),t}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Xn(t,this.array)),t}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Xn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Xn(t,this.array)),t}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),s=gt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ra&&(e.usage=this.usage),e}}class CS extends Dt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class RS extends Dt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class PS extends Dt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class LS extends Dt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Gd extends Dt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class IS extends Dt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Wd extends Dt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class DS extends Dt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ua(this.array[e*this.itemSize]);return this.normalized&&(t=Xn(t,this.array)),t}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize]=Gn(t),this}getY(e){let t=ua(this.array[e*this.itemSize+1]);return this.normalized&&(t=Xn(t,this.array)),t}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+1]=Gn(t),this}getZ(e){let t=ua(this.array[e*this.itemSize+2]);return this.normalized&&(t=Xn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+2]=Gn(t),this}getW(e){let t=ua(this.array[e*this.itemSize+3]);return this.normalized&&(t=Xn(t,this.array)),t}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+3]=Gn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this.array[e+2]=Gn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),s=gt(s,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this.array[e+2]=Gn(i),this.array[e+3]=Gn(s),this}}class Ye extends Dt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class NS extends Dt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let US=0;const di=new lt,$h=new Pt,js=new D,$n=new zn,ea=new zn,gn=new D;class _t extends ar{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:US++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(K0(e)?Wd:Gd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new yt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return di.makeRotationFromQuaternion(e),this.applyMatrix4(di),this}rotateX(e){return di.makeRotationX(e),this.applyMatrix4(di),this}rotateY(e){return di.makeRotationY(e),this.applyMatrix4(di),this}rotateZ(e){return di.makeRotationZ(e),this.applyMatrix4(di),this}translate(e,t,n){return di.makeTranslation(e,t,n),this.applyMatrix4(di),this}scale(e,t,n){return di.makeScale(e,t,n),this.applyMatrix4(di),this}lookAt(e){return $h.lookAt(e),$h.updateMatrix(),this.applyMatrix4($h.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(js).negate(),this.translate(js.x,js.y,js.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ye(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];$n.setFromBufferAttribute(s),this.morphTargetsRelative?(gn.addVectors(this.boundingBox.min,$n.min),this.boundingBox.expandByPoint(gn),gn.addVectors(this.boundingBox.max,$n.max),this.boundingBox.expandByPoint(gn)):(this.boundingBox.expandByPoint($n.min),this.boundingBox.expandByPoint($n.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ln);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if($n.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];ea.setFromBufferAttribute(c),this.morphTargetsRelative?(gn.addVectors($n.min,ea.min),$n.expandByPoint(gn),gn.addVectors($n.max,ea.max),$n.expandByPoint(gn)):($n.expandByPoint(ea.min),$n.expandByPoint(ea.max))}$n.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)gn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(gn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)gn.fromBufferAttribute(c,h),u&&(js.fromBufferAttribute(e,h),gn.add(js)),i=Math.max(i,n.distanceToSquared(gn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Dt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],f=[];for(let L=0;L<c;L++)h[L]=new D,f[L]=new D;const p=new D,m=new D,_=new D,y=new fe,M=new fe,x=new fe,v=new D,w=new D;function E(L,B,j){p.fromArray(i,L*3),m.fromArray(i,B*3),_.fromArray(i,j*3),y.fromArray(l,L*2),M.fromArray(l,B*2),x.fromArray(l,j*2),m.sub(p),_.sub(p),M.sub(y),x.sub(y);const ae=1/(M.x*x.y-x.x*M.y);isFinite(ae)&&(v.copy(m).multiplyScalar(x.y).addScaledVector(_,-M.y).multiplyScalar(ae),w.copy(_).multiplyScalar(M.x).addScaledVector(m,-x.x).multiplyScalar(ae),h[L].add(v),h[B].add(v),h[j].add(v),f[L].add(w),f[B].add(w),f[j].add(w))}let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let L=0,B=A.length;L<B;++L){const j=A[L],ae=j.start,H=j.count;for(let Q=ae,oe=ae+H;Q<oe;Q+=3)E(n[Q+0],n[Q+1],n[Q+2])}const C=new D,R=new D,N=new D,F=new D;function b(L){N.fromArray(s,L*3),F.copy(N);const B=h[L];C.copy(B),C.sub(N.multiplyScalar(N.dot(B))).normalize(),R.crossVectors(F,B);const ae=R.dot(f[L])<0?-1:1;u[L*4]=C.x,u[L*4+1]=C.y,u[L*4+2]=C.z,u[L*4+3]=ae}for(let L=0,B=A.length;L<B;++L){const j=A[L],ae=j.start,H=j.count;for(let Q=ae,oe=ae+H;Q<oe;Q+=3)b(n[Q+0]),b(n[Q+1]),b(n[Q+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Dt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,_=n.count;m<_;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,l=new D,c=new D,u=new D,h=new D,f=new D,p=new D;if(e)for(let m=0,_=e.count;m<_;m+=3){const y=e.getX(m+0),M=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,M),l.fromBufferAttribute(t,x),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,_=t.count;m<_;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)gn.fromBufferAttribute(e,t),gn.normalize(),e.setXYZ(t,gn.x,gn.y,gn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let _=0,y=0;for(let M=0,x=u.length;M<x;M++){c.isInterleavedBufferAttribute?_=u[M]*c.data.stride+c.offset:_=u[M]*f;for(let v=0;v<f;v++)m[y++]=h[_++]}return new Dt(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new _t,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],_=e(m,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const _=h[p];f.push(_.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,_=p.length;m<_;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,f=l.length;h<f;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const lg=new lt,jr=new Ss,rc=new Ln,cg=new D,Js=new D,Ks=new D,Qs=new D,ef=new D,sc=new D,oc=new fe,ac=new fe,lc=new fe,ug=new D,hg=new D,fg=new D,cc=new D,uc=new D;class ln extends Pt{constructor(e=new _t,t=new Ur){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){sc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(ef.fromBufferAttribute(p,e),l?sc.addScaledVector(ef,f):sc.addScaledVector(ef.sub(t),f))}t.add(sc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),rc.copy(n.boundingSphere),rc.applyMatrix4(s),jr.copy(e.ray).recast(e.near),!(rc.containsPoint(jr.origin)===!1&&(jr.intersectSphere(rc,cg)===null||jr.origin.distanceToSquared(cg)>(e.far-e.near)**2))&&(lg.copy(s).invert(),jr.copy(e.ray).applyMatrix4(lg),!(n.boundingBox!==null&&jr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,jr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,_=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),E=Math.min(c.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,C=E;A<C;A+=3){const R=c.getX(A),N=c.getX(A+1),F=c.getX(A+2);i=hc(this,v,e,n,h,f,p,R,N,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),M=Math.min(c.count,_.start+_.count);for(let x=y,v=M;x<v;x+=3){const w=c.getX(x),E=c.getX(x+1),A=c.getX(x+2);i=hc(this,l,e,n,h,f,p,w,E,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),E=Math.min(u.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,C=E;A<C;A+=3){const R=A,N=A+1,F=A+2;i=hc(this,v,e,n,h,f,p,R,N,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),M=Math.min(u.count,_.start+_.count);for(let x=y,v=M;x<v;x+=3){const w=x,E=x+1,A=x+2;i=hc(this,l,e,n,h,f,p,w,E,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function OS(r,e,t,n,i,s,l,c){let u;if(e.side===Fn?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===rr,c),u===null)return null;uc.copy(c),uc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(uc);return h<t.near||h>t.far?null:{distance:h,point:uc.clone(),object:r}}function hc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Js),r.getVertexPosition(u,Ks),r.getVertexPosition(h,Qs);const f=OS(r,e,t,n,Js,Ks,Qs,cc);if(f){i&&(oc.fromBufferAttribute(i,c),ac.fromBufferAttribute(i,u),lc.fromBufferAttribute(i,h),f.uv=Wn.getInterpolation(cc,Js,Ks,Qs,oc,ac,lc,new fe)),s&&(oc.fromBufferAttribute(s,c),ac.fromBufferAttribute(s,u),lc.fromBufferAttribute(s,h),f.uv1=Wn.getInterpolation(cc,Js,Ks,Qs,oc,ac,lc,new fe),f.uv2=f.uv1),l&&(ug.fromBufferAttribute(l,c),hg.fromBufferAttribute(l,u),fg.fromBufferAttribute(l,h),f.normal=Wn.getInterpolation(cc,Js,Ks,Qs,ug,hg,fg,new D),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};Wn.getNormal(Js,Ks,Qs,p.normal),f.face=p}return f}class Ms extends _t{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],f=[],p=[];let m=0,_=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Ye(h,3)),this.setAttribute("normal",new Ye(f,3)),this.setAttribute("uv",new Ye(p,2));function y(M,x,v,w,E,A,C,R,N,F,b){const L=A/N,B=C/F,j=A/2,ae=C/2,H=R/2,Q=N+1,oe=F+1;let se=0,X=0;const Y=new D;for(let Z=0;Z<oe;Z++){const ee=Z*B-ae;for(let me=0;me<Q;me++){const J=me*L-j;Y[M]=J*w,Y[x]=ee*E,Y[v]=H,h.push(Y.x,Y.y,Y.z),Y[M]=0,Y[x]=0,Y[v]=R>0?1:-1,f.push(Y.x,Y.y,Y.z),p.push(me/N),p.push(1-Z/F),se+=1}}for(let Z=0;Z<F;Z++)for(let ee=0;ee<N;ee++){const me=m+ee+Q*Z,J=m+ee+Q*(Z+1),de=m+(ee+1)+Q*(Z+1),Ce=m+(ee+1)+Q*Z;u.push(me,J,Ce),u.push(J,de,Ce),X+=6}c.addGroup(_,X,b),_+=X,m+=se}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ms(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Mo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Un(r){const e={};for(let t=0;t<r.length;t++){const n=Mo(r[t]);for(const i in n)e[i]=n[i]}return e}function FS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function tv(r){return r.getRenderTarget()===null?r.outputColorSpace:Lt.workingColorSpace}const nv={clone:Mo,merge:Un};var zS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,BS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ki extends Sn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=zS,this.fragmentShader=BS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Mo(e.uniforms),this.uniformsGroups=FS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Va extends Pt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new lt,this.projectionMatrix=new lt,this.projectionMatrixInverse=new lt,this.coordinateSystem=Mi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class tn extends Va{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=So*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ds*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return So*2*Math.atan(Math.tan(ds*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ds*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const $s=-90,eo=1;class iv extends Pt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new tn($s,eo,e,t);i.layers=this.layers,this.add(i);const s=new tn($s,eo,e,t);s.layers=this.layers,this.add(s);const l=new tn($s,eo,e,t);l.layers=this.layers,this.add(l);const c=new tn($s,eo,e,t);c.layers=this.layers,this.add(c);const u=new tn($s,eo,e,t);u.layers=this.layers,this.add(u);const h=new tn($s,eo,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Mi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===xo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,_),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Ga extends jt{constructor(e,t,n,i,s,l,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:sr,super(e,t,n,i,s,l,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class rv extends Ei{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(ma("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Rr?an:ei),this.texture=new Ga(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:en}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ms(5,5,5),s=new ki({name:"CubemapFromEquirect",uniforms:Mo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Fn,blending:ir});s.uniforms.tEquirect.value=t;const l=new ln(i,s),c=t.minFilter;return t.minFilter===Ir&&(t.minFilter=en),new iv(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const tf=new D,kS=new D,HS=new yt;class er{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=tf.subVectors(n,t).cross(kS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(tf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||HS.getNormalMatrix(e),i=this.coplanarPoint(tf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Jr=new Ln,fc=new D;class Wa{constructor(e=new er,t=new er,n=new er,i=new er,s=new er,l=new er){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Mi){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],_=i[8],y=i[9],M=i[10],x=i[11],v=i[12],w=i[13],E=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-_,A-v).normalize(),n[1].setComponents(u+s,m+h,x+_,A+v).normalize(),n[2].setComponents(u+l,m+f,x+y,A+w).normalize(),n[3].setComponents(u-l,m-f,x-y,A-w).normalize(),n[4].setComponents(u-c,m-p,x-M,A-E).normalize(),t===Mi)n[5].setComponents(u+c,m+p,x+M,A+E).normalize();else if(t===xo)n[5].setComponents(c,p,M,E).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Jr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Jr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Jr)}intersectsSprite(e){return Jr.center.set(0,0,0),Jr.radius=.7071067811865476,Jr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Jr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(fc.x=i.normal.x>0?e.max.x:e.min.x,fc.y=i.normal.y>0?e.max.y:e.min.y,fc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(fc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function sv(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function VS(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,f){const p=h.array,m=h.usage,_=p.byteLength,y=r.createBuffer();r.bindBuffer(f,y),r.bufferData(f,p,m),h.onUploadCallback();let M;if(p instanceof Float32Array)M=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)M=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else M=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)M=r.SHORT;else if(p instanceof Uint32Array)M=r.UNSIGNED_INT;else if(p instanceof Int32Array)M=r.INT;else if(p instanceof Int8Array)M=r.BYTE;else if(p instanceof Uint8Array)M=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)M=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:y,type:M,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version,size:_}}function s(h,f,p){const m=f.array,_=f._updateRange,y=f.updateRanges;if(r.bindBuffer(p,h),_.count===-1&&y.length===0&&r.bufferSubData(p,0,m),y.length!==0){for(let M=0,x=y.length;M<x;M++){const v=y[M];t?r.bufferSubData(p,v.start*m.BYTES_PER_ELEMENT,m,v.start,v.count):r.bufferSubData(p,v.start*m.BYTES_PER_ELEMENT,m.subarray(v.start,v.start+v.count))}f.clearUpdateRanges()}_.count!==-1&&(t?r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m,_.offset,_.count):r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m.subarray(_.offset,_.offset+_.count)),_.count=-1),f.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f&&(r.deleteBuffer(f.buffer),n.delete(h))}function u(h,f){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);if(p===void 0)n.set(h,i(h,f));else if(p.version<h.version){if(p.size!==h.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(p.buffer,h,f),p.version=h.version}}return{get:l,remove:c,update:u}}class Xa extends _t{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,_=[],y=[],M=[],x=[];for(let v=0;v<f;v++){const w=v*m-l;for(let E=0;E<h;E++){const A=E*p-s;y.push(A,-w,0),M.push(0,0,1),x.push(E/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let w=0;w<c;w++){const E=w+h*v,A=w+h*(v+1),C=w+1+h*(v+1),R=w+1+h*v;_.push(E,A,R),_.push(A,C,R)}this.setIndex(_),this.setAttribute("position",new Ye(y,3)),this.setAttribute("normal",new Ye(M,3)),this.setAttribute("uv",new Ye(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xa(e.width,e.height,e.widthSegments,e.heightSegments)}}var GS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,WS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,XS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,YS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qS=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,ZS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,jS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,JS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,KS=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,QS=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,$S=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,eM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,tM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,nM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,iM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,rM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,sM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,oM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,aM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,lM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,cM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,uM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,hM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,fM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,dM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,pM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,mM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,gM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,_M=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,vM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,yM="gl_FragColor = linearToOutputTexel( gl_FragColor );",xM=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,SM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,MM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,EM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,wM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,TM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,AM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,bM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,CM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,RM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,PM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,LM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,IM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,DM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,NM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,UM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,OM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,FM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,zM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,BM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,kM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,HM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,VM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,GM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,WM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,XM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,YM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,qM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,ZM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,jM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,JM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,KM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,QM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,$M=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,eE=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,tE=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,nE=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,iE=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,rE=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,sE=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,oE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,aE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,lE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,cE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,uE=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,hE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,fE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,dE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,pE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,mE=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,gE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,_E=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,vE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,yE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,xE=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,SE=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ME=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,EE=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,wE=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,TE=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,AE=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,bE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,CE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,RE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,PE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,LE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,IE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,DE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,NE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,UE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,OE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,FE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,zE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,BE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,kE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,HE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const VE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,GE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,WE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,XE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,YE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,qE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,jE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,JE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,KE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,QE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,$E=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ew=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,tw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,nw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,iw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ow=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,aw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,cw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,uw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,hw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,dw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,_w=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,vw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,xw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Sw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,mt={alphahash_fragment:GS,alphahash_pars_fragment:WS,alphamap_fragment:XS,alphamap_pars_fragment:YS,alphatest_fragment:qS,alphatest_pars_fragment:ZS,aomap_fragment:jS,aomap_pars_fragment:JS,batching_pars_vertex:KS,batching_vertex:QS,begin_vertex:$S,beginnormal_vertex:eM,bsdfs:tM,iridescence_fragment:nM,bumpmap_pars_fragment:iM,clipping_planes_fragment:rM,clipping_planes_pars_fragment:sM,clipping_planes_pars_vertex:oM,clipping_planes_vertex:aM,color_fragment:lM,color_pars_fragment:cM,color_pars_vertex:uM,color_vertex:hM,common:fM,cube_uv_reflection_fragment:dM,defaultnormal_vertex:pM,displacementmap_pars_vertex:mM,displacementmap_vertex:gM,emissivemap_fragment:_M,emissivemap_pars_fragment:vM,colorspace_fragment:yM,colorspace_pars_fragment:xM,envmap_fragment:SM,envmap_common_pars_fragment:MM,envmap_pars_fragment:EM,envmap_pars_vertex:wM,envmap_physical_pars_fragment:OM,envmap_vertex:TM,fog_vertex:AM,fog_pars_vertex:bM,fog_fragment:CM,fog_pars_fragment:RM,gradientmap_pars_fragment:PM,lightmap_fragment:LM,lightmap_pars_fragment:IM,lights_lambert_fragment:DM,lights_lambert_pars_fragment:NM,lights_pars_begin:UM,lights_toon_fragment:FM,lights_toon_pars_fragment:zM,lights_phong_fragment:BM,lights_phong_pars_fragment:kM,lights_physical_fragment:HM,lights_physical_pars_fragment:VM,lights_fragment_begin:GM,lights_fragment_maps:WM,lights_fragment_end:XM,logdepthbuf_fragment:YM,logdepthbuf_pars_fragment:qM,logdepthbuf_pars_vertex:ZM,logdepthbuf_vertex:jM,map_fragment:JM,map_pars_fragment:KM,map_particle_fragment:QM,map_particle_pars_fragment:$M,metalnessmap_fragment:eE,metalnessmap_pars_fragment:tE,morphcolor_vertex:nE,morphnormal_vertex:iE,morphtarget_pars_vertex:rE,morphtarget_vertex:sE,normal_fragment_begin:oE,normal_fragment_maps:aE,normal_pars_fragment:lE,normal_pars_vertex:cE,normal_vertex:uE,normalmap_pars_fragment:hE,clearcoat_normal_fragment_begin:fE,clearcoat_normal_fragment_maps:dE,clearcoat_pars_fragment:pE,iridescence_pars_fragment:mE,opaque_fragment:gE,packing:_E,premultiplied_alpha_fragment:vE,project_vertex:yE,dithering_fragment:xE,dithering_pars_fragment:SE,roughnessmap_fragment:ME,roughnessmap_pars_fragment:EE,shadowmap_pars_fragment:wE,shadowmap_pars_vertex:TE,shadowmap_vertex:AE,shadowmask_pars_fragment:bE,skinbase_vertex:CE,skinning_pars_vertex:RE,skinning_vertex:PE,skinnormal_vertex:LE,specularmap_fragment:IE,specularmap_pars_fragment:DE,tonemapping_fragment:NE,tonemapping_pars_fragment:UE,transmission_fragment:OE,transmission_pars_fragment:FE,uv_pars_fragment:zE,uv_pars_vertex:BE,uv_vertex:kE,worldpos_vertex:HE,background_vert:VE,background_frag:GE,backgroundCube_vert:WE,backgroundCube_frag:XE,cube_vert:YE,cube_frag:qE,depth_vert:ZE,depth_frag:jE,distanceRGBA_vert:JE,distanceRGBA_frag:KE,equirect_vert:QE,equirect_frag:$E,linedashed_vert:ew,linedashed_frag:tw,meshbasic_vert:nw,meshbasic_frag:iw,meshlambert_vert:rw,meshlambert_frag:sw,meshmatcap_vert:ow,meshmatcap_frag:aw,meshnormal_vert:lw,meshnormal_frag:cw,meshphong_vert:uw,meshphong_frag:hw,meshphysical_vert:fw,meshphysical_frag:dw,meshtoon_vert:pw,meshtoon_frag:mw,points_vert:gw,points_frag:_w,shadow_vert:vw,shadow_frag:yw,sprite_vert:xw,sprite_frag:Sw},Pe={common:{diffuse:{value:new ke(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new yt},alphaMap:{value:null},alphaMapTransform:{value:new yt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new yt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new yt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new yt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new yt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new yt},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new yt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new yt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new yt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new yt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ke(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ke(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new yt},alphaTest:{value:0},uvTransform:{value:new yt}},sprite:{diffuse:{value:new ke(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new yt},alphaMap:{value:null},alphaMapTransform:{value:new yt},alphaTest:{value:0}}},xi={basic:{uniforms:Un([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.fog]),vertexShader:mt.meshbasic_vert,fragmentShader:mt.meshbasic_frag},lambert:{uniforms:Un([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new ke(0)}}]),vertexShader:mt.meshlambert_vert,fragmentShader:mt.meshlambert_frag},phong:{uniforms:Un([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new ke(0)},specular:{value:new ke(1118481)},shininess:{value:30}}]),vertexShader:mt.meshphong_vert,fragmentShader:mt.meshphong_frag},standard:{uniforms:Un([Pe.common,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.roughnessmap,Pe.metalnessmap,Pe.fog,Pe.lights,{emissive:{value:new ke(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag},toon:{uniforms:Un([Pe.common,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.gradientmap,Pe.fog,Pe.lights,{emissive:{value:new ke(0)}}]),vertexShader:mt.meshtoon_vert,fragmentShader:mt.meshtoon_frag},matcap:{uniforms:Un([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,{matcap:{value:null}}]),vertexShader:mt.meshmatcap_vert,fragmentShader:mt.meshmatcap_frag},points:{uniforms:Un([Pe.points,Pe.fog]),vertexShader:mt.points_vert,fragmentShader:mt.points_frag},dashed:{uniforms:Un([Pe.common,Pe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:mt.linedashed_vert,fragmentShader:mt.linedashed_frag},depth:{uniforms:Un([Pe.common,Pe.displacementmap]),vertexShader:mt.depth_vert,fragmentShader:mt.depth_frag},normal:{uniforms:Un([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,{opacity:{value:1}}]),vertexShader:mt.meshnormal_vert,fragmentShader:mt.meshnormal_frag},sprite:{uniforms:Un([Pe.sprite,Pe.fog]),vertexShader:mt.sprite_vert,fragmentShader:mt.sprite_frag},background:{uniforms:{uvTransform:{value:new yt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:mt.background_vert,fragmentShader:mt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:mt.backgroundCube_vert,fragmentShader:mt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:mt.cube_vert,fragmentShader:mt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:mt.equirect_vert,fragmentShader:mt.equirect_frag},distanceRGBA:{uniforms:Un([Pe.common,Pe.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:mt.distanceRGBA_vert,fragmentShader:mt.distanceRGBA_frag},shadow:{uniforms:Un([Pe.lights,Pe.fog,{color:{value:new ke(0)},opacity:{value:1}}]),vertexShader:mt.shadow_vert,fragmentShader:mt.shadow_frag}};xi.physical={uniforms:Un([xi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new yt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new yt},clearcoatNormalScale:{value:new fe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new yt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new yt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new yt},sheen:{value:0},sheenColor:{value:new ke(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new yt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new yt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new yt},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new yt},attenuationDistance:{value:0},attenuationColor:{value:new ke(0)},specularColor:{value:new ke(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new yt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new yt},anisotropyVector:{value:new fe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new yt}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag};const dc={r:0,b:0,g:0};function Mw(r,e,t,n,i,s,l){const c=new ke(0);let u=s===!0?0:1,h,f,p=null,m=0,_=null;function y(x,v){let w=!1,E=v.isScene===!0?v.background:null;E&&E.isTexture&&(E=(v.backgroundBlurriness>0?t:e).get(E)),E===null?M(c,u):E&&E.isColor&&(M(E,1),w=!0);const A=r.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,l):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),E&&(E.isCubeTexture||E.mapping===Ao)?(f===void 0&&(f=new ln(new Ms(1,1,1),new ki({name:"BackgroundCubeMaterial",uniforms:Mo(xi.backgroundCube.uniforms),vertexShader:xi.backgroundCube.vertexShader,fragmentShader:xi.backgroundCube.fragmentShader,side:Fn,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(C,R,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),f.material.uniforms.envMap.value=E,f.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,f.material.toneMapped=Lt.getTransfer(E.colorSpace)!==Ft,(p!==E||m!==E.version||_!==r.toneMapping)&&(f.material.needsUpdate=!0,p=E,m=E.version,_=r.toneMapping),f.layers.enableAll(),x.unshift(f,f.geometry,f.material,0,0,null)):E&&E.isTexture&&(h===void 0&&(h=new ln(new Xa(2,2),new ki({name:"BackgroundMaterial",uniforms:Mo(xi.background.uniforms),vertexShader:xi.background.vertexShader,fragmentShader:xi.background.fragmentShader,side:rr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=E,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.toneMapped=Lt.getTransfer(E.colorSpace)!==Ft,E.matrixAutoUpdate===!0&&E.updateMatrix(),h.material.uniforms.uvTransform.value.copy(E.matrix),(p!==E||m!==E.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,p=E,m=E.version,_=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function M(x,v){x.getRGB(dc,tv(r)),n.buffers.color.setClear(dc.r,dc.g,dc.b,v,l)}return{getClearColor:function(){return c},setClearColor:function(x,v=1){c.set(x),u=v,M(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,M(c,u)},render:y}}function Ew(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,f=!1;function p(H,Q,oe,se,X){let Y=!1;if(l){const Z=M(se,oe,Q);h!==Z&&(h=Z,_(h.object)),Y=v(H,se,oe,X),Y&&w(H,se,oe,X)}else{const Z=Q.wireframe===!0;(h.geometry!==se.id||h.program!==oe.id||h.wireframe!==Z)&&(h.geometry=se.id,h.program=oe.id,h.wireframe=Z,Y=!0)}X!==null&&t.update(X,r.ELEMENT_ARRAY_BUFFER),(Y||f)&&(f=!1,F(H,Q,oe,se),X!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(X).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function _(H){return n.isWebGL2?r.bindVertexArray(H):s.bindVertexArrayOES(H)}function y(H){return n.isWebGL2?r.deleteVertexArray(H):s.deleteVertexArrayOES(H)}function M(H,Q,oe){const se=oe.wireframe===!0;let X=c[H.id];X===void 0&&(X={},c[H.id]=X);let Y=X[Q.id];Y===void 0&&(Y={},X[Q.id]=Y);let Z=Y[se];return Z===void 0&&(Z=x(m()),Y[se]=Z),Z}function x(H){const Q=[],oe=[],se=[];for(let X=0;X<i;X++)Q[X]=0,oe[X]=0,se[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Q,enabledAttributes:oe,attributeDivisors:se,object:H,attributes:{},index:null}}function v(H,Q,oe,se){const X=h.attributes,Y=Q.attributes;let Z=0;const ee=oe.getAttributes();for(const me in ee)if(ee[me].location>=0){const de=X[me];let Ce=Y[me];if(Ce===void 0&&(me==="instanceMatrix"&&H.instanceMatrix&&(Ce=H.instanceMatrix),me==="instanceColor"&&H.instanceColor&&(Ce=H.instanceColor)),de===void 0||de.attribute!==Ce||Ce&&de.data!==Ce.data)return!0;Z++}return h.attributesNum!==Z||h.index!==se}function w(H,Q,oe,se){const X={},Y=Q.attributes;let Z=0;const ee=oe.getAttributes();for(const me in ee)if(ee[me].location>=0){let de=Y[me];de===void 0&&(me==="instanceMatrix"&&H.instanceMatrix&&(de=H.instanceMatrix),me==="instanceColor"&&H.instanceColor&&(de=H.instanceColor));const Ce={};Ce.attribute=de,de&&de.data&&(Ce.data=de.data),X[me]=Ce,Z++}h.attributes=X,h.attributesNum=Z,h.index=se}function E(){const H=h.newAttributes;for(let Q=0,oe=H.length;Q<oe;Q++)H[Q]=0}function A(H){C(H,0)}function C(H,Q){const oe=h.newAttributes,se=h.enabledAttributes,X=h.attributeDivisors;oe[H]=1,se[H]===0&&(r.enableVertexAttribArray(H),se[H]=1),X[H]!==Q&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](H,Q),X[H]=Q)}function R(){const H=h.newAttributes,Q=h.enabledAttributes;for(let oe=0,se=Q.length;oe<se;oe++)Q[oe]!==H[oe]&&(r.disableVertexAttribArray(oe),Q[oe]=0)}function N(H,Q,oe,se,X,Y,Z){Z===!0?r.vertexAttribIPointer(H,Q,oe,X,Y):r.vertexAttribPointer(H,Q,oe,se,X,Y)}function F(H,Q,oe,se){if(n.isWebGL2===!1&&(H.isInstancedMesh||se.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;E();const X=se.attributes,Y=oe.getAttributes(),Z=Q.defaultAttributeValues;for(const ee in Y){const me=Y[ee];if(me.location>=0){let J=X[ee];if(J===void 0&&(ee==="instanceMatrix"&&H.instanceMatrix&&(J=H.instanceMatrix),ee==="instanceColor"&&H.instanceColor&&(J=H.instanceColor)),J!==void 0){const de=J.normalized,Ce=J.itemSize,Fe=t.get(J);if(Fe===void 0)continue;const Ue=Fe.buffer,rt=Fe.type,nt=Fe.bytesPerElement,We=n.isWebGL2===!0&&(rt===r.INT||rt===r.UNSIGNED_INT||J.gpuType===Pd);if(J.isInterleavedBufferAttribute){const Ge=J.data,z=Ge.stride,ve=J.offset;if(Ge.isInstancedInterleavedBuffer){for(let he=0;he<me.locationSize;he++)C(me.location+he,Ge.meshPerAttribute);H.isInstancedMesh!==!0&&se._maxInstanceCount===void 0&&(se._maxInstanceCount=Ge.meshPerAttribute*Ge.count)}else for(let he=0;he<me.locationSize;he++)A(me.location+he);r.bindBuffer(r.ARRAY_BUFFER,Ue);for(let he=0;he<me.locationSize;he++)N(me.location+he,Ce/me.locationSize,rt,de,z*nt,(ve+Ce/me.locationSize*he)*nt,We)}else{if(J.isInstancedBufferAttribute){for(let Ge=0;Ge<me.locationSize;Ge++)C(me.location+Ge,J.meshPerAttribute);H.isInstancedMesh!==!0&&se._maxInstanceCount===void 0&&(se._maxInstanceCount=J.meshPerAttribute*J.count)}else for(let Ge=0;Ge<me.locationSize;Ge++)A(me.location+Ge);r.bindBuffer(r.ARRAY_BUFFER,Ue);for(let Ge=0;Ge<me.locationSize;Ge++)N(me.location+Ge,Ce/me.locationSize,rt,de,Ce*nt,Ce/me.locationSize*Ge*nt,We)}}else if(Z!==void 0){const de=Z[ee];if(de!==void 0)switch(de.length){case 2:r.vertexAttrib2fv(me.location,de);break;case 3:r.vertexAttrib3fv(me.location,de);break;case 4:r.vertexAttrib4fv(me.location,de);break;default:r.vertexAttrib1fv(me.location,de)}}}}R()}function b(){j();for(const H in c){const Q=c[H];for(const oe in Q){const se=Q[oe];for(const X in se)y(se[X].object),delete se[X];delete Q[oe]}delete c[H]}}function L(H){if(c[H.id]===void 0)return;const Q=c[H.id];for(const oe in Q){const se=Q[oe];for(const X in se)y(se[X].object),delete se[X];delete Q[oe]}delete c[H.id]}function B(H){for(const Q in c){const oe=c[Q];if(oe[H.id]===void 0)continue;const se=oe[H.id];for(const X in se)y(se[X].object),delete se[X];delete oe[H.id]}}function j(){ae(),f=!0,h!==u&&(h=u,_(h.object))}function ae(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:j,resetDefaultState:ae,dispose:b,releaseStatesOfGeometry:L,releaseStatesOfProgram:B,initAttributes:E,enableAttribute:A,disableUnusedAttributes:R}}function ww(r,e,t,n){const i=n.isWebGL2;let s;function l(f){s=f}function c(f,p){r.drawArrays(s,f,p),t.update(p,s,1)}function u(f,p,m){if(m===0)return;let _,y;if(i)_=r,y="drawArraysInstanced";else if(_=e.get("ANGLE_instanced_arrays"),y="drawArraysInstancedANGLE",_===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[y](s,f,p,m),t.update(p,s,m)}function h(f,p,m){if(m===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let y=0;y<m;y++)this.render(f[y],p[y]);else{_.multiDrawArraysWEBGL(s,f,0,p,0,m);let y=0;for(let M=0;M<m;M++)y+=p[M];t.update(y,s,1)}}this.setMode=l,this.render=c,this.renderInstances=u,this.renderMultiDraw=h}function Tw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(N){if(N==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";N="mediump"}return N==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),M=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),v=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),E=m>0,A=l||e.has("OES_texture_float"),C=E&&A,R=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:y,maxAttributes:M,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:E,floatFragmentTextures:A,floatVertexTextures:C,maxSamples:R}}function Aw(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new er,c=new yt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const _=p.length!==0||m||n!==0||i;return i=m,n=p.length,_},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,_){const y=p.clippingPlanes,M=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const w=s?0:n,E=w*4;let A=v.clippingState||null;u.value=A,A=f(y,m,E,_);for(let C=0;C!==E;++C)A[C]=t[C];v.clippingState=A,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,_,y){const M=p!==null?p.length:0;let x=null;if(M!==0){if(x=u.value,y!==!0||x===null){const v=_+M*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<v)&&(x=new Float32Array(v));for(let E=0,A=_;E!==M;++E,A+=4)l.copy(p[E]).applyMatrix4(w,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,x}}function bw(r){let e=new WeakMap;function t(l,c){return c===ya?l.mapping=sr:c===xa&&(l.mapping=Lr),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===ya||c===xa)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new rv(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Pr extends Va{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const po=4,dg=[.125,.215,.35,.446,.526,.582],as=20,nf=new Pr,pg=new ke;let rf=null,sf=0,of=0;const os=(1+Math.sqrt(5))/2,to=1/os,mg=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,os,to),new D(0,os,-to),new D(to,0,os),new D(-to,0,os),new D(os,to,0),new D(-os,to,0)];class _d{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){rf=this._renderer.getRenderTarget(),sf=this._renderer.getActiveCubeFace(),of=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=vg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=_g(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rf,sf,of),e.scissorTest=!1,pc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===sr||e.mapping===Lr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),rf=this._renderer.getRenderTarget(),sf=this._renderer.getActiveCubeFace(),of=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:en,minFilter:en,generateMipmaps:!1,type:yo,format:On,colorSpace:Bi,depthBuffer:!1},i=gg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=gg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Cw(s)),this._blurMaterial=Rw(s,e,t)}return i}_compileMaterial(e){const t=new ln(this._lodPlanes[0],e);this._renderer.compile(t,nf)}_sceneToCubeUV(e,t,n,i){const c=new tn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(pg),f.toneMapping=Oi,f.autoClear=!1;const _=new Ur({name:"PMREM.Background",side:Fn,depthWrite:!1,depthTest:!1}),y=new ln(new Ms,_);let M=!1;const x=e.background;x?x.isColor&&(_.color.copy(x),e.background=null,M=!0):(_.color.copy(pg),M=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):w===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const E=this._cubeSize;pc(i,w*E,v>2?E:0,E,E),f.setRenderTarget(i),M&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===sr||e.mapping===Lr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=vg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=_g());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new ln(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;pc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,nf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=mg[(i-1)%mg.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new ln(this._lodPlanes[i],h),m=h.uniforms,_=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*as-1),M=s/y,x=isFinite(s)?1+Math.floor(f*M):as;x>as&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${as}`);const v=[];let w=0;for(let N=0;N<as;++N){const F=N/M,b=Math.exp(-F*F/2);v.push(b),N===0?w+=b:N<x&&(w+=2*b)}for(let N=0;N<v.length;N++)v[N]=v[N]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:E}=this;m.dTheta.value=y,m.mipInt.value=E-n;const A=this._sizeLods[i],C=3*A*(i>E-po?i-E+po:0),R=4*(this._cubeSize-A);pc(t,C,R,3*A,2*A),u.setRenderTarget(t),u.render(p,nf)}}function Cw(r){const e=[],t=[],n=[];let i=r;const s=r-po+1+dg.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-po?u=dg[l-r+po-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],_=6,y=6,M=3,x=2,v=1,w=new Float32Array(M*y*_),E=new Float32Array(x*y*_),A=new Float32Array(v*y*_);for(let R=0;R<_;R++){const N=R%3*2/3-1,F=R>2?0:-1,b=[N,F,0,N+2/3,F,0,N+2/3,F+1,0,N,F,0,N+2/3,F+1,0,N,F+1,0];w.set(b,M*y*R),E.set(m,x*y*R);const L=[R,R,R,R,R,R];A.set(L,v*y*R)}const C=new _t;C.setAttribute("position",new Dt(w,M)),C.setAttribute("uv",new Dt(E,x)),C.setAttribute("faceIndex",new Dt(A,v)),e.push(C),i>po&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function gg(r,e,t){const n=new Ei(r,e,t);return n.texture.mapping=Ao,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function pc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Rw(r,e,t){const n=new Float32Array(as),i=new D(0,1,0);return new ki({name:"SphericalGaussianBlur",defines:{n:as,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Xd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ir,depthTest:!1,depthWrite:!1})}function _g(){return new ki({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Xd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ir,depthTest:!1,depthWrite:!1})}function vg(){return new ki({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Xd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ir,depthTest:!1,depthWrite:!1})}function Xd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Pw(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ya||u===xa,f=u===sr||u===Lr;if(h||f)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new _d(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||f&&p&&i(p)){t===null&&(t=new _d(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function Lw(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Iw(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const M=m.morphAttributes[y];for(let x=0,v=M.length;x<v;x++)e.remove(M[x])}m.removeEventListener("dispose",l),delete i[m.id];const _=s.get(m);_&&(e.remove(_),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const _=p.morphAttributes;for(const y in _){const M=_[y];for(let x=0,v=M.length;x<v;x++)e.update(M[x],r.ARRAY_BUFFER)}}function h(p){const m=[],_=p.index,y=p.attributes.position;let M=0;if(_!==null){const w=_.array;M=_.version;for(let E=0,A=w.length;E<A;E+=3){const C=w[E+0],R=w[E+1],N=w[E+2];m.push(C,R,R,N,N,C)}}else if(y!==void 0){const w=y.array;M=y.version;for(let E=0,A=w.length/3-1;E<A;E+=3){const C=E+0,R=E+1,N=E+2;m.push(C,R,R,N,N,C)}}else return;const x=new(K0(m)?Wd:Gd)(m,1);x.version=M;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function f(p){const m=s.get(p);if(m){const _=p.index;_!==null&&m.version<_.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function Dw(r,e,t,n){const i=n.isWebGL2;let s;function l(_){s=_}let c,u;function h(_){c=_.type,u=_.bytesPerElement}function f(_,y){r.drawElements(s,y,c,_*u),t.update(y,s,1)}function p(_,y,M){if(M===0)return;let x,v;if(i)x=r,v="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[v](s,y,c,_*u,M),t.update(y,s,M)}function m(_,y,M){if(M===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let v=0;v<M;v++)this.render(_[v]/u,y[v]);else{x.multiDrawElementsWEBGL(s,y,0,c,_,0,M);let v=0;for(let w=0;w<M;w++)v+=y[w];t.update(v,s,1)}}this.setMode=l,this.setIndex=h,this.render=f,this.renderInstances=p,this.renderMultiDraw=m}function Nw(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Uw(r,e){return r[0]-e[0]}function Ow(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Fw(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new It,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,f,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,y=_!==void 0?_.length:0;let M=s.get(f);if(M===void 0||M.count!==y){let H=function(){j.dispose(),s.delete(f),f.removeEventListener("dispose",H)};M!==void 0&&M.texture.dispose();const w=f.morphAttributes.position!==void 0,E=f.morphAttributes.normal!==void 0,A=f.morphAttributes.color!==void 0,C=f.morphAttributes.position||[],R=f.morphAttributes.normal||[],N=f.morphAttributes.color||[];let F=0;w===!0&&(F=1),E===!0&&(F=2),A===!0&&(F=3);let b=f.attributes.position.count*F,L=1;b>e.maxTextureSize&&(L=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const B=new Float32Array(b*L*4*y),j=new uu(B,b,L,y);j.type=Si,j.needsUpdate=!0;const ae=F*4;for(let Q=0;Q<y;Q++){const oe=C[Q],se=R[Q],X=N[Q],Y=b*L*4*Q;for(let Z=0;Z<oe.count;Z++){const ee=Z*ae;w===!0&&(l.fromBufferAttribute(oe,Z),B[Y+ee+0]=l.x,B[Y+ee+1]=l.y,B[Y+ee+2]=l.z,B[Y+ee+3]=0),E===!0&&(l.fromBufferAttribute(se,Z),B[Y+ee+4]=l.x,B[Y+ee+5]=l.y,B[Y+ee+6]=l.z,B[Y+ee+7]=0),A===!0&&(l.fromBufferAttribute(X,Z),B[Y+ee+8]=l.x,B[Y+ee+9]=l.y,B[Y+ee+10]=l.z,B[Y+ee+11]=X.itemSize===4?l.w:1)}}M={count:y,texture:j,size:new fe(b,L)},s.set(f,M),f.addEventListener("dispose",H)}let x=0;for(let w=0;w<m.length;w++)x+=m[w];const v=f.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",v),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",M.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",M.size)}else{const _=m===void 0?0:m.length;let y=n[f.id];if(y===void 0||y.length!==_){y=[];for(let E=0;E<_;E++)y[E]=[E,0];n[f.id]=y}for(let E=0;E<_;E++){const A=y[E];A[0]=E,A[1]=m[E]}y.sort(Ow);for(let E=0;E<8;E++)E<_&&y[E][1]?(c[E][0]=y[E][0],c[E][1]=y[E][1]):(c[E][0]=Number.MAX_SAFE_INTEGER,c[E][1]=0);c.sort(Uw);const M=f.morphAttributes.position,x=f.morphAttributes.normal;let v=0;for(let E=0;E<8;E++){const A=c[E],C=A[0],R=A[1];C!==Number.MAX_SAFE_INTEGER&&R?(M&&f.getAttribute("morphTarget"+E)!==M[C]&&f.setAttribute("morphTarget"+E,M[C]),x&&f.getAttribute("morphNormal"+E)!==x[C]&&f.setAttribute("morphNormal"+E,x[C]),i[E]=R,v+=R):(M&&f.hasAttribute("morphTarget"+E)===!0&&f.deleteAttribute("morphTarget"+E),x&&f.hasAttribute("morphNormal"+E)===!0&&f.deleteAttribute("morphNormal"+E),i[E]=0)}const w=f.morphTargetsRelative?1:1-v;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function zw(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}class Yd extends jt{constructor(e,t,n,i,s,l,c,u,h,f){if(f=f!==void 0?f:Cr,f!==Cr&&f!==_s)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Cr&&(n=nr),n===void 0&&f===_s&&(n=br),super(null,i,s,l,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:$t,this.minFilter=u!==void 0?u:$t,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const ov=new jt,av=new Yd(1,1);av.compareFunction=Bd;const lv=new uu,cv=new Vd,uv=new Ga,yg=[],xg=[],Sg=new Float32Array(16),Mg=new Float32Array(9),Eg=new Float32Array(4);function bo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=yg[i];if(s===void 0&&(s=new Float32Array(i),yg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function cn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function un(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function hu(r,e){let t=xg[e];t===void 0&&(t=new Int32Array(e),xg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Bw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function kw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2fv(this.addr,e),un(t,e)}}function Hw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(cn(t,e))return;r.uniform3fv(this.addr,e),un(t,e)}}function Vw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4fv(this.addr,e),un(t,e)}}function Gw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;Eg.set(n),r.uniformMatrix2fv(this.addr,!1,Eg),un(t,n)}}function Ww(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;Mg.set(n),r.uniformMatrix3fv(this.addr,!1,Mg),un(t,n)}}function Xw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;Sg.set(n),r.uniformMatrix4fv(this.addr,!1,Sg),un(t,n)}}function Yw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function qw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2iv(this.addr,e),un(t,e)}}function Zw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;r.uniform3iv(this.addr,e),un(t,e)}}function jw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4iv(this.addr,e),un(t,e)}}function Jw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function Kw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2uiv(this.addr,e),un(t,e)}}function Qw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;r.uniform3uiv(this.addr,e),un(t,e)}}function $w(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4uiv(this.addr,e),un(t,e)}}function e1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?av:ov;t.setTexture2D(e||s,i)}function t1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||cv,i)}function n1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||uv,i)}function i1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||lv,i)}function r1(r){switch(r){case 5126:return Bw;case 35664:return kw;case 35665:return Hw;case 35666:return Vw;case 35674:return Gw;case 35675:return Ww;case 35676:return Xw;case 5124:case 35670:return Yw;case 35667:case 35671:return qw;case 35668:case 35672:return Zw;case 35669:case 35673:return jw;case 5125:return Jw;case 36294:return Kw;case 36295:return Qw;case 36296:return $w;case 35678:case 36198:case 36298:case 36306:case 35682:return e1;case 35679:case 36299:case 36307:return t1;case 35680:case 36300:case 36308:case 36293:return n1;case 36289:case 36303:case 36311:case 36292:return i1}}function s1(r,e){r.uniform1fv(this.addr,e)}function o1(r,e){const t=bo(e,this.size,2);r.uniform2fv(this.addr,t)}function a1(r,e){const t=bo(e,this.size,3);r.uniform3fv(this.addr,t)}function l1(r,e){const t=bo(e,this.size,4);r.uniform4fv(this.addr,t)}function c1(r,e){const t=bo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function u1(r,e){const t=bo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function h1(r,e){const t=bo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function f1(r,e){r.uniform1iv(this.addr,e)}function d1(r,e){r.uniform2iv(this.addr,e)}function p1(r,e){r.uniform3iv(this.addr,e)}function m1(r,e){r.uniform4iv(this.addr,e)}function g1(r,e){r.uniform1uiv(this.addr,e)}function _1(r,e){r.uniform2uiv(this.addr,e)}function v1(r,e){r.uniform3uiv(this.addr,e)}function y1(r,e){r.uniform4uiv(this.addr,e)}function x1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||ov,s[l])}function S1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||cv,s[l])}function M1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||uv,s[l])}function E1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||lv,s[l])}function w1(r){switch(r){case 5126:return s1;case 35664:return o1;case 35665:return a1;case 35666:return l1;case 35674:return c1;case 35675:return u1;case 35676:return h1;case 5124:case 35670:return f1;case 35667:case 35671:return d1;case 35668:case 35672:return p1;case 35669:case 35673:return m1;case 5125:return g1;case 36294:return _1;case 36295:return v1;case 36296:return y1;case 35678:case 36198:case 36298:case 36306:case 35682:return x1;case 35679:case 36299:case 36307:return S1;case 35680:case 36300:case 36308:case 36293:return M1;case 36289:case 36303:case 36311:case 36292:return E1}}class T1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=r1(t.type)}}class A1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=w1(t.type)}}class b1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const af=/(\w+)(\])?(\[|\.)?/g;function wg(r,e){r.seq.push(e),r.map[e.id]=e}function C1(r,e,t){const n=r.name,i=n.length;for(af.lastIndex=0;;){const s=af.exec(n),l=af.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){wg(t,h===void 0?new T1(c,r,e):new A1(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new b1(c),wg(t,p)),t=p}}}class Zc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);C1(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function Tg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const R1=37297;let P1=0;function L1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function I1(r){const e=Lt.getPrimaries(Lt.workingColorSpace),t=Lt.getPrimaries(r);let n;switch(e===t?n="":e===Ca&&t===ba?n="LinearDisplayP3ToLinearSRGB":e===ba&&t===Ca&&(n="LinearSRGBToLinearDisplayP3"),r){case Bi:case ka:return[n,"LinearTransferOETF"];case an:case cu:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function Ag(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+L1(r.getShaderSource(e),l)}else return i}function D1(r,e){const t=I1(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function N1(r,e){let t;switch(e){case T0:t="Linear";break;case A0:t="Reinhard";break;case b0:t="OptimizedCineon";break;case Cd:t="ACESFilmic";break;case C0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function U1(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ha).join(`
`)}function O1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function F1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function ha(r){return r!==""}function bg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Cg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const z1=/^[ \t]*#include +<([\w\d./]+)>/gm;function vd(r){return r.replace(z1,k1)}const B1=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function k1(r,e){let t=mt[e];if(t===void 0){const n=B1.get(e);if(n!==void 0)t=mt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return vd(t)}const H1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Rg(r){return r.replace(H1,V1)}function V1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Pg(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function G1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===su?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===fa?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===yi&&(e="SHADOWMAP_TYPE_VSM"),e}function W1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case sr:case Lr:e="ENVMAP_TYPE_CUBE";break;case Ao:e="ENVMAP_TYPE_CUBE_UV";break}return e}function X1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Lr:e="ENVMAP_MODE_REFRACTION";break}return e}function Y1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ba:e="ENVMAP_BLENDING_MULTIPLY";break;case E0:e="ENVMAP_BLENDING_MIX";break;case w0:e="ENVMAP_BLENDING_ADD";break}return e}function q1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function Z1(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=G1(t),h=W1(t),f=X1(t),p=Y1(t),m=q1(t),_=t.isWebGL2?"":U1(t),y=O1(s),M=i.createProgram();let x,v,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ha).join(`
`),x.length>0&&(x+=`
`),v=[_,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ha).join(`
`),v.length>0&&(v+=`
`)):(x=[Pg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ha).join(`
`),v=[_,Pg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Oi?"#define TONE_MAPPING":"",t.toneMapping!==Oi?mt.tonemapping_pars_fragment:"",t.toneMapping!==Oi?N1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",mt.colorspace_pars_fragment,D1("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ha).join(`
`)),l=vd(l),l=bg(l,t),l=Cg(l,t),c=vd(c),c=bg(c,t),c=Cg(c,t),l=Rg(l),c=Rg(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,v=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===md?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===md?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const E=w+x+l,A=w+v+c,C=Tg(i,i.VERTEX_SHADER,E),R=Tg(i,i.FRAGMENT_SHADER,A);i.attachShader(M,C),i.attachShader(M,R),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function N(B){if(r.debug.checkShaderErrors){const j=i.getProgramInfoLog(M).trim(),ae=i.getShaderInfoLog(C).trim(),H=i.getShaderInfoLog(R).trim();let Q=!0,oe=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(Q=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,C,R);else{const se=Ag(i,C,"vertex"),X=Ag(i,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Program Info Log: `+j+`
`+se+`
`+X)}else j!==""?console.warn("THREE.WebGLProgram: Program Info Log:",j):(ae===""||H==="")&&(oe=!1);oe&&(B.diagnostics={runnable:Q,programLog:j,vertexShader:{log:ae,prefix:x},fragmentShader:{log:H,prefix:v}})}i.deleteShader(C),i.deleteShader(R),F=new Zc(i,M),b=F1(i,M)}let F;this.getUniforms=function(){return F===void 0&&N(this),F};let b;this.getAttributes=function(){return b===void 0&&N(this),b};let L=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return L===!1&&(L=i.getProgramParameter(M,R1)),L},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=P1++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=C,this.fragmentShader=R,this}let j1=0;class J1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new K1(e),t.set(e,n)),n}}class K1{constructor(e){this.id=j1++,this.code=e,this.usedTimes=0}}function Q1(r,e,t,n,i,s,l){const c=new ps,u=new J1,h=[],f=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let _=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(b){return b===0?"uv":`uv${b}`}function x(b,L,B,j,ae){const H=j.fog,Q=ae.geometry,oe=b.isMeshStandardMaterial?j.environment:null,se=(b.isMeshStandardMaterial?t:e).get(b.envMap||oe),X=se&&se.mapping===Ao?se.image.height:null,Y=y[b.type];b.precision!==null&&(_=i.getMaxPrecision(b.precision),_!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",_,"instead."));const Z=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,ee=Z!==void 0?Z.length:0;let me=0;Q.morphAttributes.position!==void 0&&(me=1),Q.morphAttributes.normal!==void 0&&(me=2),Q.morphAttributes.color!==void 0&&(me=3);let J,de,Ce,Fe;if(Y){const Bt=xi[Y];J=Bt.vertexShader,de=Bt.fragmentShader}else J=b.vertexShader,de=b.fragmentShader,u.update(b),Ce=u.getVertexShaderID(b),Fe=u.getFragmentShaderID(b);const Ue=r.getRenderTarget(),rt=ae.isInstancedMesh===!0,nt=ae.isBatchedMesh===!0,We=!!b.map,Ge=!!b.matcap,z=!!se,ve=!!b.aoMap,he=!!b.lightMap,Ae=!!b.bumpMap,pe=!!b.normalMap,qe=!!b.displacementMap,Ne=!!b.emissiveMap,ze=!!b.metalnessMap,$e=!!b.roughnessMap,xt=b.anisotropy>0,Nt=b.clearcoat>0,O=b.iridescence>0,P=b.sheen>0,$=b.transmission>0,Me=xt&&!!b.anisotropyMap,_e=Nt&&!!b.clearcoatMap,Se=Nt&&!!b.clearcoatNormalMap,Xe=Nt&&!!b.clearcoatRoughnessMap,be=O&&!!b.iridescenceMap,Ie=O&&!!b.iridescenceThicknessMap,st=P&&!!b.sheenColorMap,Et=P&&!!b.sheenRoughnessMap,Ee=!!b.specularMap,wt=!!b.specularColorMap,k=!!b.specularIntensityMap,ce=$&&!!b.transmissionMap,ge=$&&!!b.thicknessMap,ye=!!b.gradientMap,Je=!!b.alphaMap,V=b.alphaTest>0,Re=!!b.alphaHash,we=!!b.extensions,ue=!!Q.attributes.uv1,xe=!!Q.attributes.uv2,Ze=!!Q.attributes.uv3;let pt=Oi;return b.toneMapped&&(Ue===null||Ue.isXRRenderTarget===!0)&&(pt=r.toneMapping),{isWebGL2:f,shaderID:Y,shaderType:b.type,shaderName:b.name,vertexShader:J,fragmentShader:de,defines:b.defines,customVertexShaderID:Ce,customFragmentShaderID:Fe,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:_,batching:nt,instancing:rt,instancingColor:rt&&ae.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Ue===null?r.outputColorSpace:Ue.isXRRenderTarget===!0?Ue.texture.colorSpace:Bi,map:We,matcap:Ge,envMap:z,envMapMode:z&&se.mapping,envMapCubeUVHeight:X,aoMap:ve,lightMap:he,bumpMap:Ae,normalMap:pe,displacementMap:m&&qe,emissiveMap:Ne,normalMapObjectSpace:pe&&b.normalMapType===G0,normalMapTangentSpace:pe&&b.normalMapType===Nr,metalnessMap:ze,roughnessMap:$e,anisotropy:xt,anisotropyMap:Me,clearcoat:Nt,clearcoatMap:_e,clearcoatNormalMap:Se,clearcoatRoughnessMap:Xe,iridescence:O,iridescenceMap:be,iridescenceThicknessMap:Ie,sheen:P,sheenColorMap:st,sheenRoughnessMap:Et,specularMap:Ee,specularColorMap:wt,specularIntensityMap:k,transmission:$,transmissionMap:ce,thicknessMap:ge,gradientMap:ye,opaque:b.transparent===!1&&b.blending===fs,alphaMap:Je,alphaTest:V,alphaHash:Re,combine:b.combine,mapUv:We&&M(b.map.channel),aoMapUv:ve&&M(b.aoMap.channel),lightMapUv:he&&M(b.lightMap.channel),bumpMapUv:Ae&&M(b.bumpMap.channel),normalMapUv:pe&&M(b.normalMap.channel),displacementMapUv:qe&&M(b.displacementMap.channel),emissiveMapUv:Ne&&M(b.emissiveMap.channel),metalnessMapUv:ze&&M(b.metalnessMap.channel),roughnessMapUv:$e&&M(b.roughnessMap.channel),anisotropyMapUv:Me&&M(b.anisotropyMap.channel),clearcoatMapUv:_e&&M(b.clearcoatMap.channel),clearcoatNormalMapUv:Se&&M(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Xe&&M(b.clearcoatRoughnessMap.channel),iridescenceMapUv:be&&M(b.iridescenceMap.channel),iridescenceThicknessMapUv:Ie&&M(b.iridescenceThicknessMap.channel),sheenColorMapUv:st&&M(b.sheenColorMap.channel),sheenRoughnessMapUv:Et&&M(b.sheenRoughnessMap.channel),specularMapUv:Ee&&M(b.specularMap.channel),specularColorMapUv:wt&&M(b.specularColorMap.channel),specularIntensityMapUv:k&&M(b.specularIntensityMap.channel),transmissionMapUv:ce&&M(b.transmissionMap.channel),thicknessMapUv:ge&&M(b.thicknessMap.channel),alphaMapUv:Je&&M(b.alphaMap.channel),vertexTangents:!!Q.attributes.tangent&&(pe||xt),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,vertexUv1s:ue,vertexUv2s:xe,vertexUv3s:Ze,pointsUvs:ae.isPoints===!0&&!!Q.attributes.uv&&(We||Je),fog:!!H,useFog:b.fog===!0,fogExp2:H&&H.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:ae.isSkinnedMesh===!0,morphTargets:Q.morphAttributes.position!==void 0,morphNormals:Q.morphAttributes.normal!==void 0,morphColors:Q.morphAttributes.color!==void 0,morphTargetsCount:ee,morphTextureStride:me,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numLightProbes:L.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&B.length>0,shadowMapType:r.shadowMap.type,toneMapping:pt,useLegacyLights:r._useLegacyLights,decodeVideoTexture:We&&b.map.isVideoTexture===!0&&Lt.getTransfer(b.map.colorSpace)===Ft,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Ui,flipSided:b.side===Fn,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:we&&b.extensions.derivatives===!0,extensionFragDepth:we&&b.extensions.fragDepth===!0,extensionDrawBuffers:we&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:we&&b.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:b.customProgramCacheKey()}}function v(b){const L=[];if(b.shaderID?L.push(b.shaderID):(L.push(b.customVertexShaderID),L.push(b.customFragmentShaderID)),b.defines!==void 0)for(const B in b.defines)L.push(B),L.push(b.defines[B]);return b.isRawShaderMaterial===!1&&(w(L,b),E(L,b),L.push(r.outputColorSpace)),L.push(b.customProgramCacheKey),L.join()}function w(b,L){b.push(L.precision),b.push(L.outputColorSpace),b.push(L.envMapMode),b.push(L.envMapCubeUVHeight),b.push(L.mapUv),b.push(L.alphaMapUv),b.push(L.lightMapUv),b.push(L.aoMapUv),b.push(L.bumpMapUv),b.push(L.normalMapUv),b.push(L.displacementMapUv),b.push(L.emissiveMapUv),b.push(L.metalnessMapUv),b.push(L.roughnessMapUv),b.push(L.anisotropyMapUv),b.push(L.clearcoatMapUv),b.push(L.clearcoatNormalMapUv),b.push(L.clearcoatRoughnessMapUv),b.push(L.iridescenceMapUv),b.push(L.iridescenceThicknessMapUv),b.push(L.sheenColorMapUv),b.push(L.sheenRoughnessMapUv),b.push(L.specularMapUv),b.push(L.specularColorMapUv),b.push(L.specularIntensityMapUv),b.push(L.transmissionMapUv),b.push(L.thicknessMapUv),b.push(L.combine),b.push(L.fogExp2),b.push(L.sizeAttenuation),b.push(L.morphTargetsCount),b.push(L.morphAttributeCount),b.push(L.numDirLights),b.push(L.numPointLights),b.push(L.numSpotLights),b.push(L.numSpotLightMaps),b.push(L.numHemiLights),b.push(L.numRectAreaLights),b.push(L.numDirLightShadows),b.push(L.numPointLightShadows),b.push(L.numSpotLightShadows),b.push(L.numSpotLightShadowsWithMaps),b.push(L.numLightProbes),b.push(L.shadowMapType),b.push(L.toneMapping),b.push(L.numClippingPlanes),b.push(L.numClipIntersection),b.push(L.depthPacking)}function E(b,L){c.disableAll(),L.isWebGL2&&c.enable(0),L.supportsVertexTextures&&c.enable(1),L.instancing&&c.enable(2),L.instancingColor&&c.enable(3),L.matcap&&c.enable(4),L.envMap&&c.enable(5),L.normalMapObjectSpace&&c.enable(6),L.normalMapTangentSpace&&c.enable(7),L.clearcoat&&c.enable(8),L.iridescence&&c.enable(9),L.alphaTest&&c.enable(10),L.vertexColors&&c.enable(11),L.vertexAlphas&&c.enable(12),L.vertexUv1s&&c.enable(13),L.vertexUv2s&&c.enable(14),L.vertexUv3s&&c.enable(15),L.vertexTangents&&c.enable(16),L.anisotropy&&c.enable(17),L.alphaHash&&c.enable(18),L.batching&&c.enable(19),b.push(c.mask),c.disableAll(),L.fog&&c.enable(0),L.useFog&&c.enable(1),L.flatShading&&c.enable(2),L.logarithmicDepthBuffer&&c.enable(3),L.skinning&&c.enable(4),L.morphTargets&&c.enable(5),L.morphNormals&&c.enable(6),L.morphColors&&c.enable(7),L.premultipliedAlpha&&c.enable(8),L.shadowMapEnabled&&c.enable(9),L.useLegacyLights&&c.enable(10),L.doubleSided&&c.enable(11),L.flipSided&&c.enable(12),L.useDepthPacking&&c.enable(13),L.dithering&&c.enable(14),L.transmission&&c.enable(15),L.sheen&&c.enable(16),L.opaque&&c.enable(17),L.pointsUvs&&c.enable(18),L.decodeVideoTexture&&c.enable(19),b.push(c.mask)}function A(b){const L=y[b.type];let B;if(L){const j=xi[L];B=nv.clone(j.uniforms)}else B=b.uniforms;return B}function C(b,L){let B;for(let j=0,ae=h.length;j<ae;j++){const H=h[j];if(H.cacheKey===L){B=H,++B.usedTimes;break}}return B===void 0&&(B=new Z1(r,L,b,s),h.push(B)),B}function R(b){if(--b.usedTimes===0){const L=h.indexOf(b);h[L]=h[h.length-1],h.pop(),b.destroy()}}function N(b){u.remove(b)}function F(){u.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:A,acquireProgram:C,releaseProgram:R,releaseShaderCache:N,programs:h,dispose:F}}function $1(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function eT(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Lg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Ig(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,_,y,M,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:_,groupOrder:y,renderOrder:p.renderOrder,z:M,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=_,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=M,v.group=x),e++,v}function c(p,m,_,y,M,x){const v=l(p,m,_,y,M,x);_.transmission>0?n.push(v):_.transparent===!0?i.push(v):t.push(v)}function u(p,m,_,y,M,x){const v=l(p,m,_,y,M,x);_.transmission>0?n.unshift(v):_.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||eT),n.length>1&&n.sort(m||Lg),i.length>1&&i.sort(m||Lg)}function f(){for(let p=e,m=r.length;p<m;p++){const _=r[p];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function tT(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Ig,r.set(n,[l])):i>=s.length?(l=new Ig,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function nT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new ke};break;case"SpotLight":t={position:new D,direction:new D,color:new ke,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new ke,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new ke,groundColor:new ke};break;case"RectAreaLight":t={color:new ke,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function iT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let rT=0;function sT(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function oT(r,e){const t=new nT,n=iT(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)i.probe.push(new D);const s=new D,l=new lt,c=new lt;function u(f,p){let m=0,_=0,y=0;for(let j=0;j<9;j++)i.probe[j].set(0,0,0);let M=0,x=0,v=0,w=0,E=0,A=0,C=0,R=0,N=0,F=0,b=0;f.sort(sT);const L=p===!0?Math.PI:1;for(let j=0,ae=f.length;j<ae;j++){const H=f[j],Q=H.color,oe=H.intensity,se=H.distance,X=H.shadow&&H.shadow.map?H.shadow.map.texture:null;if(H.isAmbientLight)m+=Q.r*oe*L,_+=Q.g*oe*L,y+=Q.b*oe*L;else if(H.isLightProbe){for(let Y=0;Y<9;Y++)i.probe[Y].addScaledVector(H.sh.coefficients[Y],oe);b++}else if(H.isDirectionalLight){const Y=t.get(H);if(Y.color.copy(H.color).multiplyScalar(H.intensity*L),H.castShadow){const Z=H.shadow,ee=n.get(H);ee.shadowBias=Z.bias,ee.shadowNormalBias=Z.normalBias,ee.shadowRadius=Z.radius,ee.shadowMapSize=Z.mapSize,i.directionalShadow[M]=ee,i.directionalShadowMap[M]=X,i.directionalShadowMatrix[M]=H.shadow.matrix,A++}i.directional[M]=Y,M++}else if(H.isSpotLight){const Y=t.get(H);Y.position.setFromMatrixPosition(H.matrixWorld),Y.color.copy(Q).multiplyScalar(oe*L),Y.distance=se,Y.coneCos=Math.cos(H.angle),Y.penumbraCos=Math.cos(H.angle*(1-H.penumbra)),Y.decay=H.decay,i.spot[v]=Y;const Z=H.shadow;if(H.map&&(i.spotLightMap[N]=H.map,N++,Z.updateMatrices(H),H.castShadow&&F++),i.spotLightMatrix[v]=Z.matrix,H.castShadow){const ee=n.get(H);ee.shadowBias=Z.bias,ee.shadowNormalBias=Z.normalBias,ee.shadowRadius=Z.radius,ee.shadowMapSize=Z.mapSize,i.spotShadow[v]=ee,i.spotShadowMap[v]=X,R++}v++}else if(H.isRectAreaLight){const Y=t.get(H);Y.color.copy(Q).multiplyScalar(oe),Y.halfWidth.set(H.width*.5,0,0),Y.halfHeight.set(0,H.height*.5,0),i.rectArea[w]=Y,w++}else if(H.isPointLight){const Y=t.get(H);if(Y.color.copy(H.color).multiplyScalar(H.intensity*L),Y.distance=H.distance,Y.decay=H.decay,H.castShadow){const Z=H.shadow,ee=n.get(H);ee.shadowBias=Z.bias,ee.shadowNormalBias=Z.normalBias,ee.shadowRadius=Z.radius,ee.shadowMapSize=Z.mapSize,ee.shadowCameraNear=Z.camera.near,ee.shadowCameraFar=Z.camera.far,i.pointShadow[x]=ee,i.pointShadowMap[x]=X,i.pointShadowMatrix[x]=H.shadow.matrix,C++}i.point[x]=Y,x++}else if(H.isHemisphereLight){const Y=t.get(H);Y.skyColor.copy(H.color).multiplyScalar(oe*L),Y.groundColor.copy(H.groundColor).multiplyScalar(oe*L),i.hemi[E]=Y,E++}}w>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Pe.LTC_FLOAT_1,i.rectAreaLTC2=Pe.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Pe.LTC_HALF_1,i.rectAreaLTC2=Pe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=_,i.ambient[2]=y;const B=i.hash;(B.directionalLength!==M||B.pointLength!==x||B.spotLength!==v||B.rectAreaLength!==w||B.hemiLength!==E||B.numDirectionalShadows!==A||B.numPointShadows!==C||B.numSpotShadows!==R||B.numSpotMaps!==N||B.numLightProbes!==b)&&(i.directional.length=M,i.spot.length=v,i.rectArea.length=w,i.point.length=x,i.hemi.length=E,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=C,i.pointShadowMap.length=C,i.spotShadow.length=R,i.spotShadowMap.length=R,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=C,i.spotLightMatrix.length=R+N-F,i.spotLightMap.length=N,i.numSpotLightShadowsWithMaps=F,i.numLightProbes=b,B.directionalLength=M,B.pointLength=x,B.spotLength=v,B.rectAreaLength=w,B.hemiLength=E,B.numDirectionalShadows=A,B.numPointShadows=C,B.numSpotShadows=R,B.numSpotMaps=N,B.numLightProbes=b,i.version=rT++)}function h(f,p){let m=0,_=0,y=0,M=0,x=0;const v=p.matrixWorldInverse;for(let w=0,E=f.length;w<E;w++){const A=f[w];if(A.isDirectionalLight){const C=i.directional[m];C.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(v),m++}else if(A.isSpotLight){const C=i.spot[y];C.position.setFromMatrixPosition(A.matrixWorld),C.position.applyMatrix4(v),C.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(v),y++}else if(A.isRectAreaLight){const C=i.rectArea[M];C.position.setFromMatrixPosition(A.matrixWorld),C.position.applyMatrix4(v),c.identity(),l.copy(A.matrixWorld),l.premultiply(v),c.extractRotation(l),C.halfWidth.set(A.width*.5,0,0),C.halfHeight.set(0,A.height*.5,0),C.halfWidth.applyMatrix4(c),C.halfHeight.applyMatrix4(c),M++}else if(A.isPointLight){const C=i.point[_];C.position.setFromMatrixPosition(A.matrixWorld),C.position.applyMatrix4(v),_++}else if(A.isHemisphereLight){const C=i.hemi[x];C.direction.setFromMatrixPosition(A.matrixWorld),C.direction.transformDirection(v),x++}}}return{setup:u,setupView:h,state:i}}function Dg(r,e){const t=new oT(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function aT(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new Dg(r,e),t.set(s,[u])):l>=c.length?(u=new Dg(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class qd extends Sn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=H0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Zd extends Sn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const lT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,cT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function uT(r,e,t){let n=new Wa;const i=new fe,s=new fe,l=new It,c=new qd({depthPacking:V0}),u=new Zd,h={},f=t.maxTextureSize,p={[rr]:Fn,[Fn]:rr,[Ui]:Ui},m=new ki({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:lT,fragmentShader:cT}),_=m.clone();_.defines.HORIZONTAL_PASS=1;const y=new _t;y.setAttribute("position",new Dt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new ln(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=su;let v=this.type;this.render=function(C,R,N){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||C.length===0)return;const F=r.getRenderTarget(),b=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),B=r.state;B.setBlending(ir),B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);const j=v!==yi&&this.type===yi,ae=v===yi&&this.type!==yi;for(let H=0,Q=C.length;H<Q;H++){const oe=C[H],se=oe.shadow;if(se===void 0){console.warn("THREE.WebGLShadowMap:",oe,"has no shadow.");continue}if(se.autoUpdate===!1&&se.needsUpdate===!1)continue;i.copy(se.mapSize);const X=se.getFrameExtents();if(i.multiply(X),s.copy(se.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/X.x),i.x=s.x*X.x,se.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/X.y),i.y=s.y*X.y,se.mapSize.y=s.y)),se.map===null||j===!0||ae===!0){const Z=this.type!==yi?{minFilter:$t,magFilter:$t}:{};se.map!==null&&se.map.dispose(),se.map=new Ei(i.x,i.y,Z),se.map.texture.name=oe.name+".shadowMap",se.camera.updateProjectionMatrix()}r.setRenderTarget(se.map),r.clear();const Y=se.getViewportCount();for(let Z=0;Z<Y;Z++){const ee=se.getViewport(Z);l.set(s.x*ee.x,s.y*ee.y,s.x*ee.z,s.y*ee.w),B.viewport(l),se.updateMatrices(oe,Z),n=se.getFrustum(),A(R,N,se.camera,oe,this.type)}se.isPointLightShadow!==!0&&this.type===yi&&w(se,N),se.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(F,b,L)};function w(C,R){const N=e.update(M);m.defines.VSM_SAMPLES!==C.blurSamples&&(m.defines.VSM_SAMPLES=C.blurSamples,_.defines.VSM_SAMPLES=C.blurSamples,m.needsUpdate=!0,_.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new Ei(i.x,i.y)),m.uniforms.shadow_pass.value=C.map.texture,m.uniforms.resolution.value=C.mapSize,m.uniforms.radius.value=C.radius,r.setRenderTarget(C.mapPass),r.clear(),r.renderBufferDirect(R,null,N,m,M,null),_.uniforms.shadow_pass.value=C.mapPass.texture,_.uniforms.resolution.value=C.mapSize,_.uniforms.radius.value=C.radius,r.setRenderTarget(C.map),r.clear(),r.renderBufferDirect(R,null,N,_,M,null)}function E(C,R,N,F){let b=null;const L=N.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(L!==void 0)b=L;else if(b=N.isPointLight===!0?u:c,r.localClippingEnabled&&R.clipShadows===!0&&Array.isArray(R.clippingPlanes)&&R.clippingPlanes.length!==0||R.displacementMap&&R.displacementScale!==0||R.alphaMap&&R.alphaTest>0||R.map&&R.alphaTest>0){const B=b.uuid,j=R.uuid;let ae=h[B];ae===void 0&&(ae={},h[B]=ae);let H=ae[j];H===void 0&&(H=b.clone(),ae[j]=H),b=H}if(b.visible=R.visible,b.wireframe=R.wireframe,F===yi?b.side=R.shadowSide!==null?R.shadowSide:R.side:b.side=R.shadowSide!==null?R.shadowSide:p[R.side],b.alphaMap=R.alphaMap,b.alphaTest=R.alphaTest,b.map=R.map,b.clipShadows=R.clipShadows,b.clippingPlanes=R.clippingPlanes,b.clipIntersection=R.clipIntersection,b.displacementMap=R.displacementMap,b.displacementScale=R.displacementScale,b.displacementBias=R.displacementBias,b.wireframeLinewidth=R.wireframeLinewidth,b.linewidth=R.linewidth,N.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const B=r.properties.get(b);B.light=N}return b}function A(C,R,N,F,b){if(C.visible===!1)return;if(C.layers.test(R.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&b===yi)&&(!C.frustumCulled||n.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,C.matrixWorld);const j=e.update(C),ae=C.material;if(Array.isArray(ae)){const H=j.groups;for(let Q=0,oe=H.length;Q<oe;Q++){const se=H[Q],X=ae[se.materialIndex];if(X&&X.visible){const Y=E(C,X,F,b);C.onBeforeShadow(r,C,R,N,j,Y,se),r.renderBufferDirect(N,null,j,Y,C,se),C.onAfterShadow(r,C,R,N,j,Y,se)}}}else if(ae.visible){const H=E(C,ae,F,b);C.onBeforeShadow(r,C,R,N,j,H,null),r.renderBufferDirect(N,null,j,H,C,null),C.onAfterShadow(r,C,R,N,j,H,null)}}const B=C.children;for(let j=0,ae=B.length;j<ae;j++)A(B[j],R,N,F,b)}}function hT(r,e,t){const n=t.isWebGL2;function i(){let V=!1;const Re=new It;let we=null;const ue=new It(0,0,0,0);return{setMask:function(xe){we!==xe&&!V&&(r.colorMask(xe,xe,xe,xe),we=xe)},setLocked:function(xe){V=xe},setClear:function(xe,Ze,pt,Ut,Bt){Bt===!0&&(xe*=Ut,Ze*=Ut,pt*=Ut),Re.set(xe,Ze,pt,Ut),ue.equals(Re)===!1&&(r.clearColor(xe,Ze,pt,Ut),ue.copy(Re))},reset:function(){V=!1,we=null,ue.set(-1,0,0,0)}}}function s(){let V=!1,Re=null,we=null,ue=null;return{setTest:function(xe){xe?nt(r.DEPTH_TEST):We(r.DEPTH_TEST)},setMask:function(xe){Re!==xe&&!V&&(r.depthMask(xe),Re=xe)},setFunc:function(xe){if(we!==xe){switch(xe){case g0:r.depthFunc(r.NEVER);break;case _0:r.depthFunc(r.ALWAYS);break;case v0:r.depthFunc(r.LESS);break;case va:r.depthFunc(r.LEQUAL);break;case y0:r.depthFunc(r.EQUAL);break;case x0:r.depthFunc(r.GEQUAL);break;case S0:r.depthFunc(r.GREATER);break;case M0:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}we=xe}},setLocked:function(xe){V=xe},setClear:function(xe){ue!==xe&&(r.clearDepth(xe),ue=xe)},reset:function(){V=!1,Re=null,we=null,ue=null}}}function l(){let V=!1,Re=null,we=null,ue=null,xe=null,Ze=null,pt=null,Ut=null,Bt=null;return{setTest:function(Tt){V||(Tt?nt(r.STENCIL_TEST):We(r.STENCIL_TEST))},setMask:function(Tt){Re!==Tt&&!V&&(r.stencilMask(Tt),Re=Tt)},setFunc:function(Tt,_n,ni){(we!==Tt||ue!==_n||xe!==ni)&&(r.stencilFunc(Tt,_n,ni),we=Tt,ue=_n,xe=ni)},setOp:function(Tt,_n,ni){(Ze!==Tt||pt!==_n||Ut!==ni)&&(r.stencilOp(Tt,_n,ni),Ze=Tt,pt=_n,Ut=ni)},setLocked:function(Tt){V=Tt},setClear:function(Tt){Bt!==Tt&&(r.clearStencil(Tt),Bt=Tt)},reset:function(){V=!1,Re=null,we=null,ue=null,xe=null,Ze=null,pt=null,Ut=null,Bt=null}}}const c=new i,u=new s,h=new l,f=new WeakMap,p=new WeakMap;let m={},_={},y=new WeakMap,M=[],x=null,v=!1,w=null,E=null,A=null,C=null,R=null,N=null,F=null,b=new ke(0,0,0),L=0,B=!1,j=null,ae=null,H=null,Q=null,oe=null;const se=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let X=!1,Y=0;const Z=r.getParameter(r.VERSION);Z.indexOf("WebGL")!==-1?(Y=parseFloat(/^WebGL (\d)/.exec(Z)[1]),X=Y>=1):Z.indexOf("OpenGL ES")!==-1&&(Y=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),X=Y>=2);let ee=null,me={};const J=r.getParameter(r.SCISSOR_BOX),de=r.getParameter(r.VIEWPORT),Ce=new It().fromArray(J),Fe=new It().fromArray(de);function Ue(V,Re,we,ue){const xe=new Uint8Array(4),Ze=r.createTexture();r.bindTexture(V,Ze),r.texParameteri(V,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(V,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let pt=0;pt<we;pt++)n&&(V===r.TEXTURE_3D||V===r.TEXTURE_2D_ARRAY)?r.texImage3D(Re,0,r.RGBA,1,1,ue,0,r.RGBA,r.UNSIGNED_BYTE,xe):r.texImage2D(Re+pt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,xe);return Ze}const rt={};rt[r.TEXTURE_2D]=Ue(r.TEXTURE_2D,r.TEXTURE_2D,1),rt[r.TEXTURE_CUBE_MAP]=Ue(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(rt[r.TEXTURE_2D_ARRAY]=Ue(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),rt[r.TEXTURE_3D]=Ue(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),nt(r.DEPTH_TEST),u.setFunc(va),Ne(!1),ze(Of),nt(r.CULL_FACE),pe(ir);function nt(V){m[V]!==!0&&(r.enable(V),m[V]=!0)}function We(V){m[V]!==!1&&(r.disable(V),m[V]=!1)}function Ge(V,Re){return _[V]!==Re?(r.bindFramebuffer(V,Re),_[V]=Re,n&&(V===r.DRAW_FRAMEBUFFER&&(_[r.FRAMEBUFFER]=Re),V===r.FRAMEBUFFER&&(_[r.DRAW_FRAMEBUFFER]=Re)),!0):!1}function z(V,Re){let we=M,ue=!1;if(V)if(we=y.get(Re),we===void 0&&(we=[],y.set(Re,we)),V.isWebGLMultipleRenderTargets){const xe=V.texture;if(we.length!==xe.length||we[0]!==r.COLOR_ATTACHMENT0){for(let Ze=0,pt=xe.length;Ze<pt;Ze++)we[Ze]=r.COLOR_ATTACHMENT0+Ze;we.length=xe.length,ue=!0}}else we[0]!==r.COLOR_ATTACHMENT0&&(we[0]=r.COLOR_ATTACHMENT0,ue=!0);else we[0]!==r.BACK&&(we[0]=r.BACK,ue=!0);ue&&(t.isWebGL2?r.drawBuffers(we):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(we))}function ve(V){return x!==V?(r.useProgram(V),x=V,!0):!1}const he={[Ar]:r.FUNC_ADD,[t0]:r.FUNC_SUBTRACT,[n0]:r.FUNC_REVERSE_SUBTRACT};if(n)he[kf]=r.MIN,he[Hf]=r.MAX;else{const V=e.get("EXT_blend_minmax");V!==null&&(he[kf]=V.MIN_EXT,he[Hf]=V.MAX_EXT)}const Ae={[i0]:r.ZERO,[r0]:r.ONE,[s0]:r.SRC_COLOR,[Jc]:r.SRC_ALPHA,[h0]:r.SRC_ALPHA_SATURATE,[c0]:r.DST_COLOR,[a0]:r.DST_ALPHA,[o0]:r.ONE_MINUS_SRC_COLOR,[Kc]:r.ONE_MINUS_SRC_ALPHA,[u0]:r.ONE_MINUS_DST_COLOR,[l0]:r.ONE_MINUS_DST_ALPHA,[f0]:r.CONSTANT_COLOR,[d0]:r.ONE_MINUS_CONSTANT_COLOR,[p0]:r.CONSTANT_ALPHA,[m0]:r.ONE_MINUS_CONSTANT_ALPHA};function pe(V,Re,we,ue,xe,Ze,pt,Ut,Bt,Tt){if(V===ir){v===!0&&(We(r.BLEND),v=!1);return}if(v===!1&&(nt(r.BLEND),v=!0),V!==e0){if(V!==w||Tt!==B){if((E!==Ar||R!==Ar)&&(r.blendEquation(r.FUNC_ADD),E=Ar,R=Ar),Tt)switch(V){case fs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ff:r.blendFunc(r.ONE,r.ONE);break;case zf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Bf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case fs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ff:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case zf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Bf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}A=null,C=null,N=null,F=null,b.set(0,0,0),L=0,w=V,B=Tt}return}xe=xe||Re,Ze=Ze||we,pt=pt||ue,(Re!==E||xe!==R)&&(r.blendEquationSeparate(he[Re],he[xe]),E=Re,R=xe),(we!==A||ue!==C||Ze!==N||pt!==F)&&(r.blendFuncSeparate(Ae[we],Ae[ue],Ae[Ze],Ae[pt]),A=we,C=ue,N=Ze,F=pt),(Ut.equals(b)===!1||Bt!==L)&&(r.blendColor(Ut.r,Ut.g,Ut.b,Bt),b.copy(Ut),L=Bt),w=V,B=!1}function qe(V,Re){V.side===Ui?We(r.CULL_FACE):nt(r.CULL_FACE);let we=V.side===Fn;Re&&(we=!we),Ne(we),V.blending===fs&&V.transparent===!1?pe(ir):pe(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),u.setFunc(V.depthFunc),u.setTest(V.depthTest),u.setMask(V.depthWrite),c.setMask(V.colorWrite);const ue=V.stencilWrite;h.setTest(ue),ue&&(h.setMask(V.stencilWriteMask),h.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),h.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),xt(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?nt(r.SAMPLE_ALPHA_TO_COVERAGE):We(r.SAMPLE_ALPHA_TO_COVERAGE)}function Ne(V){j!==V&&(V?r.frontFace(r.CW):r.frontFace(r.CCW),j=V)}function ze(V){V!==K_?(nt(r.CULL_FACE),V!==ae&&(V===Of?r.cullFace(r.BACK):V===Q_?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):We(r.CULL_FACE),ae=V}function $e(V){V!==H&&(X&&r.lineWidth(V),H=V)}function xt(V,Re,we){V?(nt(r.POLYGON_OFFSET_FILL),(Q!==Re||oe!==we)&&(r.polygonOffset(Re,we),Q=Re,oe=we)):We(r.POLYGON_OFFSET_FILL)}function Nt(V){V?nt(r.SCISSOR_TEST):We(r.SCISSOR_TEST)}function O(V){V===void 0&&(V=r.TEXTURE0+se-1),ee!==V&&(r.activeTexture(V),ee=V)}function P(V,Re,we){we===void 0&&(ee===null?we=r.TEXTURE0+se-1:we=ee);let ue=me[we];ue===void 0&&(ue={type:void 0,texture:void 0},me[we]=ue),(ue.type!==V||ue.texture!==Re)&&(ee!==we&&(r.activeTexture(we),ee=we),r.bindTexture(V,Re||rt[V]),ue.type=V,ue.texture=Re)}function $(){const V=me[ee];V!==void 0&&V.type!==void 0&&(r.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function Me(){try{r.compressedTexImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function _e(){try{r.compressedTexImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Se(){try{r.texSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Xe(){try{r.texSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function be(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ie(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function st(){try{r.texStorage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Et(){try{r.texStorage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ee(){try{r.texImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function wt(){try{r.texImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function k(V){Ce.equals(V)===!1&&(r.scissor(V.x,V.y,V.z,V.w),Ce.copy(V))}function ce(V){Fe.equals(V)===!1&&(r.viewport(V.x,V.y,V.z,V.w),Fe.copy(V))}function ge(V,Re){let we=p.get(Re);we===void 0&&(we=new WeakMap,p.set(Re,we));let ue=we.get(V);ue===void 0&&(ue=r.getUniformBlockIndex(Re,V.name),we.set(V,ue))}function ye(V,Re){const ue=p.get(Re).get(V);f.get(Re)!==ue&&(r.uniformBlockBinding(Re,ue,V.__bindingPointIndex),f.set(Re,ue))}function Je(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},ee=null,me={},_={},y=new WeakMap,M=[],x=null,v=!1,w=null,E=null,A=null,C=null,R=null,N=null,F=null,b=new ke(0,0,0),L=0,B=!1,j=null,ae=null,H=null,Q=null,oe=null,Ce.set(0,0,r.canvas.width,r.canvas.height),Fe.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:nt,disable:We,bindFramebuffer:Ge,drawBuffers:z,useProgram:ve,setBlending:pe,setMaterial:qe,setFlipSided:Ne,setCullFace:ze,setLineWidth:$e,setPolygonOffset:xt,setScissorTest:Nt,activeTexture:O,bindTexture:P,unbindTexture:$,compressedTexImage2D:Me,compressedTexImage3D:_e,texImage2D:Ee,texImage3D:wt,updateUBOMapping:ge,uniformBlockBinding:ye,texStorage2D:st,texStorage3D:Et,texSubImage2D:Se,texSubImage3D:Xe,compressedTexSubImage2D:be,compressedTexSubImage3D:Ie,scissor:k,viewport:ce,reset:Je}}function fT(r,e,t,n,i,s,l){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,f=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,_=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let M;const x=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(O,P){return v?new OffscreenCanvas(O,P):Pa("canvas")}function E(O,P,$,Me){let _e=1;if((O.width>Me||O.height>Me)&&(_e=Me/Math.max(O.width,O.height)),_e<1||P===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const Se=P?eu:Math.floor,Xe=Se(_e*O.width),be=Se(_e*O.height);M===void 0&&(M=w(Xe,be));const Ie=$?w(Xe,be):M;return Ie.width=Xe,Ie.height=be,Ie.getContext("2d").drawImage(O,0,0,Xe,be),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+Xe+"x"+be+")."),Ie}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function A(O){return gd(O.width)&&gd(O.height)}function C(O){return c?!1:O.wrapS!==Rn||O.wrapT!==Rn||O.minFilter!==$t&&O.minFilter!==en}function R(O,P){return O.generateMipmaps&&P&&O.minFilter!==$t&&O.minFilter!==en}function N(O){r.generateMipmap(O)}function F(O,P,$,Me,_e=!1){if(c===!1)return P;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let Se=P;if(P===r.RED&&($===r.FLOAT&&(Se=r.R32F),$===r.HALF_FLOAT&&(Se=r.R16F),$===r.UNSIGNED_BYTE&&(Se=r.R8)),P===r.RED_INTEGER&&($===r.UNSIGNED_BYTE&&(Se=r.R8UI),$===r.UNSIGNED_SHORT&&(Se=r.R16UI),$===r.UNSIGNED_INT&&(Se=r.R32UI),$===r.BYTE&&(Se=r.R8I),$===r.SHORT&&(Se=r.R16I),$===r.INT&&(Se=r.R32I)),P===r.RG&&($===r.FLOAT&&(Se=r.RG32F),$===r.HALF_FLOAT&&(Se=r.RG16F),$===r.UNSIGNED_BYTE&&(Se=r.RG8)),P===r.RGBA){const Xe=_e?Aa:Lt.getTransfer(Me);$===r.FLOAT&&(Se=r.RGBA32F),$===r.HALF_FLOAT&&(Se=r.RGBA16F),$===r.UNSIGNED_BYTE&&(Se=Xe===Ft?r.SRGB8_ALPHA8:r.RGBA8),$===r.UNSIGNED_SHORT_4_4_4_4&&(Se=r.RGBA4),$===r.UNSIGNED_SHORT_5_5_5_1&&(Se=r.RGB5_A1)}return(Se===r.R16F||Se===r.R32F||Se===r.RG16F||Se===r.RG32F||Se===r.RGBA16F||Se===r.RGBA32F)&&e.get("EXT_color_buffer_float"),Se}function b(O,P,$){return R(O,$)===!0||O.isFramebufferTexture&&O.minFilter!==$t&&O.minFilter!==en?Math.log2(Math.max(P.width,P.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?P.mipmaps.length:1}function L(O){return O===$t||O===Qc||O===da?r.NEAREST:r.LINEAR}function B(O){const P=O.target;P.removeEventListener("dispose",B),ae(P),P.isVideoTexture&&y.delete(P)}function j(O){const P=O.target;P.removeEventListener("dispose",j),Q(P)}function ae(O){const P=n.get(O);if(P.__webglInit===void 0)return;const $=O.source,Me=x.get($);if(Me){const _e=Me[P.__cacheKey];_e.usedTimes--,_e.usedTimes===0&&H(O),Object.keys(Me).length===0&&x.delete($)}n.remove(O)}function H(O){const P=n.get(O);r.deleteTexture(P.__webglTexture);const $=O.source,Me=x.get($);delete Me[P.__cacheKey],l.memory.textures--}function Q(O){const P=O.texture,$=n.get(O),Me=n.get(P);if(Me.__webglTexture!==void 0&&(r.deleteTexture(Me.__webglTexture),l.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let _e=0;_e<6;_e++){if(Array.isArray($.__webglFramebuffer[_e]))for(let Se=0;Se<$.__webglFramebuffer[_e].length;Se++)r.deleteFramebuffer($.__webglFramebuffer[_e][Se]);else r.deleteFramebuffer($.__webglFramebuffer[_e]);$.__webglDepthbuffer&&r.deleteRenderbuffer($.__webglDepthbuffer[_e])}else{if(Array.isArray($.__webglFramebuffer))for(let _e=0;_e<$.__webglFramebuffer.length;_e++)r.deleteFramebuffer($.__webglFramebuffer[_e]);else r.deleteFramebuffer($.__webglFramebuffer);if($.__webglDepthbuffer&&r.deleteRenderbuffer($.__webglDepthbuffer),$.__webglMultisampledFramebuffer&&r.deleteFramebuffer($.__webglMultisampledFramebuffer),$.__webglColorRenderbuffer)for(let _e=0;_e<$.__webglColorRenderbuffer.length;_e++)$.__webglColorRenderbuffer[_e]&&r.deleteRenderbuffer($.__webglColorRenderbuffer[_e]);$.__webglDepthRenderbuffer&&r.deleteRenderbuffer($.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let _e=0,Se=P.length;_e<Se;_e++){const Xe=n.get(P[_e]);Xe.__webglTexture&&(r.deleteTexture(Xe.__webglTexture),l.memory.textures--),n.remove(P[_e])}n.remove(P),n.remove(O)}let oe=0;function se(){oe=0}function X(){const O=oe;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),oe+=1,O}function Y(O){const P=[];return P.push(O.wrapS),P.push(O.wrapT),P.push(O.wrapR||0),P.push(O.magFilter),P.push(O.minFilter),P.push(O.anisotropy),P.push(O.internalFormat),P.push(O.format),P.push(O.type),P.push(O.generateMipmaps),P.push(O.premultiplyAlpha),P.push(O.flipY),P.push(O.unpackAlignment),P.push(O.colorSpace),P.join()}function Z(O,P){const $=n.get(O);if(O.isVideoTexture&&xt(O),O.isRenderTargetTexture===!1&&O.version>0&&$.__version!==O.version){const Me=O.image;if(Me===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{nt($,O,P);return}}t.bindTexture(r.TEXTURE_2D,$.__webglTexture,r.TEXTURE0+P)}function ee(O,P){const $=n.get(O);if(O.version>0&&$.__version!==O.version){nt($,O,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,$.__webglTexture,r.TEXTURE0+P)}function me(O,P){const $=n.get(O);if(O.version>0&&$.__version!==O.version){nt($,O,P);return}t.bindTexture(r.TEXTURE_3D,$.__webglTexture,r.TEXTURE0+P)}function J(O,P){const $=n.get(O);if(O.version>0&&$.__version!==O.version){We($,O,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,$.__webglTexture,r.TEXTURE0+P)}const de={[Sa]:r.REPEAT,[Rn]:r.CLAMP_TO_EDGE,[Ma]:r.MIRRORED_REPEAT},Ce={[$t]:r.NEAREST,[Qc]:r.NEAREST_MIPMAP_NEAREST,[da]:r.NEAREST_MIPMAP_LINEAR,[en]:r.LINEAR,[Rd]:r.LINEAR_MIPMAP_NEAREST,[Ir]:r.LINEAR_MIPMAP_LINEAR},Fe={[W0]:r.NEVER,[J0]:r.ALWAYS,[X0]:r.LESS,[Bd]:r.LEQUAL,[Y0]:r.EQUAL,[j0]:r.GEQUAL,[q0]:r.GREATER,[Z0]:r.NOTEQUAL};function Ue(O,P,$){if($?(r.texParameteri(O,r.TEXTURE_WRAP_S,de[P.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,de[P.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,de[P.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,Ce[P.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,Ce[P.minFilter])):(r.texParameteri(O,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(O,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==Rn||P.wrapT!==Rn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,r.TEXTURE_MAG_FILTER,L(P.magFilter)),r.texParameteri(O,r.TEXTURE_MIN_FILTER,L(P.minFilter)),P.minFilter!==$t&&P.minFilter!==en&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),P.compareFunction&&(r.texParameteri(O,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(O,r.TEXTURE_COMPARE_FUNC,Fe[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Me=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===$t||P.minFilter!==da&&P.minFilter!==Ir||P.type===Si&&e.has("OES_texture_float_linear")===!1||c===!1&&P.type===yo&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(O,Me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function rt(O,P){let $=!1;O.__webglInit===void 0&&(O.__webglInit=!0,P.addEventListener("dispose",B));const Me=P.source;let _e=x.get(Me);_e===void 0&&(_e={},x.set(Me,_e));const Se=Y(P);if(Se!==O.__cacheKey){_e[Se]===void 0&&(_e[Se]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,$=!0),_e[Se].usedTimes++;const Xe=_e[O.__cacheKey];Xe!==void 0&&(_e[O.__cacheKey].usedTimes--,Xe.usedTimes===0&&H(P)),O.__cacheKey=Se,O.__webglTexture=_e[Se].texture}return $}function nt(O,P,$){let Me=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(Me=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(Me=r.TEXTURE_3D);const _e=rt(O,P),Se=P.source;t.bindTexture(Me,O.__webglTexture,r.TEXTURE0+$);const Xe=n.get(Se);if(Se.version!==Xe.__version||_e===!0){t.activeTexture(r.TEXTURE0+$);const be=Lt.getPrimaries(Lt.workingColorSpace),Ie=P.colorSpace===ei?null:Lt.getPrimaries(P.colorSpace),st=P.colorSpace===ei||be===Ie?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,st);const Et=C(P)&&A(P.image)===!1;let Ee=E(P.image,Et,!1,f);Ee=Nt(P,Ee);const wt=A(Ee)||c,k=s.convert(P.format,P.colorSpace);let ce=s.convert(P.type),ge=F(P.internalFormat,k,ce,P.colorSpace,P.isVideoTexture);Ue(Me,P,wt);let ye;const Je=P.mipmaps,V=c&&P.isVideoTexture!==!0&&ge!==Od,Re=Xe.__version===void 0||_e===!0,we=b(P,Ee,wt);if(P.isDepthTexture)ge=r.DEPTH_COMPONENT,c?P.type===Si?ge=r.DEPTH_COMPONENT32F:P.type===nr?ge=r.DEPTH_COMPONENT24:P.type===br?ge=r.DEPTH24_STENCIL8:ge=r.DEPTH_COMPONENT16:P.type===Si&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===Cr&&ge===r.DEPTH_COMPONENT&&P.type!==au&&P.type!==nr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=nr,ce=s.convert(P.type)),P.format===_s&&ge===r.DEPTH_COMPONENT&&(ge=r.DEPTH_STENCIL,P.type!==br&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=br,ce=s.convert(P.type))),Re&&(V?t.texStorage2D(r.TEXTURE_2D,1,ge,Ee.width,Ee.height):t.texImage2D(r.TEXTURE_2D,0,ge,Ee.width,Ee.height,0,k,ce,null));else if(P.isDataTexture)if(Je.length>0&&wt){V&&Re&&t.texStorage2D(r.TEXTURE_2D,we,ge,Je[0].width,Je[0].height);for(let ue=0,xe=Je.length;ue<xe;ue++)ye=Je[ue],V?t.texSubImage2D(r.TEXTURE_2D,ue,0,0,ye.width,ye.height,k,ce,ye.data):t.texImage2D(r.TEXTURE_2D,ue,ge,ye.width,ye.height,0,k,ce,ye.data);P.generateMipmaps=!1}else V?(Re&&t.texStorage2D(r.TEXTURE_2D,we,ge,Ee.width,Ee.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ee.width,Ee.height,k,ce,Ee.data)):t.texImage2D(r.TEXTURE_2D,0,ge,Ee.width,Ee.height,0,k,ce,Ee.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){V&&Re&&t.texStorage3D(r.TEXTURE_2D_ARRAY,we,ge,Je[0].width,Je[0].height,Ee.depth);for(let ue=0,xe=Je.length;ue<xe;ue++)ye=Je[ue],P.format!==On?k!==null?V?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ue,0,0,0,ye.width,ye.height,Ee.depth,k,ye.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ue,ge,ye.width,ye.height,Ee.depth,0,ye.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?t.texSubImage3D(r.TEXTURE_2D_ARRAY,ue,0,0,0,ye.width,ye.height,Ee.depth,k,ce,ye.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ue,ge,ye.width,ye.height,Ee.depth,0,k,ce,ye.data)}else{V&&Re&&t.texStorage2D(r.TEXTURE_2D,we,ge,Je[0].width,Je[0].height);for(let ue=0,xe=Je.length;ue<xe;ue++)ye=Je[ue],P.format!==On?k!==null?V?t.compressedTexSubImage2D(r.TEXTURE_2D,ue,0,0,ye.width,ye.height,k,ye.data):t.compressedTexImage2D(r.TEXTURE_2D,ue,ge,ye.width,ye.height,0,ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?t.texSubImage2D(r.TEXTURE_2D,ue,0,0,ye.width,ye.height,k,ce,ye.data):t.texImage2D(r.TEXTURE_2D,ue,ge,ye.width,ye.height,0,k,ce,ye.data)}else if(P.isDataArrayTexture)V?(Re&&t.texStorage3D(r.TEXTURE_2D_ARRAY,we,ge,Ee.width,Ee.height,Ee.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Ee.width,Ee.height,Ee.depth,k,ce,Ee.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,ge,Ee.width,Ee.height,Ee.depth,0,k,ce,Ee.data);else if(P.isData3DTexture)V?(Re&&t.texStorage3D(r.TEXTURE_3D,we,ge,Ee.width,Ee.height,Ee.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Ee.width,Ee.height,Ee.depth,k,ce,Ee.data)):t.texImage3D(r.TEXTURE_3D,0,ge,Ee.width,Ee.height,Ee.depth,0,k,ce,Ee.data);else if(P.isFramebufferTexture){if(Re)if(V)t.texStorage2D(r.TEXTURE_2D,we,ge,Ee.width,Ee.height);else{let ue=Ee.width,xe=Ee.height;for(let Ze=0;Ze<we;Ze++)t.texImage2D(r.TEXTURE_2D,Ze,ge,ue,xe,0,k,ce,null),ue>>=1,xe>>=1}}else if(Je.length>0&&wt){V&&Re&&t.texStorage2D(r.TEXTURE_2D,we,ge,Je[0].width,Je[0].height);for(let ue=0,xe=Je.length;ue<xe;ue++)ye=Je[ue],V?t.texSubImage2D(r.TEXTURE_2D,ue,0,0,k,ce,ye):t.texImage2D(r.TEXTURE_2D,ue,ge,k,ce,ye);P.generateMipmaps=!1}else V?(Re&&t.texStorage2D(r.TEXTURE_2D,we,ge,Ee.width,Ee.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,k,ce,Ee)):t.texImage2D(r.TEXTURE_2D,0,ge,k,ce,Ee);R(P,wt)&&N(Me),Xe.__version=Se.version,P.onUpdate&&P.onUpdate(P)}O.__version=P.version}function We(O,P,$){if(P.image.length!==6)return;const Me=rt(O,P),_e=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture,r.TEXTURE0+$);const Se=n.get(_e);if(_e.version!==Se.__version||Me===!0){t.activeTexture(r.TEXTURE0+$);const Xe=Lt.getPrimaries(Lt.workingColorSpace),be=P.colorSpace===ei?null:Lt.getPrimaries(P.colorSpace),Ie=P.colorSpace===ei||Xe===be?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ie);const st=P.isCompressedTexture||P.image[0].isCompressedTexture,Et=P.image[0]&&P.image[0].isDataTexture,Ee=[];for(let ue=0;ue<6;ue++)!st&&!Et?Ee[ue]=E(P.image[ue],!1,!0,h):Ee[ue]=Et?P.image[ue].image:P.image[ue],Ee[ue]=Nt(P,Ee[ue]);const wt=Ee[0],k=A(wt)||c,ce=s.convert(P.format,P.colorSpace),ge=s.convert(P.type),ye=F(P.internalFormat,ce,ge,P.colorSpace),Je=c&&P.isVideoTexture!==!0,V=Se.__version===void 0||Me===!0;let Re=b(P,wt,k);Ue(r.TEXTURE_CUBE_MAP,P,k);let we;if(st){Je&&V&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Re,ye,wt.width,wt.height);for(let ue=0;ue<6;ue++){we=Ee[ue].mipmaps;for(let xe=0;xe<we.length;xe++){const Ze=we[xe];P.format!==On?ce!==null?Je?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe,0,0,Ze.width,Ze.height,ce,Ze.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe,ye,Ze.width,Ze.height,0,Ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe,0,0,Ze.width,Ze.height,ce,ge,Ze.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe,ye,Ze.width,Ze.height,0,ce,ge,Ze.data)}}}else{we=P.mipmaps,Je&&V&&(we.length>0&&Re++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Re,ye,Ee[0].width,Ee[0].height));for(let ue=0;ue<6;ue++)if(Et){Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,0,0,0,Ee[ue].width,Ee[ue].height,ce,ge,Ee[ue].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,0,ye,Ee[ue].width,Ee[ue].height,0,ce,ge,Ee[ue].data);for(let xe=0;xe<we.length;xe++){const pt=we[xe].image[ue].image;Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe+1,0,0,pt.width,pt.height,ce,ge,pt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe+1,ye,pt.width,pt.height,0,ce,ge,pt.data)}}else{Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,0,0,0,ce,ge,Ee[ue]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,0,ye,ce,ge,Ee[ue]);for(let xe=0;xe<we.length;xe++){const Ze=we[xe];Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe+1,0,0,ce,ge,Ze.image[ue]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ue,xe+1,ye,ce,ge,Ze.image[ue])}}}R(P,k)&&N(r.TEXTURE_CUBE_MAP),Se.__version=_e.version,P.onUpdate&&P.onUpdate(P)}O.__version=P.version}function Ge(O,P,$,Me,_e,Se){const Xe=s.convert($.format,$.colorSpace),be=s.convert($.type),Ie=F($.internalFormat,Xe,be,$.colorSpace);if(!n.get(P).__hasExternalTextures){const Et=Math.max(1,P.width>>Se),Ee=Math.max(1,P.height>>Se);_e===r.TEXTURE_3D||_e===r.TEXTURE_2D_ARRAY?t.texImage3D(_e,Se,Ie,Et,Ee,P.depth,0,Xe,be,null):t.texImage2D(_e,Se,Ie,Et,Ee,0,Xe,be,null)}t.bindFramebuffer(r.FRAMEBUFFER,O),$e(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Me,_e,n.get($).__webglTexture,0,ze(P)):(_e===r.TEXTURE_2D||_e>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&_e<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Me,_e,n.get($).__webglTexture,Se),t.bindFramebuffer(r.FRAMEBUFFER,null)}function z(O,P,$){if(r.bindRenderbuffer(r.RENDERBUFFER,O),P.depthBuffer&&!P.stencilBuffer){let Me=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if($||$e(P)){const _e=P.depthTexture;_e&&_e.isDepthTexture&&(_e.type===Si?Me=r.DEPTH_COMPONENT32F:_e.type===nr&&(Me=r.DEPTH_COMPONENT24));const Se=ze(P);$e(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Se,Me,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,Se,Me,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,Me,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,O)}else if(P.depthBuffer&&P.stencilBuffer){const Me=ze(P);$&&$e(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Me,r.DEPTH24_STENCIL8,P.width,P.height):$e(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Me,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,O)}else{const Me=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let _e=0;_e<Me.length;_e++){const Se=Me[_e],Xe=s.convert(Se.format,Se.colorSpace),be=s.convert(Se.type),Ie=F(Se.internalFormat,Xe,be,Se.colorSpace),st=ze(P);$&&$e(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,st,Ie,P.width,P.height):$e(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,st,Ie,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,Ie,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function ve(O,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,O),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),Z(P.depthTexture,0);const Me=n.get(P.depthTexture).__webglTexture,_e=ze(P);if(P.depthTexture.format===Cr)$e(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Me,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Me,0);else if(P.depthTexture.format===_s)$e(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Me,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Me,0);else throw new Error("Unknown depthTexture format")}function he(O){const P=n.get(O),$=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!P.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");ve(P.__webglFramebuffer,O)}else if($){P.__webglDepthbuffer=[];for(let Me=0;Me<6;Me++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[Me]),P.__webglDepthbuffer[Me]=r.createRenderbuffer(),z(P.__webglDepthbuffer[Me],O,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),z(P.__webglDepthbuffer,O,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ae(O,P,$){const Me=n.get(O);P!==void 0&&Ge(Me.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),$!==void 0&&he(O)}function pe(O){const P=O.texture,$=n.get(O),Me=n.get(P);O.addEventListener("dispose",j),O.isWebGLMultipleRenderTargets!==!0&&(Me.__webglTexture===void 0&&(Me.__webglTexture=r.createTexture()),Me.__version=P.version,l.memory.textures++);const _e=O.isWebGLCubeRenderTarget===!0,Se=O.isWebGLMultipleRenderTargets===!0,Xe=A(O)||c;if(_e){$.__webglFramebuffer=[];for(let be=0;be<6;be++)if(c&&P.mipmaps&&P.mipmaps.length>0){$.__webglFramebuffer[be]=[];for(let Ie=0;Ie<P.mipmaps.length;Ie++)$.__webglFramebuffer[be][Ie]=r.createFramebuffer()}else $.__webglFramebuffer[be]=r.createFramebuffer()}else{if(c&&P.mipmaps&&P.mipmaps.length>0){$.__webglFramebuffer=[];for(let be=0;be<P.mipmaps.length;be++)$.__webglFramebuffer[be]=r.createFramebuffer()}else $.__webglFramebuffer=r.createFramebuffer();if(Se)if(i.drawBuffers){const be=O.texture;for(let Ie=0,st=be.length;Ie<st;Ie++){const Et=n.get(be[Ie]);Et.__webglTexture===void 0&&(Et.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&$e(O)===!1){const be=Se?P:[P];$.__webglMultisampledFramebuffer=r.createFramebuffer(),$.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,$.__webglMultisampledFramebuffer);for(let Ie=0;Ie<be.length;Ie++){const st=be[Ie];$.__webglColorRenderbuffer[Ie]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,$.__webglColorRenderbuffer[Ie]);const Et=s.convert(st.format,st.colorSpace),Ee=s.convert(st.type),wt=F(st.internalFormat,Et,Ee,st.colorSpace,O.isXRRenderTarget===!0),k=ze(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,k,wt,O.width,O.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ie,r.RENDERBUFFER,$.__webglColorRenderbuffer[Ie])}r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&($.__webglDepthRenderbuffer=r.createRenderbuffer(),z($.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(_e){t.bindTexture(r.TEXTURE_CUBE_MAP,Me.__webglTexture),Ue(r.TEXTURE_CUBE_MAP,P,Xe);for(let be=0;be<6;be++)if(c&&P.mipmaps&&P.mipmaps.length>0)for(let Ie=0;Ie<P.mipmaps.length;Ie++)Ge($.__webglFramebuffer[be][Ie],O,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ie);else Ge($.__webglFramebuffer[be],O,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+be,0);R(P,Xe)&&N(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Se){const be=O.texture;for(let Ie=0,st=be.length;Ie<st;Ie++){const Et=be[Ie],Ee=n.get(Et);t.bindTexture(r.TEXTURE_2D,Ee.__webglTexture),Ue(r.TEXTURE_2D,Et,Xe),Ge($.__webglFramebuffer,O,Et,r.COLOR_ATTACHMENT0+Ie,r.TEXTURE_2D,0),R(Et,Xe)&&N(r.TEXTURE_2D)}t.unbindTexture()}else{let be=r.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?be=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(be,Me.__webglTexture),Ue(be,P,Xe),c&&P.mipmaps&&P.mipmaps.length>0)for(let Ie=0;Ie<P.mipmaps.length;Ie++)Ge($.__webglFramebuffer[Ie],O,P,r.COLOR_ATTACHMENT0,be,Ie);else Ge($.__webglFramebuffer,O,P,r.COLOR_ATTACHMENT0,be,0);R(P,Xe)&&N(be),t.unbindTexture()}O.depthBuffer&&he(O)}function qe(O){const P=A(O)||c,$=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let Me=0,_e=$.length;Me<_e;Me++){const Se=$[Me];if(R(Se,P)){const Xe=O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,be=n.get(Se).__webglTexture;t.bindTexture(Xe,be),N(Xe),t.unbindTexture()}}}function Ne(O){if(c&&O.samples>0&&$e(O)===!1){const P=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],$=O.width,Me=O.height;let _e=r.COLOR_BUFFER_BIT;const Se=[],Xe=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,be=n.get(O),Ie=O.isWebGLMultipleRenderTargets===!0;if(Ie)for(let st=0;st<P.length;st++)t.bindFramebuffer(r.FRAMEBUFFER,be.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+st,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,be.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+st,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,be.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,be.__webglFramebuffer);for(let st=0;st<P.length;st++){Se.push(r.COLOR_ATTACHMENT0+st),O.depthBuffer&&Se.push(Xe);const Et=be.__ignoreDepthValues!==void 0?be.__ignoreDepthValues:!1;if(Et===!1&&(O.depthBuffer&&(_e|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&(_e|=r.STENCIL_BUFFER_BIT)),Ie&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,be.__webglColorRenderbuffer[st]),Et===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[Xe]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[Xe])),Ie){const Ee=n.get(P[st]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Ee,0)}r.blitFramebuffer(0,0,$,Me,0,0,$,Me,_e,r.NEAREST),_&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Se)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Ie)for(let st=0;st<P.length;st++){t.bindFramebuffer(r.FRAMEBUFFER,be.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+st,r.RENDERBUFFER,be.__webglColorRenderbuffer[st]);const Et=n.get(P[st]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,be.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+st,r.TEXTURE_2D,Et,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,be.__webglMultisampledFramebuffer)}}function ze(O){return Math.min(p,O.samples)}function $e(O){const P=n.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function xt(O){const P=l.render.frame;y.get(O)!==P&&(y.set(O,P),O.update())}function Nt(O,P){const $=O.colorSpace,Me=O.format,_e=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===$c||$!==Bi&&$!==ei&&(Lt.getTransfer($)===Ft?c===!1?e.has("EXT_sRGB")===!0&&Me===On?(O.format=$c,O.minFilter=en,O.generateMipmaps=!1):P=Hd.sRGBToLinear(P):(Me!==On||_e!==Fi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",$)),P}this.allocateTextureUnit=X,this.resetTextureUnits=se,this.setTexture2D=Z,this.setTexture2DArray=ee,this.setTexture3D=me,this.setTextureCube=J,this.rebindTextures=Ae,this.setupRenderTarget=pe,this.updateRenderTargetMipmap=qe,this.updateMultisampleRenderTarget=Ne,this.setupDepthRenderbuffer=he,this.setupFrameBufferTexture=Ge,this.useMultisampledRTT=$e}function hv(r,e,t){const n=t.isWebGL2;function i(s,l=ei){let c;const u=Lt.getTransfer(l);if(s===Fi)return r.UNSIGNED_BYTE;if(s===Ld)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Id)return r.UNSIGNED_SHORT_5_5_5_1;if(s===P0)return r.BYTE;if(s===L0)return r.SHORT;if(s===au)return r.UNSIGNED_SHORT;if(s===Pd)return r.INT;if(s===nr)return r.UNSIGNED_INT;if(s===Si)return r.FLOAT;if(s===yo)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===I0)return r.ALPHA;if(s===On)return r.RGBA;if(s===D0)return r.LUMINANCE;if(s===N0)return r.LUMINANCE_ALPHA;if(s===Cr)return r.DEPTH_COMPONENT;if(s===_s)return r.DEPTH_STENCIL;if(s===$c)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===U0)return r.RED;if(s===Dd)return r.RED_INTEGER;if(s===O0)return r.RG;if(s===Nd)return r.RG_INTEGER;if(s===Ud)return r.RGBA_INTEGER;if(s===Vc||s===Gc||s===Wc||s===Xc)if(u===Ft)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Vc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Gc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Wc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Xc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Vc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Gc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Wc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Xc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Gf||s===Wf||s===Xf||s===Yf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===Gf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Wf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Xf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Yf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Od)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===qf||s===Zf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===qf)return u===Ft?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Zf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===jf||s===Jf||s===Kf||s===Qf||s===$f||s===ed||s===td||s===nd||s===id||s===rd||s===sd||s===od||s===ad||s===ld)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===jf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Jf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Kf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Qf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===$f)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===ed)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===td)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===nd)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===id)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===rd)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===sd)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===od)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===ad)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===ld)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Yc||s===cd||s===ud)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Yc)return u===Ft?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===cd)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===ud)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===F0||s===hd||s===fd||s===dd)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Yc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===hd)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===fd)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===dd)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===br?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class fv extends tn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class mo extends Pt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const dT={type:"move"};class lf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new mo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new mo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new mo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const M of e.hand.values()){const x=t.getJointPose(M,n),v=this._getHandJoint(h,M);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),_=.02,y=.005;h.inputState.pinching&&m>_+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=_-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(dT)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new mo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class pT extends ar{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,_=null,y=null;const M=t.getContextAttributes();let x=null,v=null;const w=[],E=[],A=new fe;let C=null;const R=new tn;R.layers.enable(1),R.viewport=new It;const N=new tn;N.layers.enable(2),N.viewport=new It;const F=[R,N],b=new fv;b.layers.enable(1),b.layers.enable(2);let L=null,B=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(J){let de=w[J];return de===void 0&&(de=new lf,w[J]=de),de.getTargetRaySpace()},this.getControllerGrip=function(J){let de=w[J];return de===void 0&&(de=new lf,w[J]=de),de.getGripSpace()},this.getHand=function(J){let de=w[J];return de===void 0&&(de=new lf,w[J]=de),de.getHandSpace()};function j(J){const de=E.indexOf(J.inputSource);if(de===-1)return;const Ce=w[de];Ce!==void 0&&(Ce.update(J.inputSource,J.frame,h||l),Ce.dispatchEvent({type:J.type,data:J.inputSource}))}function ae(){i.removeEventListener("select",j),i.removeEventListener("selectstart",j),i.removeEventListener("selectend",j),i.removeEventListener("squeeze",j),i.removeEventListener("squeezestart",j),i.removeEventListener("squeezeend",j),i.removeEventListener("end",ae),i.removeEventListener("inputsourceschange",H);for(let J=0;J<w.length;J++){const de=E[J];de!==null&&(E[J]=null,w[J].disconnect(de))}L=null,B=null,e.setRenderTarget(x),_=null,m=null,p=null,i=null,v=null,me.stop(),n.isPresenting=!1,e.setPixelRatio(C),e.setSize(A.width,A.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(J){s=J,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(J){c=J,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(J){h=J},this.getBaseLayer=function(){return m!==null?m:_},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(J){if(i=J,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",j),i.addEventListener("selectstart",j),i.addEventListener("selectend",j),i.addEventListener("squeeze",j),i.addEventListener("squeezestart",j),i.addEventListener("squeezeend",j),i.addEventListener("end",ae),i.addEventListener("inputsourceschange",H),M.xrCompatible!==!0&&await t.makeXRCompatible(),C=e.getPixelRatio(),e.getSize(A),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const de={antialias:i.renderState.layers===void 0?M.antialias:!0,alpha:!0,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,de),i.updateRenderState({baseLayer:_}),e.setPixelRatio(1),e.setSize(_.framebufferWidth,_.framebufferHeight,!1),v=new Ei(_.framebufferWidth,_.framebufferHeight,{format:On,type:Fi,colorSpace:e.outputColorSpace,stencilBuffer:M.stencil})}else{let de=null,Ce=null,Fe=null;M.depth&&(Fe=M.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,de=M.stencil?_s:Cr,Ce=M.stencil?br:nr);const Ue={colorFormat:t.RGBA8,depthFormat:Fe,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Ue),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),v=new Ei(m.textureWidth,m.textureHeight,{format:On,type:Fi,depthTexture:new Yd(m.textureWidth,m.textureHeight,Ce,void 0,void 0,void 0,void 0,void 0,void 0,de),stencilBuffer:M.stencil,colorSpace:e.outputColorSpace,samples:M.antialias?4:0});const rt=e.properties.get(v);rt.__ignoreDepthValues=m.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),me.setContext(i),me.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function H(J){for(let de=0;de<J.removed.length;de++){const Ce=J.removed[de],Fe=E.indexOf(Ce);Fe>=0&&(E[Fe]=null,w[Fe].disconnect(Ce))}for(let de=0;de<J.added.length;de++){const Ce=J.added[de];let Fe=E.indexOf(Ce);if(Fe===-1){for(let rt=0;rt<w.length;rt++)if(rt>=E.length){E.push(Ce),Fe=rt;break}else if(E[rt]===null){E[rt]=Ce,Fe=rt;break}if(Fe===-1)break}const Ue=w[Fe];Ue&&Ue.connect(Ce)}}const Q=new D,oe=new D;function se(J,de,Ce){Q.setFromMatrixPosition(de.matrixWorld),oe.setFromMatrixPosition(Ce.matrixWorld);const Fe=Q.distanceTo(oe),Ue=de.projectionMatrix.elements,rt=Ce.projectionMatrix.elements,nt=Ue[14]/(Ue[10]-1),We=Ue[14]/(Ue[10]+1),Ge=(Ue[9]+1)/Ue[5],z=(Ue[9]-1)/Ue[5],ve=(Ue[8]-1)/Ue[0],he=(rt[8]+1)/rt[0],Ae=nt*ve,pe=nt*he,qe=Fe/(-ve+he),Ne=qe*-ve;de.matrixWorld.decompose(J.position,J.quaternion,J.scale),J.translateX(Ne),J.translateZ(qe),J.matrixWorld.compose(J.position,J.quaternion,J.scale),J.matrixWorldInverse.copy(J.matrixWorld).invert();const ze=nt+qe,$e=We+qe,xt=Ae-Ne,Nt=pe+(Fe-Ne),O=Ge*We/$e*ze,P=z*We/$e*ze;J.projectionMatrix.makePerspective(xt,Nt,O,P,ze,$e),J.projectionMatrixInverse.copy(J.projectionMatrix).invert()}function X(J,de){de===null?J.matrixWorld.copy(J.matrix):J.matrixWorld.multiplyMatrices(de.matrixWorld,J.matrix),J.matrixWorldInverse.copy(J.matrixWorld).invert()}this.updateCamera=function(J){if(i===null)return;b.near=N.near=R.near=J.near,b.far=N.far=R.far=J.far,(L!==b.near||B!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),L=b.near,B=b.far);const de=J.parent,Ce=b.cameras;X(b,de);for(let Fe=0;Fe<Ce.length;Fe++)X(Ce[Fe],de);Ce.length===2?se(b,R,N):b.projectionMatrix.copy(R.projectionMatrix),Y(J,b,de)};function Y(J,de,Ce){Ce===null?J.matrix.copy(de.matrixWorld):(J.matrix.copy(Ce.matrixWorld),J.matrix.invert(),J.matrix.multiply(de.matrixWorld)),J.matrix.decompose(J.position,J.quaternion,J.scale),J.updateMatrixWorld(!0),J.projectionMatrix.copy(de.projectionMatrix),J.projectionMatrixInverse.copy(de.projectionMatrixInverse),J.isPerspectiveCamera&&(J.fov=So*2*Math.atan(1/J.projectionMatrix.elements[5]),J.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&_===null))return u},this.setFoveation=function(J){u=J,m!==null&&(m.fixedFoveation=J),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=J)};let Z=null;function ee(J,de){if(f=de.getViewerPose(h||l),y=de,f!==null){const Ce=f.views;_!==null&&(e.setRenderTargetFramebuffer(v,_.framebuffer),e.setRenderTarget(v));let Fe=!1;Ce.length!==b.cameras.length&&(b.cameras.length=0,Fe=!0);for(let Ue=0;Ue<Ce.length;Ue++){const rt=Ce[Ue];let nt=null;if(_!==null)nt=_.getViewport(rt);else{const Ge=p.getViewSubImage(m,rt);nt=Ge.viewport,Ue===0&&(e.setRenderTargetTextures(v,Ge.colorTexture,m.ignoreDepthValues?void 0:Ge.depthStencilTexture),e.setRenderTarget(v))}let We=F[Ue];We===void 0&&(We=new tn,We.layers.enable(Ue),We.viewport=new It,F[Ue]=We),We.matrix.fromArray(rt.transform.matrix),We.matrix.decompose(We.position,We.quaternion,We.scale),We.projectionMatrix.fromArray(rt.projectionMatrix),We.projectionMatrixInverse.copy(We.projectionMatrix).invert(),We.viewport.set(nt.x,nt.y,nt.width,nt.height),Ue===0&&(b.matrix.copy(We.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),Fe===!0&&b.cameras.push(We)}}for(let Ce=0;Ce<w.length;Ce++){const Fe=E[Ce],Ue=w[Ce];Fe!==null&&Ue!==void 0&&Ue.update(Fe,de,h||l)}Z&&Z(J,de),de.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:de}),y=null}const me=new sv;me.setAnimationLoop(ee),this.setAnimationLoop=function(J){Z=J},this.dispose=function(){}}}function mT(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,tv(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,w,E,A){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),f(x,v)):v.isMeshStandardMaterial?(s(x,v),m(x,v),v.isMeshPhysicalMaterial&&_(x,v,A)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),M(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,w,E):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===Fn&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===Fn&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const w=e.get(v).envMap;if(w&&(x.envMap.value=w,x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const E=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*E,t(v.lightMap,x.lightMapTransform)}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,w,E){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*w,x.scale.value=E*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function f(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function m(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function _(x,v,w){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===Fn&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function M(x,v){const w=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function gT(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,E){const A=E.program;n.uniformBlockBinding(w,A)}function h(w,E){let A=i[w.id];A===void 0&&(y(w),A=f(w),i[w.id]=A,w.addEventListener("dispose",x));const C=E.program;n.updateUBOMapping(w,C);const R=e.render.frame;s[w.id]!==R&&(m(w),s[w.id]=R)}function f(w){const E=p();w.__bindingPointIndex=E;const A=r.createBuffer(),C=w.__size,R=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,C,R),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,E,A),A}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const E=i[w.id],A=w.uniforms,C=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,E);for(let R=0,N=A.length;R<N;R++){const F=A[R];if(_(F,R,C)===!0){const b=F.__offset,L=Array.isArray(F.value)?F.value:[F.value];let B=0;for(let j=0;j<L.length;j++){const ae=L[j],H=M(ae);typeof ae=="number"?(F.__data[0]=ae,r.bufferSubData(r.UNIFORM_BUFFER,b+B,F.__data)):ae.isMatrix3?(F.__data[0]=ae.elements[0],F.__data[1]=ae.elements[1],F.__data[2]=ae.elements[2],F.__data[3]=ae.elements[0],F.__data[4]=ae.elements[3],F.__data[5]=ae.elements[4],F.__data[6]=ae.elements[5],F.__data[7]=ae.elements[0],F.__data[8]=ae.elements[6],F.__data[9]=ae.elements[7],F.__data[10]=ae.elements[8],F.__data[11]=ae.elements[0]):(ae.toArray(F.__data,B),B+=H.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,b,F.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(w,E,A){const C=w.value;if(A[E]===void 0){if(typeof C=="number")A[E]=C;else{const R=Array.isArray(C)?C:[C],N=[];for(let F=0;F<R.length;F++)N.push(R[F].clone());A[E]=N}return!0}else if(typeof C=="number"){if(A[E]!==C)return A[E]=C,!0}else{const R=Array.isArray(A[E])?A[E]:[A[E]],N=Array.isArray(C)?C:[C];for(let F=0;F<R.length;F++){const b=R[F];if(b.equals(N[F])===!1)return b.copy(N[F]),!0}}return!1}function y(w){const E=w.uniforms;let A=0;const C=16;let R=0;for(let N=0,F=E.length;N<F;N++){const b=E[N],L={boundary:0,storage:0},B=Array.isArray(b.value)?b.value:[b.value];for(let j=0,ae=B.length;j<ae;j++){const H=B[j],Q=M(H);L.boundary+=Q.boundary,L.storage+=Q.storage}if(b.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=A,N>0){R=A%C;const j=C-R;R!==0&&j-L.boundary<0&&(A+=C-R,b.__offset=A)}A+=L.storage}return R=A%C,R>0&&(A+=C-R),w.__size=A,w.__cache={},this}function M(w){const E={boundary:0,storage:0};return typeof w=="number"?(E.boundary=4,E.storage=4):w.isVector2?(E.boundary=8,E.storage=8):w.isVector3||w.isColor?(E.boundary=16,E.storage=12):w.isVector4?(E.boundary=16,E.storage=16):w.isMatrix3?(E.boundary=48,E.storage=48):w.isMatrix4?(E.boundary=64,E.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),E}function x(w){const E=w.target;E.removeEventListener("dispose",x);const A=l.indexOf(E.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[E.id]),delete i[E.id],delete s[E.id]}function v(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}class jd{constructor(e={}){const{canvas:t=Q0(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const _=new Uint32Array(4),y=new Int32Array(4);let M=null,x=null;const v=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=an,this._useLegacyLights=!1,this.toneMapping=Oi,this.toneMappingExposure=1;const E=this;let A=!1,C=0,R=0,N=null,F=-1,b=null;const L=new It,B=new It;let j=null;const ae=new ke(0);let H=0,Q=t.width,oe=t.height,se=1,X=null,Y=null;const Z=new It(0,0,Q,oe),ee=new It(0,0,Q,oe);let me=!1;const J=new Wa;let de=!1,Ce=!1,Fe=null;const Ue=new lt,rt=new fe,nt=new D,We={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ge(){return N===null?se:1}let z=n;function ve(I,q){for(let ne=0;ne<I.length;ne++){const re=I[ne],te=t.getContext(re,q);if(te!==null)return te}return null}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ru}`),t.addEventListener("webglcontextlost",Je,!1),t.addEventListener("webglcontextrestored",V,!1),t.addEventListener("webglcontextcreationerror",Re,!1),z===null){const q=["webgl2","webgl","experimental-webgl"];if(E.isWebGL1Renderer===!0&&q.shift(),z=ve(q,I),z===null)throw ve(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&z instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let he,Ae,pe,qe,Ne,ze,$e,xt,Nt,O,P,$,Me,_e,Se,Xe,be,Ie,st,Et,Ee,wt,k,ce;function ge(){he=new Lw(z),Ae=new Tw(z,he,e),he.init(Ae),wt=new hv(z,he,Ae),pe=new hT(z,he,Ae),qe=new Nw(z),Ne=new $1,ze=new fT(z,he,pe,Ne,Ae,wt,qe),$e=new bw(E),xt=new Pw(E),Nt=new VS(z,Ae),k=new Ew(z,he,Nt,Ae),O=new Iw(z,Nt,qe,k),P=new zw(z,O,Nt,qe),st=new Fw(z,Ae,ze),Xe=new Aw(Ne),$=new Q1(E,$e,xt,he,Ae,k,Xe),Me=new mT(E,Ne),_e=new tT,Se=new aT(he,Ae),Ie=new Mw(E,$e,xt,pe,P,m,u),be=new uT(E,P,Ae),ce=new gT(z,qe,Ae,pe),Et=new ww(z,he,qe,Ae),Ee=new Dw(z,he,qe,Ae),qe.programs=$.programs,E.capabilities=Ae,E.extensions=he,E.properties=Ne,E.renderLists=_e,E.shadowMap=be,E.state=pe,E.info=qe}ge();const ye=new pT(E,z);this.xr=ye,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const I=he.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=he.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return se},this.setPixelRatio=function(I){I!==void 0&&(se=I,this.setSize(Q,oe,!1))},this.getSize=function(I){return I.set(Q,oe)},this.setSize=function(I,q,ne=!0){if(ye.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Q=I,oe=q,t.width=Math.floor(I*se),t.height=Math.floor(q*se),ne===!0&&(t.style.width=I+"px",t.style.height=q+"px"),this.setViewport(0,0,I,q)},this.getDrawingBufferSize=function(I){return I.set(Q*se,oe*se).floor()},this.setDrawingBufferSize=function(I,q,ne){Q=I,oe=q,se=ne,t.width=Math.floor(I*ne),t.height=Math.floor(q*ne),this.setViewport(0,0,I,q)},this.getCurrentViewport=function(I){return I.copy(L)},this.getViewport=function(I){return I.copy(Z)},this.setViewport=function(I,q,ne,re){I.isVector4?Z.set(I.x,I.y,I.z,I.w):Z.set(I,q,ne,re),pe.viewport(L.copy(Z).multiplyScalar(se).floor())},this.getScissor=function(I){return I.copy(ee)},this.setScissor=function(I,q,ne,re){I.isVector4?ee.set(I.x,I.y,I.z,I.w):ee.set(I,q,ne,re),pe.scissor(B.copy(ee).multiplyScalar(se).floor())},this.getScissorTest=function(){return me},this.setScissorTest=function(I){pe.setScissorTest(me=I)},this.setOpaqueSort=function(I){X=I},this.setTransparentSort=function(I){Y=I},this.getClearColor=function(I){return I.copy(Ie.getClearColor())},this.setClearColor=function(){Ie.setClearColor.apply(Ie,arguments)},this.getClearAlpha=function(){return Ie.getClearAlpha()},this.setClearAlpha=function(){Ie.setClearAlpha.apply(Ie,arguments)},this.clear=function(I=!0,q=!0,ne=!0){let re=0;if(I){let te=!1;if(N!==null){const Be=N.texture.format;te=Be===Ud||Be===Nd||Be===Dd}if(te){const Be=N.texture.type,Ke=Be===Fi||Be===nr||Be===au||Be===br||Be===Ld||Be===Id,it=Ie.getClearColor(),ot=Ie.getClearAlpha(),ut=it.r,ct=it.g,ht=it.b;Ke?(_[0]=ut,_[1]=ct,_[2]=ht,_[3]=ot,z.clearBufferuiv(z.COLOR,0,_)):(y[0]=ut,y[1]=ct,y[2]=ht,y[3]=ot,z.clearBufferiv(z.COLOR,0,y))}else re|=z.COLOR_BUFFER_BIT}q&&(re|=z.DEPTH_BUFFER_BIT),ne&&(re|=z.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),z.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Je,!1),t.removeEventListener("webglcontextrestored",V,!1),t.removeEventListener("webglcontextcreationerror",Re,!1),_e.dispose(),Se.dispose(),Ne.dispose(),$e.dispose(),xt.dispose(),P.dispose(),k.dispose(),ce.dispose(),$.dispose(),ye.dispose(),ye.removeEventListener("sessionstart",Bt),ye.removeEventListener("sessionend",Tt),Fe&&(Fe.dispose(),Fe=null),_n.stop()};function Je(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function V(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const I=qe.autoReset,q=be.enabled,ne=be.autoUpdate,re=be.needsUpdate,te=be.type;ge(),qe.autoReset=I,be.enabled=q,be.autoUpdate=ne,be.needsUpdate=re,be.type=te}function Re(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function we(I){const q=I.target;q.removeEventListener("dispose",we),ue(q)}function ue(I){xe(I),Ne.remove(I)}function xe(I){const q=Ne.get(I).programs;q!==void 0&&(q.forEach(function(ne){$.releaseProgram(ne)}),I.isShaderMaterial&&$.releaseShaderCache(I))}this.renderBufferDirect=function(I,q,ne,re,te,Be){q===null&&(q=We);const Ke=te.isMesh&&te.matrixWorld.determinant()<0,it=Iu(I,q,ne,re,te);pe.setMaterial(re,Ke);let ot=ne.index,ut=1;if(re.wireframe===!0){if(ot=O.getWireframeAttribute(ne),ot===void 0)return;ut=2}const ct=ne.drawRange,ht=ne.attributes.position;let Vt=ct.start*ut,vn=(ct.start+ct.count)*ut;Be!==null&&(Vt=Math.max(Vt,Be.start*ut),vn=Math.min(vn,(Be.start+Be.count)*ut)),ot!==null?(Vt=Math.max(Vt,0),vn=Math.min(vn,ot.count)):ht!=null&&(Vt=Math.max(Vt,0),vn=Math.min(vn,ht.count));const zt=vn-Vt;if(zt<0||zt===1/0)return;k.setup(te,re,it,ne,ot);let hn,at=Et;if(ot!==null&&(hn=Nt.get(ot),at=Ee,at.setIndex(hn)),te.isMesh)re.wireframe===!0?(pe.setLineWidth(re.wireframeLinewidth*Ge()),at.setMode(z.LINES)):at.setMode(z.TRIANGLES);else if(te.isLine){let He=re.linewidth;He===void 0&&(He=1),pe.setLineWidth(He*Ge()),te.isLineSegments?at.setMode(z.LINES):te.isLineLoop?at.setMode(z.LINE_LOOP):at.setMode(z.LINE_STRIP)}else te.isPoints?at.setMode(z.POINTS):te.isSprite&&at.setMode(z.TRIANGLES);if(te.isBatchedMesh)at.renderMultiDraw(te._multiDrawStarts,te._multiDrawCounts,te._multiDrawCount);else if(te.isInstancedMesh)at.renderInstances(Vt,zt,te.count);else if(ne.isInstancedBufferGeometry){const He=ne._maxInstanceCount!==void 0?ne._maxInstanceCount:1/0,ii=Math.min(ne.instanceCount,He);at.renderInstances(Vt,zt,ii)}else at.render(Vt,zt)};function Ze(I,q,ne){I.transparent===!0&&I.side===Ui&&I.forceSinglePass===!1?(I.side=Fn,I.needsUpdate=!0,As(I,q,ne),I.side=rr,I.needsUpdate=!0,As(I,q,ne),I.side=Ui):As(I,q,ne)}this.compile=function(I,q,ne=null){ne===null&&(ne=I),x=Se.get(ne),x.init(),w.push(x),ne.traverseVisible(function(te){te.isLight&&te.layers.test(q.layers)&&(x.pushLight(te),te.castShadow&&x.pushShadow(te))}),I!==ne&&I.traverseVisible(function(te){te.isLight&&te.layers.test(q.layers)&&(x.pushLight(te),te.castShadow&&x.pushShadow(te))}),x.setupLights(E._useLegacyLights);const re=new Set;return I.traverse(function(te){const Be=te.material;if(Be)if(Array.isArray(Be))for(let Ke=0;Ke<Be.length;Ke++){const it=Be[Ke];Ze(it,ne,te),re.add(it)}else Ze(Be,ne,te),re.add(Be)}),w.pop(),x=null,re},this.compileAsync=function(I,q,ne=null){const re=this.compile(I,q,ne);return new Promise(te=>{function Be(){if(re.forEach(function(Ke){Ne.get(Ke).currentProgram.isReady()&&re.delete(Ke)}),re.size===0){te(I);return}setTimeout(Be,10)}he.get("KHR_parallel_shader_compile")!==null?Be():setTimeout(Be,10)})};let pt=null;function Ut(I){pt&&pt(I)}function Bt(){_n.stop()}function Tt(){_n.start()}const _n=new sv;_n.setAnimationLoop(Ut),typeof self<"u"&&_n.setContext(self),this.setAnimationLoop=function(I){pt=I,ye.setAnimationLoop(I),I===null?_n.stop():_n.start()},ye.addEventListener("sessionstart",Bt),ye.addEventListener("sessionend",Tt),this.render=function(I,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),ye.enabled===!0&&ye.isPresenting===!0&&(ye.cameraAutoUpdate===!0&&ye.updateCamera(q),q=ye.getCamera()),I.isScene===!0&&I.onBeforeRender(E,I,q,N),x=Se.get(I,w.length),x.init(),w.push(x),Ue.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),J.setFromProjectionMatrix(Ue),Ce=this.localClippingEnabled,de=Xe.init(this.clippingPlanes,Ce),M=_e.get(I,v.length),M.init(),v.push(M),ni(I,q,0,E.sortObjects),M.finish(),E.sortObjects===!0&&M.sort(X,Y),this.info.render.frame++,de===!0&&Xe.beginShadows();const ne=x.state.shadowsArray;if(be.render(ne,I,q),de===!0&&Xe.endShadows(),this.info.autoReset===!0&&this.info.reset(),Ie.render(M,I),x.setupLights(E._useLegacyLights),q.isArrayCamera){const re=q.cameras;for(let te=0,Be=re.length;te<Be;te++){const Ke=re[te];Po(M,I,Ke,Ke.viewport)}}else Po(M,I,q);N!==null&&(ze.updateMultisampleRenderTarget(N),ze.updateRenderTargetMipmap(N)),I.isScene===!0&&I.onAfterRender(E,I,q),k.resetDefaultState(),F=-1,b=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,v.pop(),v.length>0?M=v[v.length-1]:M=null};function ni(I,q,ne,re){if(I.visible===!1)return;if(I.layers.test(q.layers)){if(I.isGroup)ne=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(q);else if(I.isLight)x.pushLight(I),I.castShadow&&x.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||J.intersectsSprite(I)){re&&nt.setFromMatrixPosition(I.matrixWorld).applyMatrix4(Ue);const Ke=P.update(I),it=I.material;it.visible&&M.push(I,Ke,it,ne,nt.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||J.intersectsObject(I))){const Ke=P.update(I),it=I.material;if(re&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),nt.copy(I.boundingSphere.center)):(Ke.boundingSphere===null&&Ke.computeBoundingSphere(),nt.copy(Ke.boundingSphere.center)),nt.applyMatrix4(I.matrixWorld).applyMatrix4(Ue)),Array.isArray(it)){const ot=Ke.groups;for(let ut=0,ct=ot.length;ut<ct;ut++){const ht=ot[ut],Vt=it[ht.materialIndex];Vt&&Vt.visible&&M.push(I,Ke,Vt,ne,nt.z,ht)}}else it.visible&&M.push(I,Ke,it,ne,nt.z,null)}}const Be=I.children;for(let Ke=0,it=Be.length;Ke<it;Ke++)ni(Be[Ke],q,ne,re)}function Po(I,q,ne,re){const te=I.opaque,Be=I.transmissive,Ke=I.transparent;x.setupLightsView(ne),de===!0&&Xe.setGlobalState(E.clippingPlanes,ne),Be.length>0&&Lo(te,Be,q,ne),re&&pe.viewport(L.copy(re)),te.length>0&&Ts(te,q,ne),Be.length>0&&Ts(Be,q,ne),Ke.length>0&&Ts(Ke,q,ne),pe.buffers.depth.setTest(!0),pe.buffers.depth.setMask(!0),pe.buffers.color.setMask(!0),pe.setPolygonOffset(!1)}function Lo(I,q,ne,re){if((ne.isScene===!0?ne.overrideMaterial:null)!==null)return;const Be=Ae.isWebGL2;Fe===null&&(Fe=new Ei(1,1,{generateMipmaps:!0,type:he.has("EXT_color_buffer_half_float")?yo:Fi,minFilter:Ir,samples:Be?4:0})),E.getDrawingBufferSize(rt),Be?Fe.setSize(rt.x,rt.y):Fe.setSize(eu(rt.x),eu(rt.y));const Ke=E.getRenderTarget();E.setRenderTarget(Fe),E.getClearColor(ae),H=E.getClearAlpha(),H<1&&E.setClearColor(16777215,.5),E.clear();const it=E.toneMapping;E.toneMapping=Oi,Ts(I,ne,re),ze.updateMultisampleRenderTarget(Fe),ze.updateRenderTargetMipmap(Fe);let ot=!1;for(let ut=0,ct=q.length;ut<ct;ut++){const ht=q[ut],Vt=ht.object,vn=ht.geometry,zt=ht.material,hn=ht.group;if(zt.side===Ui&&Vt.layers.test(re.layers)){const at=zt.side;zt.side=Fn,zt.needsUpdate=!0,lr(Vt,ne,re,vn,zt,hn),zt.side=at,zt.needsUpdate=!0,ot=!0}}ot===!0&&(ze.updateMultisampleRenderTarget(Fe),ze.updateRenderTargetMipmap(Fe)),E.setRenderTarget(Ke),E.setClearColor(ae,H),E.toneMapping=it}function Ts(I,q,ne){const re=q.isScene===!0?q.overrideMaterial:null;for(let te=0,Be=I.length;te<Be;te++){const Ke=I[te],it=Ke.object,ot=Ke.geometry,ut=re===null?Ke.material:re,ct=Ke.group;it.layers.test(ne.layers)&&lr(it,q,ne,ot,ut,ct)}}function lr(I,q,ne,re,te,Be){I.onBeforeRender(E,q,ne,re,te,Be),I.modelViewMatrix.multiplyMatrices(ne.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),te.onBeforeRender(E,q,ne,re,I,Be),te.transparent===!0&&te.side===Ui&&te.forceSinglePass===!1?(te.side=Fn,te.needsUpdate=!0,E.renderBufferDirect(ne,q,re,te,I,Be),te.side=rr,te.needsUpdate=!0,E.renderBufferDirect(ne,q,re,te,I,Be),te.side=Ui):E.renderBufferDirect(ne,q,re,te,I,Be),I.onAfterRender(E,q,ne,re,te,Be)}function As(I,q,ne){q.isScene!==!0&&(q=We);const re=Ne.get(I),te=x.state.lights,Be=x.state.shadowsArray,Ke=te.state.version,it=$.getParameters(I,te.state,Be,q,ne),ot=$.getProgramCacheKey(it);let ut=re.programs;re.environment=I.isMeshStandardMaterial?q.environment:null,re.fog=q.fog,re.envMap=(I.isMeshStandardMaterial?xt:$e).get(I.envMap||re.environment),ut===void 0&&(I.addEventListener("dispose",we),ut=new Map,re.programs=ut);let ct=ut.get(ot);if(ct!==void 0){if(re.currentProgram===ct&&re.lightsStateVersion===Ke)return Qa(I,it),ct}else it.uniforms=$.getUniforms(I),I.onBuild(ne,it,E),I.onBeforeCompile(it,E),ct=$.acquireProgram(it,ot),ut.set(ot,ct),re.uniforms=it.uniforms;const ht=re.uniforms;return(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(ht.clippingPlanes=Xe.uniform),Qa(I,it),re.needsLights=Nu(I),re.lightsStateVersion=Ke,re.needsLights&&(ht.ambientLightColor.value=te.state.ambient,ht.lightProbe.value=te.state.probe,ht.directionalLights.value=te.state.directional,ht.directionalLightShadows.value=te.state.directionalShadow,ht.spotLights.value=te.state.spot,ht.spotLightShadows.value=te.state.spotShadow,ht.rectAreaLights.value=te.state.rectArea,ht.ltc_1.value=te.state.rectAreaLTC1,ht.ltc_2.value=te.state.rectAreaLTC2,ht.pointLights.value=te.state.point,ht.pointLightShadows.value=te.state.pointShadow,ht.hemisphereLights.value=te.state.hemi,ht.directionalShadowMap.value=te.state.directionalShadowMap,ht.directionalShadowMatrix.value=te.state.directionalShadowMatrix,ht.spotShadowMap.value=te.state.spotShadowMap,ht.spotLightMatrix.value=te.state.spotLightMatrix,ht.spotLightMap.value=te.state.spotLightMap,ht.pointShadowMap.value=te.state.pointShadowMap,ht.pointShadowMatrix.value=te.state.pointShadowMatrix),re.currentProgram=ct,re.uniformsList=null,ct}function Ka(I){if(I.uniformsList===null){const q=I.currentProgram.getUniforms();I.uniformsList=Zc.seqWithValue(q.seq,I.uniforms)}return I.uniformsList}function Qa(I,q){const ne=Ne.get(I);ne.outputColorSpace=q.outputColorSpace,ne.batching=q.batching,ne.instancing=q.instancing,ne.instancingColor=q.instancingColor,ne.skinning=q.skinning,ne.morphTargets=q.morphTargets,ne.morphNormals=q.morphNormals,ne.morphColors=q.morphColors,ne.morphTargetsCount=q.morphTargetsCount,ne.numClippingPlanes=q.numClippingPlanes,ne.numIntersection=q.numClipIntersection,ne.vertexAlphas=q.vertexAlphas,ne.vertexTangents=q.vertexTangents,ne.toneMapping=q.toneMapping}function Iu(I,q,ne,re,te){q.isScene!==!0&&(q=We),ze.resetTextureUnits();const Be=q.fog,Ke=re.isMeshStandardMaterial?q.environment:null,it=N===null?E.outputColorSpace:N.isXRRenderTarget===!0?N.texture.colorSpace:Bi,ot=(re.isMeshStandardMaterial?xt:$e).get(re.envMap||Ke),ut=re.vertexColors===!0&&!!ne.attributes.color&&ne.attributes.color.itemSize===4,ct=!!ne.attributes.tangent&&(!!re.normalMap||re.anisotropy>0),ht=!!ne.morphAttributes.position,Vt=!!ne.morphAttributes.normal,vn=!!ne.morphAttributes.color;let zt=Oi;re.toneMapped&&(N===null||N.isXRRenderTarget===!0)&&(zt=E.toneMapping);const hn=ne.morphAttributes.position||ne.morphAttributes.normal||ne.morphAttributes.color,at=hn!==void 0?hn.length:0,He=Ne.get(re),ii=x.state.lights;if(de===!0&&(Ce===!0||I!==b)){const yn=I===b&&re.id===F;Xe.setState(re,I,yn)}let St=!1;re.version===He.__version?(He.needsLights&&He.lightsStateVersion!==ii.state.version||He.outputColorSpace!==it||te.isBatchedMesh&&He.batching===!1||!te.isBatchedMesh&&He.batching===!0||te.isInstancedMesh&&He.instancing===!1||!te.isInstancedMesh&&He.instancing===!0||te.isSkinnedMesh&&He.skinning===!1||!te.isSkinnedMesh&&He.skinning===!0||te.isInstancedMesh&&He.instancingColor===!0&&te.instanceColor===null||te.isInstancedMesh&&He.instancingColor===!1&&te.instanceColor!==null||He.envMap!==ot||re.fog===!0&&He.fog!==Be||He.numClippingPlanes!==void 0&&(He.numClippingPlanes!==Xe.numPlanes||He.numIntersection!==Xe.numIntersection)||He.vertexAlphas!==ut||He.vertexTangents!==ct||He.morphTargets!==ht||He.morphNormals!==Vt||He.morphColors!==vn||He.toneMapping!==zt||Ae.isWebGL2===!0&&He.morphTargetsCount!==at)&&(St=!0):(St=!0,He.__version=re.version);let Xt=He.currentProgram;St===!0&&(Xt=As(re,q,te));let Ai=!1,ri=!1,fn=!1;const Jt=Xt.getUniforms(),bi=He.uniforms;if(pe.useProgram(Xt.program)&&(Ai=!0,ri=!0,fn=!0),re.id!==F&&(F=re.id,ri=!0),Ai||b!==I){Jt.setValue(z,"projectionMatrix",I.projectionMatrix),Jt.setValue(z,"viewMatrix",I.matrixWorldInverse);const yn=Jt.map.cameraPosition;yn!==void 0&&yn.setValue(z,nt.setFromMatrixPosition(I.matrixWorld)),Ae.logarithmicDepthBuffer&&Jt.setValue(z,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial)&&Jt.setValue(z,"isOrthographic",I.isOrthographicCamera===!0),b!==I&&(b=I,ri=!0,fn=!0)}if(te.isSkinnedMesh){Jt.setOptional(z,te,"bindMatrix"),Jt.setOptional(z,te,"bindMatrixInverse");const yn=te.skeleton;yn&&(Ae.floatVertexTextures?(yn.boneTexture===null&&yn.computeBoneTexture(),Jt.setValue(z,"boneTexture",yn.boneTexture,ze)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}te.isBatchedMesh&&(Jt.setOptional(z,te,"batchingTexture"),Jt.setValue(z,"batchingTexture",te._matricesTexture,ze));const bs=ne.morphAttributes;if((bs.position!==void 0||bs.normal!==void 0||bs.color!==void 0&&Ae.isWebGL2===!0)&&st.update(te,ne,Xt),(ri||He.receiveShadow!==te.receiveShadow)&&(He.receiveShadow=te.receiveShadow,Jt.setValue(z,"receiveShadow",te.receiveShadow)),re.isMeshGouraudMaterial&&re.envMap!==null&&(bi.envMap.value=ot,bi.flipEnvMap.value=ot.isCubeTexture&&ot.isRenderTargetTexture===!1?-1:1),ri&&(Jt.setValue(z,"toneMappingExposure",E.toneMappingExposure),He.needsLights&&Du(bi,fn),Be&&re.fog===!0&&Me.refreshFogUniforms(bi,Be),Me.refreshMaterialUniforms(bi,re,se,oe,Fe),Zc.upload(z,Ka(He),bi,ze)),re.isShaderMaterial&&re.uniformsNeedUpdate===!0&&(Zc.upload(z,Ka(He),bi,ze),re.uniformsNeedUpdate=!1),re.isSpriteMaterial&&Jt.setValue(z,"center",te.center),Jt.setValue(z,"modelViewMatrix",te.modelViewMatrix),Jt.setValue(z,"normalMatrix",te.normalMatrix),Jt.setValue(z,"modelMatrix",te.matrixWorld),re.isShaderMaterial||re.isRawShaderMaterial){const yn=re.uniformsGroups;for(let Cs=0,qn=yn.length;Cs<qn;Cs++)if(Ae.isWebGL2){const $a=yn[Cs];ce.update($a,Xt),ce.bind($a,Xt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Xt}function Du(I,q){I.ambientLightColor.needsUpdate=q,I.lightProbe.needsUpdate=q,I.directionalLights.needsUpdate=q,I.directionalLightShadows.needsUpdate=q,I.pointLights.needsUpdate=q,I.pointLightShadows.needsUpdate=q,I.spotLights.needsUpdate=q,I.spotLightShadows.needsUpdate=q,I.rectAreaLights.needsUpdate=q,I.hemisphereLights.needsUpdate=q}function Nu(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return C},this.getActiveMipmapLevel=function(){return R},this.getRenderTarget=function(){return N},this.setRenderTargetTextures=function(I,q,ne){Ne.get(I.texture).__webglTexture=q,Ne.get(I.depthTexture).__webglTexture=ne;const re=Ne.get(I);re.__hasExternalTextures=!0,re.__hasExternalTextures&&(re.__autoAllocateDepthBuffer=ne===void 0,re.__autoAllocateDepthBuffer||he.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),re.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,q){const ne=Ne.get(I);ne.__webglFramebuffer=q,ne.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(I,q=0,ne=0){N=I,C=q,R=ne;let re=!0,te=null,Be=!1,Ke=!1;if(I){const ot=Ne.get(I);ot.__useDefaultFramebuffer!==void 0?(pe.bindFramebuffer(z.FRAMEBUFFER,null),re=!1):ot.__webglFramebuffer===void 0?ze.setupRenderTarget(I):ot.__hasExternalTextures&&ze.rebindTextures(I,Ne.get(I.texture).__webglTexture,Ne.get(I.depthTexture).__webglTexture);const ut=I.texture;(ut.isData3DTexture||ut.isDataArrayTexture||ut.isCompressedArrayTexture)&&(Ke=!0);const ct=Ne.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(Array.isArray(ct[q])?te=ct[q][ne]:te=ct[q],Be=!0):Ae.isWebGL2&&I.samples>0&&ze.useMultisampledRTT(I)===!1?te=Ne.get(I).__webglMultisampledFramebuffer:Array.isArray(ct)?te=ct[ne]:te=ct,L.copy(I.viewport),B.copy(I.scissor),j=I.scissorTest}else L.copy(Z).multiplyScalar(se).floor(),B.copy(ee).multiplyScalar(se).floor(),j=me;if(pe.bindFramebuffer(z.FRAMEBUFFER,te)&&Ae.drawBuffers&&re&&pe.drawBuffers(I,te),pe.viewport(L),pe.scissor(B),pe.setScissorTest(j),Be){const ot=Ne.get(I.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+q,ot.__webglTexture,ne)}else if(Ke){const ot=Ne.get(I.texture),ut=q||0;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,ot.__webglTexture,ne||0,ut)}F=-1},this.readRenderTargetPixels=function(I,q,ne,re,te,Be,Ke){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=Ne.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ke!==void 0&&(it=it[Ke]),it){pe.bindFramebuffer(z.FRAMEBUFFER,it);try{const ot=I.texture,ut=ot.format,ct=ot.type;if(ut!==On&&wt.convert(ut)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ht=ct===yo&&(he.has("EXT_color_buffer_half_float")||Ae.isWebGL2&&he.has("EXT_color_buffer_float"));if(ct!==Fi&&wt.convert(ct)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ct===Si&&(Ae.isWebGL2||he.has("OES_texture_float")||he.has("WEBGL_color_buffer_float")))&&!ht){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=I.width-re&&ne>=0&&ne<=I.height-te&&z.readPixels(q,ne,re,te,wt.convert(ut),wt.convert(ct),Be)}finally{const ot=N!==null?Ne.get(N).__webglFramebuffer:null;pe.bindFramebuffer(z.FRAMEBUFFER,ot)}}},this.copyFramebufferToTexture=function(I,q,ne=0){const re=Math.pow(2,-ne),te=Math.floor(q.image.width*re),Be=Math.floor(q.image.height*re);ze.setTexture2D(q,0),z.copyTexSubImage2D(z.TEXTURE_2D,ne,0,0,I.x,I.y,te,Be),pe.unbindTexture()},this.copyTextureToTexture=function(I,q,ne,re=0){const te=q.image.width,Be=q.image.height,Ke=wt.convert(ne.format),it=wt.convert(ne.type);ze.setTexture2D(ne,0),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,ne.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ne.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,ne.unpackAlignment),q.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,re,I.x,I.y,te,Be,Ke,it,q.image.data):q.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,re,I.x,I.y,q.mipmaps[0].width,q.mipmaps[0].height,Ke,q.mipmaps[0].data):z.texSubImage2D(z.TEXTURE_2D,re,I.x,I.y,Ke,it,q.image),re===0&&ne.generateMipmaps&&z.generateMipmap(z.TEXTURE_2D),pe.unbindTexture()},this.copyTextureToTexture3D=function(I,q,ne,re,te=0){if(E.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Be=I.max.x-I.min.x+1,Ke=I.max.y-I.min.y+1,it=I.max.z-I.min.z+1,ot=wt.convert(re.format),ut=wt.convert(re.type);let ct;if(re.isData3DTexture)ze.setTexture3D(re,0),ct=z.TEXTURE_3D;else if(re.isDataArrayTexture)ze.setTexture2DArray(re,0),ct=z.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,re.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,re.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,re.unpackAlignment);const ht=z.getParameter(z.UNPACK_ROW_LENGTH),Vt=z.getParameter(z.UNPACK_IMAGE_HEIGHT),vn=z.getParameter(z.UNPACK_SKIP_PIXELS),zt=z.getParameter(z.UNPACK_SKIP_ROWS),hn=z.getParameter(z.UNPACK_SKIP_IMAGES),at=ne.isCompressedTexture?ne.mipmaps[0]:ne.image;z.pixelStorei(z.UNPACK_ROW_LENGTH,at.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,at.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,I.min.x),z.pixelStorei(z.UNPACK_SKIP_ROWS,I.min.y),z.pixelStorei(z.UNPACK_SKIP_IMAGES,I.min.z),ne.isDataTexture||ne.isData3DTexture?z.texSubImage3D(ct,te,q.x,q.y,q.z,Be,Ke,it,ot,ut,at.data):ne.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),z.compressedTexSubImage3D(ct,te,q.x,q.y,q.z,Be,Ke,it,ot,at.data)):z.texSubImage3D(ct,te,q.x,q.y,q.z,Be,Ke,it,ot,ut,at),z.pixelStorei(z.UNPACK_ROW_LENGTH,ht),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Vt),z.pixelStorei(z.UNPACK_SKIP_PIXELS,vn),z.pixelStorei(z.UNPACK_SKIP_ROWS,zt),z.pixelStorei(z.UNPACK_SKIP_IMAGES,hn),te===0&&re.generateMipmaps&&z.generateMipmap(ct),pe.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?ze.setTextureCube(I,0):I.isData3DTexture?ze.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?ze.setTexture2DArray(I,0):ze.setTexture2D(I,0),pe.unbindTexture()},this.resetState=function(){C=0,R=0,N=null,pe.reset(),k.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Mi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===cu?"display-p3":"srgb",t.unpackColorSpace=Lt.workingColorSpace===ka?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===an?Rr:zd}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Rr?an:Bi}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class dv extends jd{}dv.prototype.isWebGL1Renderer=!0;class fu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ke(e),this.density=t}clone(){return new fu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class du{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new ke(e),this.near=t,this.far=n}clone(){return new du(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class tu extends Pt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class pu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ra,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=ti()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn('THREE.InterleavedBuffer: "updateRange" is deprecated and removed in r169. Use "addUpdateRange()" instead.'),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Nn=new D;class vs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.applyMatrix4(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.applyNormalMatrix(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.transformDirection(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Xn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Xn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Xn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Xn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),s=gt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Dt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new vs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Jd extends Sn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ke(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let no;const ta=new D,io=new D,ro=new D,so=new fe,na=new fe,pv=new lt,mc=new D,ia=new D,gc=new D,Ng=new fe,cf=new fe,Ug=new fe;class mv extends Pt{constructor(e=new Jd){if(super(),this.isSprite=!0,this.type="Sprite",no===void 0){no=new _t;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new pu(t,5);no.setIndex([0,1,2,0,2,3]),no.setAttribute("position",new vs(n,3,0,!1)),no.setAttribute("uv",new vs(n,2,3,!1))}this.geometry=no,this.material=e,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),io.setFromMatrixScale(this.matrixWorld),pv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ro.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&io.multiplyScalar(-ro.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;_c(mc.set(-.5,-.5,0),ro,l,io,i,s),_c(ia.set(.5,-.5,0),ro,l,io,i,s),_c(gc.set(.5,.5,0),ro,l,io,i,s),Ng.set(0,0),cf.set(1,0),Ug.set(1,1);let c=e.ray.intersectTriangle(mc,ia,gc,!1,ta);if(c===null&&(_c(ia.set(-.5,.5,0),ro,l,io,i,s),cf.set(0,1),c=e.ray.intersectTriangle(mc,gc,ia,!1,ta),c===null))return;const u=e.ray.origin.distanceTo(ta);u<e.near||u>e.far||t.push({distance:u,point:ta.clone(),uv:Wn.getInterpolation(ta,mc,ia,gc,Ng,cf,Ug,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function _c(r,e,t,n,i,s){so.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(na.x=s*so.x-i*so.y,na.y=i*so.x+s*so.y):na.copy(so),r.copy(e),r.x+=na.x,r.y+=na.y,r.applyMatrix4(pv)}const vc=new D,Og=new D;class gv extends Pt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){vc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(vc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){vc.setFromMatrixPosition(e.matrixWorld),Og.setFromMatrixPosition(this.matrixWorld);const n=vc.distanceTo(Og)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Fg=new D,zg=new It,Bg=new It,_T=new D,kg=new lt,yc=new D,uf=new Ln,Hg=new lt,hf=new Ss;class _v extends ln{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Vf,this.bindMatrix=new lt,this.bindMatrixInverse=new lt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new zn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,yc),this.boundingBox.expandByPoint(yc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Ln),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,yc),this.boundingSphere.expandByPoint(yc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),uf.copy(this.boundingSphere),uf.applyMatrix4(i),e.ray.intersectsSphere(uf)!==!1&&(Hg.copy(i).invert(),hf.copy(e.ray).applyMatrix4(Hg),!(this.boundingBox!==null&&hf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,hf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new It,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Vf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===R0?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;zg.fromBufferAttribute(i.attributes.skinIndex,e),Bg.fromBufferAttribute(i.attributes.skinWeight,e),Fg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Bg.getComponent(s);if(l!==0){const c=zg.getComponent(s);kg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(_T.copy(Fg).applyMatrix4(kg),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Kd extends Pt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ms extends jt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=$t,f=$t,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Vg=new lt,vT=new lt;class mu{constructor(e=[],t=[]){this.uuid=ti(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new lt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new lt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:vT;Vg.multiplyMatrices(c,t[s]),Vg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new mu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ms(t,e,e,On,Si);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new Kd),this.bones.push(l),this.boneInverses.push(new lt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Eo extends Dt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const oo=new lt,Gg=new lt,xc=[],Wg=new zn,yT=new lt,ra=new ln,sa=new Ln;class vv extends ln{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Eo(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,yT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new zn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,oo),Wg.copy(e.boundingBox).applyMatrix4(oo),this.boundingBox.union(Wg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ln),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,oo),sa.copy(e.boundingSphere).applyMatrix4(oo),this.boundingSphere.union(sa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ra.geometry=this.geometry,ra.material=this.material,ra.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),sa.copy(this.boundingSphere),sa.applyMatrix4(n),e.ray.intersectsSphere(sa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,oo),Gg.multiplyMatrices(n,oo),ra.matrixWorld=Gg,ra.raycast(e,xc);for(let l=0,c=xc.length;l<c;l++){const u=xc[l];u.instanceId=s,u.object=this,t.push(u)}xc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Eo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function xT(r,e){return r.z-e.z}function ST(r,e){return e.z-r.z}class MT{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const ao="batchId",Mr=new lt,Xg=new lt,ET=new lt,Yg=new lt,ff=new Wa,Sc=new zn,Kr=new Ln,oa=new D,df=new MT,Cn=new ln,Mc=[];function wT(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let l=0;l<n;l++)e.setComponent(s+t,l,r.getComponent(s,l))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class yv extends ln{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new _t,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new ms(t,e,e,On,Si);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:f,normalized:p}=u,m=new h.constructor(n*f),_=new u.constructor(m,f,p);_.setUsage(u.usage),t.setAttribute(c,_)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Dt(c,1))}const l=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(ao,new Dt(l,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(ao))throw new Error(`BatchedMesh: Geometry cannot use attribute "${ao}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===ao)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Mr),this.getBoundingBoxAt(i,Sc).applyMatrix4(Mr),t.union(Sc))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ln);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Mr),this.getBoundingSphereAt(i,Kr).applyMatrix4(Mr),t.union(Kr))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const l=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=l[l.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),f=h!==null;if(f&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,_=this._matricesTexture,y=this._matricesTexture.image.data;p.push(!0),m.push(!0);const M=this._geometryCount;this._geometryCount++,ET.toArray(y,M*16),_.needsUpdate=!0,l.push(i),c.push({start:f?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new zn,sphereInitialized:!1,sphere:new Ln});const x=this.geometry.getAttribute(ao);for(let v=0;v<i.vertexCount;v++)x.setX(i.vertexStart+v,M);return x.needsUpdate=!0,this.setGeometryAt(M,e),M}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),l=t.getIndex(),c=this._reservedRanges[e];if(i&&l.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const _ in n.attributes){if(_===ao)continue;const y=t.getAttribute(_),M=n.getAttribute(_);wT(y,M,u);const x=y.itemSize;for(let v=y.count,w=h;v<w;v++){const E=u+v;for(let A=0;A<x;A++)M.setComponent(E,A,0)}M.needsUpdate=!0}if(i){const _=c.indexStart;for(let y=0;y<l.count;y++)s.setX(_+y,u+l.getX(y));for(let y=l.count,M=c.indexCount;y<M;y++)s.setX(_+y,u);s.needsUpdate=!0}const f=this._bounds[e];t.boundingBox!==null?(f.box.copy(t.boundingBox),f.boxInitialized=!0):f.boxInitialized=!1,t.boundingSphere!==null?(f.sphere.copy(t.boundingSphere),f.sphereInitialized=!0):f.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=i?l.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],s=i.box,l=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=l.index,u=l.attributes.position,h=this._drawRanges[e];for(let f=h.start,p=h.start+h.count;f<p;f++){let m=f;c&&(m=c.getX(m)),s.expandByPoint(oa.fromBufferAttribute(u,m))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],s=i.sphere,l=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,Sc),Sc.getCenter(s.center);const c=l.index,u=l.attributes.position,h=this._drawRanges[e];let f=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let _=p;c&&(_=c.getX(_)),oa.fromBufferAttribute(u,_),f=Math.max(f,s.center.distanceToSquared(oa))}s.radius=Math.sqrt(f),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,l=this._geometryCount;return e>=l||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,l=this._geometryCount,c=this.matrixWorld,u=this.geometry;Cn.material=this.material,Cn.geometry.index=u.index,Cn.geometry.attributes=u.attributes,Cn.geometry.boundingBox===null&&(Cn.geometry.boundingBox=new zn),Cn.geometry.boundingSphere===null&&(Cn.geometry.boundingSphere=new Ln);for(let h=0;h<l;h++){if(!n[h]||!i[h])continue;const f=s[h];Cn.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(h,Cn.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,Cn.geometry.boundingBox),this.getBoundingSphereAt(h,Cn.geometry.boundingSphere),Cn.raycast(e,Mc);for(let p=0,m=Mc.length;p<m;p++){const _=Mc[p];_.object=this,_.batchId=h,t.push(_)}Mc.length=0}Cn.material=null,Cn.geometry.index=null,Cn.geometry.attributes={},Cn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._visibility,h=this._multiDrawStarts,f=this._multiDrawCounts,p=this._drawRanges,m=this.perObjectFrustumCulled;m&&(Yg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),ff.setFromProjectionMatrix(Yg,e.isWebGPURenderer?xo:Mi));let _=0;if(this.sortObjects){Xg.copy(this.matrixWorld).invert(),oa.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Xg);for(let x=0,v=u.length;x<v;x++)if(u[x]){this.getMatrixAt(x,Mr),this.getBoundingSphereAt(x,Kr).applyMatrix4(Mr);let w=!1;if(m&&(w=!ff.intersectsSphere(Kr)),!w){const E=oa.distanceTo(Kr.center);df.push(p[x],E)}}const y=df.list,M=this.customSort;M===null?y.sort(s.transparent?ST:xT):M.call(this,y,n);for(let x=0,v=y.length;x<v;x++){const w=y[x];h[_]=w.start*c,f[_]=w.count,_++}df.reset()}else for(let y=0,M=u.length;y<M;y++)if(u[y]){let x=!1;if(m&&(this.getMatrixAt(y,Mr),this.getBoundingSphereAt(y,Kr).applyMatrix4(Mr),x=!ff.intersectsSphere(Kr)),!x){const v=p[y];h[_]=v.start*c,f[_]=v.count,_++}}this._multiDrawCount=_,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,l){this.onBeforeRender(e,null,i,s,l)}}class Bn extends Sn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ke(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const qg=new D,Zg=new D,jg=new lt,pf=new Ss,Ec=new Ln;class Dr extends Pt{constructor(e=new _t,t=new Bn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)qg.fromBufferAttribute(t,i-1),Zg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=qg.distanceTo(Zg);e.setAttribute("lineDistance",new Ye(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ec.copy(n.boundingSphere),Ec.applyMatrix4(i),Ec.radius+=s,e.ray.intersectsSphere(Ec)===!1)return;jg.copy(i).invert(),pf.copy(e.ray).applyMatrix4(jg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,f=new D,p=new D,m=new D,_=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const v=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let E=v,A=w-1;E<A;E+=_){const C=y.getX(E),R=y.getX(E+1);if(h.fromBufferAttribute(x,C),f.fromBufferAttribute(x,R),pf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const F=e.ray.origin.distanceTo(m);F<e.near||F>e.far||t.push({distance:F,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,l.start),w=Math.min(x.count,l.start+l.count);for(let E=v,A=w-1;E<A;E+=_){if(h.fromBufferAttribute(x,E),f.fromBufferAttribute(x,E+1),pf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(m);R<e.near||R>e.far||t.push({distance:R,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const Jg=new D,Kg=new D;class Hi extends Dr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Jg.fromBufferAttribute(t,i),Kg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Jg.distanceTo(Kg);e.setAttribute("lineDistance",new Ye(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class xv extends Dr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Qd extends Sn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ke(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Qg=new lt,yd=new Ss,wc=new Ln,Tc=new D;class Sv extends Pt{constructor(e=new _t,t=new Qd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),wc.copy(n.boundingSphere),wc.applyMatrix4(i),wc.radius+=s,e.ray.intersectsSphere(wc)===!1)return;Qg.copy(i).invert(),yd.copy(e.ray).applyMatrix4(Qg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),_=Math.min(h.count,l.start+l.count);for(let y=m,M=_;y<M;y++){const x=h.getX(y);Tc.fromBufferAttribute(p,x),$g(Tc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),_=Math.min(p.count,l.start+l.count);for(let y=m,M=_;y<M;y++)Tc.fromBufferAttribute(p,y),$g(Tc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function $g(r,e,t,n,i,s,l){const c=yd.distanceSqToPoint(r);if(c<t){const u=new D;yd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class TT extends jt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:en,this.magFilter=s!==void 0?s:en,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class AT extends jt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=$t,this.minFilter=$t,this.generateMipmaps=!1,this.needsUpdate=!0}}class gu extends jt{constructor(e,t,n,i,s,l,c,u,h,f,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class bT extends gu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Rn}}class CT extends gu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,sr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class RT extends jt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class wi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const f=n[i],m=n[i+1]-f,_=(l-f)/m;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new fe:new D);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],l=[],c=new D,u=new lt;for(let _=0;_<=e;_++){const y=_/e;i[_]=this.getTangentAt(y,new D)}s[0]=new D,l[0]=new D;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),l[_]=l[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Zt(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,y))}l[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(Zt(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],_*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class _u extends wi{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new fe,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,_=h-this.aY;u=m*f-_*p+this.aX,h=m*p+_*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Mv extends _u{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function $d(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,f,p){let m=(l-s)/h-(c-s)/(h+f)+(c-l)/f,_=(c-l)/f-(u-l)/(f+p)+(u-c)/p;m*=f,_*=f,i(l,c,m,_)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Ac=new D,mf=new $d,gf=new $d,_f=new $d;class Ev extends wi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(Ac.subVectors(i[0],i[1]).add(i[0]),h=Ac);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(Ac.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=Ac),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),_),M=Math.pow(p.distanceToSquared(m),_),x=Math.pow(m.distanceToSquared(f),_);M<1e-4&&(M=1),y<1e-4&&(y=M),x<1e-4&&(x=M),mf.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,M,x),gf.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,M,x),_f.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,M,x)}else this.curveType==="catmullrom"&&(mf.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),gf.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),_f.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(mf.calc(u),gf.calc(u),_f.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function e_(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function PT(r,e){const t=1-r;return t*t*e}function LT(r,e){return 2*(1-r)*r*e}function IT(r,e){return r*r*e}function ga(r,e,t,n){return PT(r,e)+LT(r,t)+IT(r,n)}function DT(r,e){const t=1-r;return t*t*t*e}function NT(r,e){const t=1-r;return 3*t*t*r*e}function UT(r,e){return 3*(1-r)*r*r*e}function OT(r,e){return r*r*r*e}function _a(r,e,t,n,i){return DT(r,e)+NT(r,t)+UT(r,n)+OT(r,i)}class ep extends wi{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class wv extends wi{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y),_a(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class tp extends wi{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new fe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Tv extends wi{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class np extends wi{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(ga(e,i.x,s.x,l.x),ga(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ip extends wi{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(ga(e,i.x,s.x,l.x),ga(e,i.y,s.y,l.y),ga(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class rp extends wi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],f=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(e_(c,u.x,h.x,f.x,p.x),e_(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}var nu=Object.freeze({__proto__:null,ArcCurve:Mv,CatmullRomCurve3:Ev,CubicBezierCurve:ep,CubicBezierCurve3:wv,EllipseCurve:_u,LineCurve:tp,LineCurve3:Tv,QuadraticBezierCurve:np,QuadraticBezierCurve3:ip,SplineCurve:rp});class Av extends wi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new nu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new nu[i.type]().fromJSON(i))}return this}}class La extends Av{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new tp(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new np(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new ep(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new rp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new _u(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ya extends _t{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Zt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],f=1/t,p=new D,m=new fe,_=new D,y=new D,M=new D;let x=0,v=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,M.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,y.copy(_),_.x+=M.x,_.y+=M.y,_.z+=M.z,_.normalize(),u.push(_.x,_.y,_.z),M.copy(y)}for(let w=0;w<=t;w++){const E=n+w*f*i,A=Math.sin(E),C=Math.cos(E);for(let R=0;R<=e.length-1;R++){p.x=e[R].x*A,p.y=e[R].y,p.z=e[R].x*C,l.push(p.x,p.y,p.z),m.x=w/t,m.y=R/(e.length-1),c.push(m.x,m.y);const N=u[3*R+0]*A,F=u[3*R+1],b=u[3*R+0]*C;h.push(N,F,b)}}for(let w=0;w<t;w++)for(let E=0;E<e.length-1;E++){const A=E+w*e.length,C=A,R=A+e.length,N=A+e.length+1,F=A+1;s.push(C,R,F),s.push(N,F,R)}this.setIndex(s),this.setAttribute("position",new Ye(l,3)),this.setAttribute("uv",new Ye(c,2)),this.setAttribute("normal",new Ye(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ya(e.points,e.segments,e.phiStart,e.phiLength)}}class vu extends Ya{constructor(e=1,t=1,n=4,i=8){const s=new La;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new vu(e.radius,e.length,e.capSegments,e.radialSegments)}}class yu extends _t{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new D,f=new fe;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const _=n+p/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),l.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(l[m]/e+1)/2,f.y=(l[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Ye(l,3)),this.setAttribute("normal",new Ye(c,3)),this.setAttribute("uv",new Ye(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new yu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Co extends _t{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],_=[];let y=0;const M=[],x=n/2;let v=0;w(),l===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(f),this.setAttribute("position",new Ye(p,3)),this.setAttribute("normal",new Ye(m,3)),this.setAttribute("uv",new Ye(_,2));function w(){const A=new D,C=new D;let R=0;const N=(t-e)/n;for(let F=0;F<=s;F++){const b=[],L=F/s,B=L*(t-e)+e;for(let j=0;j<=i;j++){const ae=j/i,H=ae*u+c,Q=Math.sin(H),oe=Math.cos(H);C.x=B*Q,C.y=-L*n+x,C.z=B*oe,p.push(C.x,C.y,C.z),A.set(Q,N,oe).normalize(),m.push(A.x,A.y,A.z),_.push(ae,1-L),b.push(y++)}M.push(b)}for(let F=0;F<i;F++)for(let b=0;b<s;b++){const L=M[b][F],B=M[b+1][F],j=M[b+1][F+1],ae=M[b][F+1];f.push(L,B,ae),f.push(B,j,ae),R+=6}h.addGroup(v,R,0),v+=R}function E(A){const C=y,R=new fe,N=new D;let F=0;const b=A===!0?e:t,L=A===!0?1:-1;for(let j=1;j<=i;j++)p.push(0,x*L,0),m.push(0,L,0),_.push(.5,.5),y++;const B=y;for(let j=0;j<=i;j++){const H=j/i*u+c,Q=Math.cos(H),oe=Math.sin(H);N.x=b*oe,N.y=x*L,N.z=b*Q,p.push(N.x,N.y,N.z),m.push(0,L,0),R.x=Q*.5+.5,R.y=oe*.5*L+.5,_.push(R.x,R.y),y++}for(let j=0;j<i;j++){const ae=C+j,H=B+j;A===!0?f.push(H,H+1,ae):f.push(H+1,H,ae),F+=3}h.addGroup(v,F,A===!0?1:2),v+=F}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Co(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class xu extends Co{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new xu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Or extends _t{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),f(),this.setAttribute("position",new Ye(s,3)),this.setAttribute("normal",new Ye(s.slice(),3)),this.setAttribute("uv",new Ye(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const E=new D,A=new D,C=new D;for(let R=0;R<t.length;R+=3)_(t[R+0],E),_(t[R+1],A),_(t[R+2],C),u(E,A,C,w)}function u(w,E,A,C){const R=C+1,N=[];for(let F=0;F<=R;F++){N[F]=[];const b=w.clone().lerp(A,F/R),L=E.clone().lerp(A,F/R),B=R-F;for(let j=0;j<=B;j++)j===0&&F===R?N[F][j]=b:N[F][j]=b.clone().lerp(L,j/B)}for(let F=0;F<R;F++)for(let b=0;b<2*(R-F)-1;b++){const L=Math.floor(b/2);b%2===0?(m(N[F][L+1]),m(N[F+1][L]),m(N[F][L])):(m(N[F][L+1]),m(N[F+1][L+1]),m(N[F+1][L]))}}function h(w){const E=new D;for(let A=0;A<s.length;A+=3)E.x=s[A+0],E.y=s[A+1],E.z=s[A+2],E.normalize().multiplyScalar(w),s[A+0]=E.x,s[A+1]=E.y,s[A+2]=E.z}function f(){const w=new D;for(let E=0;E<s.length;E+=3){w.x=s[E+0],w.y=s[E+1],w.z=s[E+2];const A=x(w)/2/Math.PI+.5,C=v(w)/Math.PI+.5;l.push(A,1-C)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const E=l[w+0],A=l[w+2],C=l[w+4],R=Math.max(E,A,C),N=Math.min(E,A,C);R>.9&&N<.1&&(E<.2&&(l[w+0]+=1),A<.2&&(l[w+2]+=1),C<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function _(w,E){const A=w*3;E.x=e[A+0],E.y=e[A+1],E.z=e[A+2]}function y(){const w=new D,E=new D,A=new D,C=new D,R=new fe,N=new fe,F=new fe;for(let b=0,L=0;b<s.length;b+=9,L+=6){w.set(s[b+0],s[b+1],s[b+2]),E.set(s[b+3],s[b+4],s[b+5]),A.set(s[b+6],s[b+7],s[b+8]),R.set(l[L+0],l[L+1]),N.set(l[L+2],l[L+3]),F.set(l[L+4],l[L+5]),C.copy(w).add(E).add(A).divideScalar(3);const B=x(C);M(R,L+0,w,B),M(N,L+2,E,B),M(F,L+4,A,B)}}function M(w,E,A,C){C<0&&w.x===1&&(l[E]=w.x-1),A.x===0&&A.z===0&&(l[E]=C/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function v(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Or(e.vertices,e.indices,e.radius,e.details)}}class Su extends Or{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Su(e.radius,e.detail)}}const bc=new D,Cc=new D,vf=new D,Rc=new Wn;class bv extends _t{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ds*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},_=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:M,b:x,c:v}=Rc;if(M.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),Rc.getNormal(vf),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const E=(w+1)%3,A=p[w],C=p[E],R=Rc[f[w]],N=Rc[f[E]],F=`${A}_${C}`,b=`${C}_${A}`;b in m&&m[b]?(vf.dot(m[b].normal)<=s&&(_.push(R.x,R.y,R.z),_.push(N.x,N.y,N.z)),m[b]=null):F in m||(m[F]={index0:h[w],index1:h[E],normal:vf.clone()})}}for(const y in m)if(m[y]){const{index0:M,index1:x}=m[y];bc.fromBufferAttribute(c,M),Cc.fromBufferAttribute(c,x),_.push(bc.x,bc.y,bc.z),_.push(Cc.x,Cc.y,Cc.z)}this.setAttribute("position",new Ye(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class gs extends La{constructor(e){super(e),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new La().fromJSON(i))}return this}}const FT={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Cv(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,f,p,m,_;if(n&&(s=VT(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);_=Math.max(h-c,f-u),_=_!==0?32767/_:0}return Ia(s,l,t,c,u,_,0),l}};function Cv(r,e,t,n,i){let s,l;if(i===$T(r,e,t,n)>0)for(s=e;s<t;s+=n)l=t_(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=t_(s,r[s],r[s+1],l);return l&&Mu(l,l.next)&&(Na(l),l=l.next),l}function ys(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Mu(t,t.next)||Wt(t.prev,t,t.next)===0)){if(Na(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ia(r,e,t,n,i,s,l){if(!r)return;!l&&s&&qT(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?BT(r,n,i,s):zT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Na(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=kT(ys(r),e,t),Ia(r,e,t,n,i,s,2)):l===2&&HT(r,e,t,n,i,s):Ia(ys(r),e,t,n,i,s,1);break}}}function zT(r){const e=r.prev,t=r,n=r.next;if(Wt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,_=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=_&&go(i,c,s,u,l,h,y.x,y.y)&&Wt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function BT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Wt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,f=i.y,p=s.y,m=l.y,_=c<u?c<h?c:h:u<h?u:h,y=f<p?f<m?f:m:p<m?p:m,M=c>u?c>h?c:h:u>h?u:h,x=f>p?f>m?f:m:p>m?p:m,v=xd(_,y,e,t,n),w=xd(M,x,e,t,n);let E=r.prevZ,A=r.nextZ;for(;E&&E.z>=v&&A&&A.z<=w;){if(E.x>=_&&E.x<=M&&E.y>=y&&E.y<=x&&E!==i&&E!==l&&go(c,f,u,p,h,m,E.x,E.y)&&Wt(E.prev,E,E.next)>=0||(E=E.prevZ,A.x>=_&&A.x<=M&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&go(c,f,u,p,h,m,A.x,A.y)&&Wt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;E&&E.z>=v;){if(E.x>=_&&E.x<=M&&E.y>=y&&E.y<=x&&E!==i&&E!==l&&go(c,f,u,p,h,m,E.x,E.y)&&Wt(E.prev,E,E.next)>=0)return!1;E=E.prevZ}for(;A&&A.z<=w;){if(A.x>=_&&A.x<=M&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&go(c,f,u,p,h,m,A.x,A.y)&&Wt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function kT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Mu(i,s)&&Rv(i,n,n.next,s)&&Da(i,s)&&Da(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Na(n),Na(n.next),n=r=s),n=n.next}while(n!==r);return ys(n)}function HT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&JT(l,c)){let u=Pv(l,c);l=ys(l,l.next),u=ys(u,u.next),Ia(l,e,t,n,i,s,0),Ia(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function VT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=Cv(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(jT(h));for(i.sort(GT),s=0;s<i.length;s++)t=WT(i[s],t);return t}function GT(r,e){return r.x-e.x}function WT(r,e){const t=XT(r,e);if(!t)return e;const n=Pv(t,r);return ys(n,n.next),ys(t,t.next)}function XT(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&go(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Da(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&YT(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function YT(r,e){return Wt(r.prev,r,e.prev)<0&&Wt(e.next,r,r.next)<0}function qT(r,e,t,n){let i=r;do i.z===0&&(i.z=xd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,ZT(i)}function ZT(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function xd(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function jT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function go(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function JT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!KT(r,e)&&(Da(r,e)&&Da(e,r)&&QT(r,e)&&(Wt(r.prev,r,e.prev)||Wt(r,e.prev,e))||Mu(r,e)&&Wt(r.prev,r,r.next)>0&&Wt(e.prev,e,e.next)>0)}function Wt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Mu(r,e){return r.x===e.x&&r.y===e.y}function Rv(r,e,t,n){const i=Lc(Wt(r,e,t)),s=Lc(Wt(r,e,n)),l=Lc(Wt(t,n,r)),c=Lc(Wt(t,n,e));return!!(i!==s&&l!==c||i===0&&Pc(r,t,e)||s===0&&Pc(r,n,e)||l===0&&Pc(t,r,n)||c===0&&Pc(t,e,n))}function Pc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Lc(r){return r>0?1:r<0?-1:0}function KT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Rv(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Da(r,e){return Wt(r.prev,r,r.next)<0?Wt(r,e,r.next)>=0&&Wt(r,r.prev,e)>=0:Wt(r,e,r.prev)<0||Wt(r,r.next,e)<0}function QT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Pv(r,e){const t=new Sd(r.i,r.x,r.y),n=new Sd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function t_(r,e,t,n){const i=new Sd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Na(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Sd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function $T(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class zi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return zi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];n_(e),i_(n,e);let l=e.length;t.forEach(n_);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,i_(n,t[u]);const c=FT.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function n_(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function i_(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Eu extends _t{constructor(e=new gs([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Ye(i,3)),this.setAttribute("uv",new Ye(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:_-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:eA;let E,A=!1,C,R,N,F;v&&(E=v.getSpacedPoints(f),A=!0,m=!1,C=v.computeFrenetFrames(f,!1),R=new D,N=new D,F=new D),m||(x=0,_=0,y=0,M=0);const b=c.extractPoints(h);let L=b.shape;const B=b.holes;if(!zi.isClockWise(L)){L=L.reverse();for(let z=0,ve=B.length;z<ve;z++){const he=B[z];zi.isClockWise(he)&&(B[z]=he.reverse())}}const ae=zi.triangulateShape(L,B),H=L;for(let z=0,ve=B.length;z<ve;z++){const he=B[z];L=L.concat(he)}function Q(z,ve,he){return ve||console.error("THREE.ExtrudeGeometry: vec does not exist"),z.clone().addScaledVector(ve,he)}const oe=L.length,se=ae.length;function X(z,ve,he){let Ae,pe,qe;const Ne=z.x-ve.x,ze=z.y-ve.y,$e=he.x-z.x,xt=he.y-z.y,Nt=Ne*Ne+ze*ze,O=Ne*xt-ze*$e;if(Math.abs(O)>Number.EPSILON){const P=Math.sqrt(Nt),$=Math.sqrt($e*$e+xt*xt),Me=ve.x-ze/P,_e=ve.y+Ne/P,Se=he.x-xt/$,Xe=he.y+$e/$,be=((Se-Me)*xt-(Xe-_e)*$e)/(Ne*xt-ze*$e);Ae=Me+Ne*be-z.x,pe=_e+ze*be-z.y;const Ie=Ae*Ae+pe*pe;if(Ie<=2)return new fe(Ae,pe);qe=Math.sqrt(Ie/2)}else{let P=!1;Ne>Number.EPSILON?$e>Number.EPSILON&&(P=!0):Ne<-Number.EPSILON?$e<-Number.EPSILON&&(P=!0):Math.sign(ze)===Math.sign(xt)&&(P=!0),P?(Ae=-ze,pe=Ne,qe=Math.sqrt(Nt)):(Ae=Ne,pe=ze,qe=Math.sqrt(Nt/2))}return new fe(Ae/qe,pe/qe)}const Y=[];for(let z=0,ve=H.length,he=ve-1,Ae=z+1;z<ve;z++,he++,Ae++)he===ve&&(he=0),Ae===ve&&(Ae=0),Y[z]=X(H[z],H[he],H[Ae]);const Z=[];let ee,me=Y.concat();for(let z=0,ve=B.length;z<ve;z++){const he=B[z];ee=[];for(let Ae=0,pe=he.length,qe=pe-1,Ne=Ae+1;Ae<pe;Ae++,qe++,Ne++)qe===pe&&(qe=0),Ne===pe&&(Ne=0),ee[Ae]=X(he[Ae],he[qe],he[Ne]);Z.push(ee),me=me.concat(ee)}for(let z=0;z<x;z++){const ve=z/x,he=_*Math.cos(ve*Math.PI/2),Ae=y*Math.sin(ve*Math.PI/2)+M;for(let pe=0,qe=H.length;pe<qe;pe++){const Ne=Q(H[pe],Y[pe],Ae);Ue(Ne.x,Ne.y,-he)}for(let pe=0,qe=B.length;pe<qe;pe++){const Ne=B[pe];ee=Z[pe];for(let ze=0,$e=Ne.length;ze<$e;ze++){const xt=Q(Ne[ze],ee[ze],Ae);Ue(xt.x,xt.y,-he)}}}const J=y+M;for(let z=0;z<oe;z++){const ve=m?Q(L[z],me[z],J):L[z];A?(N.copy(C.normals[0]).multiplyScalar(ve.x),R.copy(C.binormals[0]).multiplyScalar(ve.y),F.copy(E[0]).add(N).add(R),Ue(F.x,F.y,F.z)):Ue(ve.x,ve.y,0)}for(let z=1;z<=f;z++)for(let ve=0;ve<oe;ve++){const he=m?Q(L[ve],me[ve],J):L[ve];A?(N.copy(C.normals[z]).multiplyScalar(he.x),R.copy(C.binormals[z]).multiplyScalar(he.y),F.copy(E[z]).add(N).add(R),Ue(F.x,F.y,F.z)):Ue(he.x,he.y,p/f*z)}for(let z=x-1;z>=0;z--){const ve=z/x,he=_*Math.cos(ve*Math.PI/2),Ae=y*Math.sin(ve*Math.PI/2)+M;for(let pe=0,qe=H.length;pe<qe;pe++){const Ne=Q(H[pe],Y[pe],Ae);Ue(Ne.x,Ne.y,p+he)}for(let pe=0,qe=B.length;pe<qe;pe++){const Ne=B[pe];ee=Z[pe];for(let ze=0,$e=Ne.length;ze<$e;ze++){const xt=Q(Ne[ze],ee[ze],Ae);A?Ue(xt.x,xt.y+E[f-1].y,E[f-1].x+he):Ue(xt.x,xt.y,p+he)}}}de(),Ce();function de(){const z=i.length/3;if(m){let ve=0,he=oe*ve;for(let Ae=0;Ae<se;Ae++){const pe=ae[Ae];rt(pe[2]+he,pe[1]+he,pe[0]+he)}ve=f+x*2,he=oe*ve;for(let Ae=0;Ae<se;Ae++){const pe=ae[Ae];rt(pe[0]+he,pe[1]+he,pe[2]+he)}}else{for(let ve=0;ve<se;ve++){const he=ae[ve];rt(he[2],he[1],he[0])}for(let ve=0;ve<se;ve++){const he=ae[ve];rt(he[0]+oe*f,he[1]+oe*f,he[2]+oe*f)}}n.addGroup(z,i.length/3-z,0)}function Ce(){const z=i.length/3;let ve=0;Fe(H,ve),ve+=H.length;for(let he=0,Ae=B.length;he<Ae;he++){const pe=B[he];Fe(pe,ve),ve+=pe.length}n.addGroup(z,i.length/3-z,1)}function Fe(z,ve){let he=z.length;for(;--he>=0;){const Ae=he;let pe=he-1;pe<0&&(pe=z.length-1);for(let qe=0,Ne=f+x*2;qe<Ne;qe++){const ze=oe*qe,$e=oe*(qe+1),xt=ve+Ae+ze,Nt=ve+pe+ze,O=ve+pe+$e,P=ve+Ae+$e;nt(xt,Nt,O,P)}}}function Ue(z,ve,he){u.push(z),u.push(ve),u.push(he)}function rt(z,ve,he){We(z),We(ve),We(he);const Ae=i.length/3,pe=w.generateTopUV(n,i,Ae-3,Ae-2,Ae-1);Ge(pe[0]),Ge(pe[1]),Ge(pe[2])}function nt(z,ve,he,Ae){We(z),We(ve),We(Ae),We(ve),We(he),We(Ae);const pe=i.length/3,qe=w.generateSideWallUV(n,i,pe-6,pe-3,pe-2,pe-1);Ge(qe[0]),Ge(qe[1]),Ge(qe[3]),Ge(qe[1]),Ge(qe[2]),Ge(qe[3])}function We(z){i.push(u[z*3+0]),i.push(u[z*3+1]),i.push(u[z*3+2])}function Ge(z){s.push(z.x),s.push(z.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return tA(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new nu[i.type]().fromJSON(i)),new Eu(n,e.options)}}const eA={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new fe(s,l),new fe(c,u),new fe(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],_=e[i*3+1],y=e[i*3+2],M=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-f)<Math.abs(l-h)?[new fe(l,1-u),new fe(h,1-p),new fe(m,1-y),new fe(M,1-v)]:[new fe(c,1-u),new fe(f,1-p),new fe(_,1-y),new fe(x,1-v)]}};function tA(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class wu extends Or{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new wu(e.radius,e.detail)}}class qa extends Or{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new qa(e.radius,e.detail)}}class Tu extends _t{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,_=new D,y=new fe;for(let M=0;M<=i;M++){for(let x=0;x<=n;x++){const v=s+x/n*l;_.x=p*Math.cos(v),_.y=p*Math.sin(v),u.push(_.x,_.y,_.z),h.push(0,0,1),y.x=(_.x/t+1)/2,y.y=(_.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let M=0;M<i;M++){const x=M*(n+1);for(let v=0;v<n;v++){const w=v+x,E=w,A=w+n+1,C=w+n+2,R=w+1;c.push(E,A,R),c.push(A,C,R)}}this.setIndex(c),this.setAttribute("position",new Ye(u,3)),this.setAttribute("normal",new Ye(h,3)),this.setAttribute("uv",new Ye(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Au extends _t{constructor(e=new gs([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ye(i,3)),this.setAttribute("normal",new Ye(s,3)),this.setAttribute("uv",new Ye(l,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let _=m.shape;const y=m.holes;zi.isClockWise(_)===!1&&(_=_.reverse());for(let x=0,v=y.length;x<v;x++){const w=y[x];zi.isClockWise(w)===!0&&(y[x]=w.reverse())}const M=zi.triangulateShape(_,y);for(let x=0,v=y.length;x<v;x++){const w=y[x];_=_.concat(w)}for(let x=0,v=_.length;x<v;x++){const w=_[x];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let x=0,v=M.length;x<v;x++){const w=M[x],E=w[0]+p,A=w[1]+p,C=w[2]+p;n.push(E,A,C),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return nA(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Au(n,e.curveSegments)}}function nA(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Za extends _t{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const f=[],p=new D,m=new D,_=[],y=[],M=[],x=[];for(let v=0;v<=n;v++){const w=[],E=v/n;let A=0;v===0&&l===0?A=.5/t:v===n&&u===Math.PI&&(A=-.5/t);for(let C=0;C<=t;C++){const R=C/t;p.x=-e*Math.cos(i+R*s)*Math.sin(l+E*c),p.y=e*Math.cos(l+E*c),p.z=e*Math.sin(i+R*s)*Math.sin(l+E*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),x.push(R+A,1-E),w.push(h++)}f.push(w)}for(let v=0;v<n;v++)for(let w=0;w<t;w++){const E=f[v][w+1],A=f[v][w],C=f[v+1][w],R=f[v+1][w+1];(v!==0||l>0)&&_.push(E,A,R),(v!==n-1||u<Math.PI)&&_.push(A,C,R)}this.setIndex(_),this.setAttribute("position",new Ye(y,3)),this.setAttribute("normal",new Ye(M,3)),this.setAttribute("uv",new Ye(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Za(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class bu extends Or{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new bu(e.radius,e.detail)}}class Cu extends _t{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],f=new D,p=new D,m=new D;for(let _=0;_<=n;_++)for(let y=0;y<=i;y++){const M=y/i*s,x=_/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(M),p.y=(e+t*Math.cos(x))*Math.sin(M),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const M=(i+1)*_+y-1,x=(i+1)*(_-1)+y-1,v=(i+1)*(_-1)+y,w=(i+1)*_+y;l.push(M,x,w),l.push(x,v,w)}this.setIndex(l),this.setAttribute("position",new Ye(c,3)),this.setAttribute("normal",new Ye(u,3)),this.setAttribute("uv",new Ye(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Ru extends _t{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new D,m=new D,_=new D,y=new D,M=new D,x=new D,v=new D;for(let E=0;E<=n;++E){const A=E/n*s*Math.PI*2;w(A,s,l,e,_),w(A+.01,s,l,e,y),x.subVectors(y,_),v.addVectors(y,_),M.crossVectors(x,v),v.crossVectors(M,x),M.normalize(),v.normalize();for(let C=0;C<=i;++C){const R=C/i*Math.PI*2,N=-t*Math.cos(R),F=t*Math.sin(R);p.x=_.x+(N*v.x+F*M.x),p.y=_.y+(N*v.y+F*M.y),p.z=_.z+(N*v.z+F*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,_).normalize(),h.push(m.x,m.y,m.z),f.push(E/n),f.push(C/i)}}for(let E=1;E<=n;E++)for(let A=1;A<=i;A++){const C=(i+1)*(E-1)+(A-1),R=(i+1)*E+(A-1),N=(i+1)*E+A,F=(i+1)*(E-1)+A;c.push(C,R,F),c.push(R,N,F)}this.setIndex(c),this.setAttribute("position",new Ye(u,3)),this.setAttribute("normal",new Ye(h,3)),this.setAttribute("uv",new Ye(f,2));function w(E,A,C,R,N){const F=Math.cos(E),b=Math.sin(E),L=C/A*E,B=Math.cos(L);N.x=R*(2+B)*.5*F,N.y=R*(2+B)*b*.5,N.z=R*Math.sin(L)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ru(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Pu extends _t{constructor(e=new ip(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new D,u=new D,h=new fe;let f=new D;const p=[],m=[],_=[],y=[];M(),this.setIndex(y),this.setAttribute("position",new Ye(p,3)),this.setAttribute("normal",new Ye(m,3)),this.setAttribute("uv",new Ye(_,2));function M(){for(let E=0;E<t;E++)x(E);x(s===!1?t:0),w(),v()}function x(E){f=e.getPointAt(E/t,f);const A=l.normals[E],C=l.binormals[E];for(let R=0;R<=i;R++){const N=R/i*Math.PI*2,F=Math.sin(N),b=-Math.cos(N);u.x=b*A.x+F*C.x,u.y=b*A.y+F*C.y,u.z=b*A.z+F*C.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let E=1;E<=t;E++)for(let A=1;A<=i;A++){const C=(i+1)*(E-1)+(A-1),R=(i+1)*E+(A-1),N=(i+1)*E+A,F=(i+1)*(E-1)+A;y.push(C,R,F),y.push(R,N,F)}}function w(){for(let E=0;E<=t;E++)for(let A=0;A<=i;A++)h.x=E/t,h.y=A/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Pu(new nu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Lv extends _t{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,_=p.count;for(let y=m,M=m+_;y<M;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,w),r_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,f),s.fromBufferAttribute(l,p),r_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ye(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function r_(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var s_=Object.freeze({__proto__:null,BoxGeometry:Ms,CapsuleGeometry:vu,CircleGeometry:yu,ConeGeometry:xu,CylinderGeometry:Co,DodecahedronGeometry:Su,EdgesGeometry:bv,ExtrudeGeometry:Eu,IcosahedronGeometry:wu,LatheGeometry:Ya,OctahedronGeometry:qa,PlaneGeometry:Xa,PolyhedronGeometry:Or,RingGeometry:Tu,ShapeGeometry:Au,SphereGeometry:Za,TetrahedronGeometry:bu,TorusGeometry:Cu,TorusKnotGeometry:Ru,TubeGeometry:Pu,WireframeGeometry:Lv});class Iv extends Sn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ke(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Dv extends ki{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class sp extends Sn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ke(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Nv extends sp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Zt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ke(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ke(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ke(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Uv extends Sn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ke(16777215),this.specular=new ke(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ba,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ov extends Sn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ke(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Fv extends Sn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class zv extends Sn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ke(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ba,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Bv extends Sn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ke(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class kv extends Bn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function hs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Hv(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Vv(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Md(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function op(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function iA(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let _=0;_<h.times.length;++_){const y=h.times[_]*i;if(!(y<t||y>=n)){p.push(h.times[_]);for(let M=0;M<f;++M)m.push(h.values[_*f+M])}}p.length!==0&&(h.times=hs(p,h.times.constructor),h.values=hs(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function rA(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=_/3);const y=c.times.length-1;let M;if(s<=c.times[0]){const v=f,w=p-f;M=c.values.slice(v,w)}else if(s>=c.times[y]){const v=y*p+f,w=v+p-f;M=c.values.slice(v,w)}else{const v=c.createInterpolant(),w=f,E=p-f;v.evaluate(s),M=v.resultBuffer.slice(w,E)}u==="quaternion"&&new Pn().fromArray(M).normalize().conjugate().toArray(M);const x=h.times.length;for(let v=0;v<x;++v){const w=v*_+m;if(u==="quaternion")Pn.multiplyQuaternionsFlat(h.values,w,M,0,h.values,w);else{const E=_-m*2;for(let A=0;A<E;++A)h.values[w+A]-=M[A]}}}return r.blendMode=Fd,r}const sA={convertArray:hs,isTypedArray:Hv,getKeyframeOrder:Vv,sortedArray:Md,flattenJSON:op,subclip:iA,makeClipAdditive:rA};class ja{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Gv extends ja{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ls,endingEnd:ls}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case cs:s=e,c=2*t-n;break;case Ta:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case cs:l=e,u=2*n-t;break;case Ta:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=l*f}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,_=this._weightNext,y=(n-t)/(i-t),M=y*y,x=M*y,v=-m*x+2*m*M-m*y,w=(1+m)*x+(-1.5-2*m)*M+(-.5+m)*y+1,E=(-1-_)*x+(1.5+_)*M+.5*y,A=_*x-_*M;for(let C=0;C!==c;++C)s[C]=v*l[f+C]+w*l[h+C]+E*l[u+C]+A*l[p+C];return s}}class ap extends ja{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*f;return s}}class Wv extends ja{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ti{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=hs(t,this.TimeBufferType),this.values=hs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:hs(e.times,Array),values:hs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Wv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ap(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Gv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ea:t=this.InterpolantFactoryMethodDiscrete;break;case wa:t=this.InterpolantFactoryMethodLinear;break;case qc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ea;case this.InterpolantFactoryMethodLinear:return wa;case this.InterpolantFactoryMethodSmooth:return qc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&Hv(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===qc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,_=p+n;for(let y=0;y!==n;++y){const M=t[p+y];if(M!==t[m+y]||M!==t[_+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let _=0;_!==n;++_)t[m+_]=t[p+_]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ti.prototype.TimeBufferType=Float32Array;Ti.prototype.ValueBufferType=Float32Array;Ti.prototype.DefaultInterpolation=wa;class Es extends Ti{}Es.prototype.ValueTypeName="bool";Es.prototype.ValueBufferType=Array;Es.prototype.DefaultInterpolation=Ea;Es.prototype.InterpolantFactoryMethodLinear=void 0;Es.prototype.InterpolantFactoryMethodSmooth=void 0;class lp extends Ti{}lp.prototype.ValueTypeName="color";class Ua extends Ti{}Ua.prototype.ValueTypeName="number";class Xv extends ja{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Pn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Ro extends Ti{InterpolantFactoryMethodLinear(e){return new Xv(this.times,this.values,this.getValueSize(),e)}}Ro.prototype.ValueTypeName="quaternion";Ro.prototype.DefaultInterpolation=wa;Ro.prototype.InterpolantFactoryMethodSmooth=void 0;class ws extends Ti{}ws.prototype.ValueTypeName="string";ws.prototype.ValueBufferType=Array;ws.prototype.DefaultInterpolation=Ea;ws.prototype.InterpolantFactoryMethodLinear=void 0;ws.prototype.InterpolantFactoryMethodSmooth=void 0;class Oa extends Ti{}Oa.prototype.ValueTypeName="vector";class Fa{constructor(e,t=-1,n,i=lu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(aA(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(Ti.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=Vv(u);u=Md(u,1,f),h=Md(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Ua(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,_,y,M){if(_.length!==0){const x=[],v=[];op(_,x,v,y),x.length!==0&&M.push(new p(m,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const _={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let M=0;M<m[y].morphTargets.length;M++)_[m[y].morphTargets[M]]=-1;for(const M in _){const x=[],v=[];for(let w=0;w!==m[y].morphTargets.length;++w){const E=m[y];x.push(E.time),v.push(E.morphTarget===M?1:0)}i.push(new Ua(".morphTargetInfluence["+M+"]",x,v))}u=_.length*l}else{const _=".bones["+t[p].name+"]";n(Oa,_+".position",m,"pos",i),n(Ro,_+".quaternion",m,"rot",i),n(Oa,_+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function oA(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ua;case"vector":case"vector2":case"vector3":case"vector4":return Oa;case"color":return lp;case"quaternion":return Ro;case"bool":case"boolean":return Es;case"string":return ws}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function aA(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=oA(r.type);if(r.times===void 0){const t=[],n=[];op(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const xs={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class cp{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,l,c),s=!0},this.itemEnd=function(f){l++,i.onProgress!==void 0&&i.onProgress(f,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const _=h[p],y=h[p+1];if(_.global&&(_.lastIndex=0),_.test(f))return y}return null}}}const Yv=new cp;class Yn{constructor(e){this.manager=e!==void 0?e:Yv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Yn.DEFAULT_MATERIAL_NAME="__DEFAULT";const $i={};class lA extends Error{constructor(e,t){super(e),this.response=t}}class or extends Yn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=xs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if($i[e]!==void 0){$i[e].push({onLoad:t,onProgress:n,onError:i});return}$i[e]=[],$i[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=$i[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),_=m?parseInt(m):0,y=_!==0;let M=0;const x=new ReadableStream({start(v){w();function w(){p.read().then(({done:E,value:A})=>{if(E)v.close();else{M+=A.byteLength;const C=new ProgressEvent("progress",{lengthComputable:y,loaded:M,total:_});for(let R=0,N=f.length;R<N;R++){const F=f[R];F.onProgress&&F.onProgress(C)}v.enqueue(A),w()}})}}});return new Response(x)}else throw new lA(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,_=new TextDecoder(m);return h.arrayBuffer().then(y=>_.decode(y))}}}).then(h=>{xs.add(e,h);const f=$i[e];delete $i[e];for(let p=0,m=f.length;p<m;p++){const _=f[p];_.onLoad&&_.onLoad(h)}}).catch(h=>{const f=$i[e];if(f===void 0)throw this.manager.itemError(e),h;delete $i[e];for(let p=0,m=f.length;p<m;p++){const _=f[p];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class cA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new or(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Fa.parse(e[n]);t.push(i)}return t}}class uA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new gu,u=new or(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const _=s.parse(m,!0);l[p]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=en),c.image=l,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const _=m.mipmaps.length/m.mipmapCount;for(let y=0;y<_;y++){l[y]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+M]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=en),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class za extends Yn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=xs.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Pa("img");function u(){f(),xs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class hA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=new Ga;s.colorSpace=an;const l=new za(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class fA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ms,c=new or(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:Rn,l.wrapT=h.wrapT!==void 0?h.wrapT:Rn,l.magFilter=h.magFilter!==void 0?h.magFilter:en,l.minFilter=h.minFilter!==void 0?h.minFilter:en,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Ir),h.mipmapCount===1&&(l.minFilter=en),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class dA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=new jt,l=new za(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Fr extends Pt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ke(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class qv extends Fr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ke(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const yf=new lt,o_=new D,a_=new D;class up{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new lt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Wa,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new It(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;o_.setFromMatrixPosition(e.matrixWorld),t.position.copy(o_),a_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(a_),t.updateMatrixWorld(),yf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(yf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class pA extends up{constructor(){super(new tn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=So*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Zv extends Fr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.target=new Pt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new pA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const l_=new lt,aa=new D,xf=new D;class mA extends up{constructor(){super(new tn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new It(2,1,1,1),new It(0,1,1,1),new It(3,1,1,1),new It(1,1,1,1),new It(3,0,1,1),new It(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),aa.setFromMatrixPosition(e.matrixWorld),n.position.copy(aa),xf.copy(n.position),xf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(xf),n.updateMatrixWorld(),i.makeTranslation(-aa.x,-aa.y,-aa.z),l_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(l_)}}class jv extends Fr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new mA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class gA extends up{constructor(){super(new Pr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Jv extends Fr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.target=new Pt,this.shadow=new gA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Kv extends Fr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Qv extends Fr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class $v{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class ey extends Fr{constructor(e=new $v,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Lu extends Yn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new or(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Lu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new ke().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new ke().setHex(l.value);break;case"v2":i.uniforms[s].value=new fe().fromArray(l.value);break;case"v3":i.uniforms[s].value=new D().fromArray(l.value);break;case"v4":i.uniforms[s].value=new It().fromArray(l.value);break;case"m3":i.uniforms[s].value=new yt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new lt().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new fe().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Iv,SpriteMaterial:Jd,RawShaderMaterial:Dv,ShaderMaterial:ki,PointsMaterial:Qd,MeshPhysicalMaterial:Nv,MeshStandardMaterial:sp,MeshPhongMaterial:Uv,MeshToonMaterial:Ov,MeshNormalMaterial:Fv,MeshLambertMaterial:zv,MeshDepthMaterial:qd,MeshDistanceMaterial:Zd,MeshBasicMaterial:Ur,MeshMatcapMaterial:Bv,LineDashedMaterial:kv,LineBasicMaterial:Bn,Material:Sn};return new t[e]}}class Ed{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class ty extends _t{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class ny extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new or(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,y){if(t[y]!==void 0)return t[y];const x=_.interleavedBuffers[y],v=s(_,x.buffer),w=fo(x.type,v),E=new pu(w,x.stride);return E.uuid=x.uuid,t[y]=E,E}function s(_,y){if(n[y]!==void 0)return n[y];const x=_.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new ty:new _t,c=e.data.index;if(c!==void 0){const _=fo(c.type,c.array);l.setIndex(new Dt(_,1))}const u=e.data.attributes;for(const _ in u){const y=u[_];let M;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);M=new vs(x,y.itemSize,y.offset,y.normalized)}else{const x=fo(y.type,y.array),v=y.isInstancedBufferAttribute?Eo:Dt;M=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(M.name=y.name),y.usage!==void 0&&M.setUsage(y.usage),l.setAttribute(_,M)}const h=e.data.morphAttributes;if(h)for(const _ in h){const y=h[_],M=[];for(let x=0,v=y.length;x<v;x++){const w=y[x];let E;if(w.isInterleavedBufferAttribute){const A=i(e.data,w.data);E=new vs(A,w.itemSize,w.offset,w.normalized)}else{const A=fo(w.type,w.array);E=new Dt(A,w.itemSize,w.normalized)}w.name!==void 0&&(E.name=w.name),M.push(E)}l.morphAttributes[_]=M}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let _=0,y=p.length;_!==y;++_){const M=p[_];l.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const _=new D;m.center!==void 0&&_.fromArray(m.center),l.boundingSphere=new Ln(_,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class _A extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?Ed.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new or(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Ed.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new or(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new gs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new mu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new ny;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in s_?c=s_[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Lu;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Fa.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(f)}else return u.data?{data:fo(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new cp(t);s=new za(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const _=[];for(let y=0,M=m.length;y<M;y++){const x=m[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?_.push(v):_.push(new ms(v.data,v.width,v.height)))}i[p.uuid]=new us(_)}else{const _=c(p.url);i[p.uuid]=new us(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:fo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new za(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const _=h[p],y=await s(_);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new ms(y.data,y.width,y.height)))}n[u.uuid]=new us(f)}else{const f=await s(u.url);n[u.uuid]=new us(f)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new Ga,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new ms:f=new jt,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,vA)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],c_),f.wrapT=n(c.wrap[1],c_)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.encoding!==void 0&&(f.encoding=c.encoding),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,u_)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,u_)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const _=[];for(let y=0,M=m.length;y<M;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),_.push(n[x])}return _}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":l=new tu,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new ke(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new du(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new fu(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new tn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Pr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new Kv(e.color,e.intensity);break;case"DirectionalLight":l=new Jv(e.color,e.intensity);break;case"PointLight":l=new jv(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new Qv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new Zv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new qv(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new ey().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),l=new _v(f,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),l=new ln(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,_=e.instanceMatrix,y=e.instanceColor;l=new vv(f,p,m),l.instanceMatrix=new Eo(new Float32Array(_.array),16),y!==void 0&&(l.instanceColor=new Eo(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),l=new yv(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=f,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(M=>{const x=new zn;x.min.fromArray(M.boxMin),x.max.fromArray(M.boxMax);const v=new Ln;return v.radius=M.sphereRadius,v.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:x,sphereInitialized:M.sphereInitialized,sphere:v}}),l._maxGeometryCount=e.maxGeometryCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":l=new gv;break;case"Line":l=new Dr(c(e.geometry),u(e.material));break;case"LineLoop":l=new xv(c(e.geometry),u(e.material));break;case"LineSegments":l=new Hi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new Sv(c(e.geometry),u(e.material));break;case"Sprite":l=new mv(u(e.material));break;case"Group":l=new mo;break;case"Bone":l=new Kd;break;default:l=new Pt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let _=0;_<m.length;_++)l.add(this.parseObject(m[_],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let _=0;_<m.length;_++){const y=m[_];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let _=0;_<m.length;_++){const y=m[_],M=l.getObjectByProperty("uuid",y.object);M!==void 0&&l.addLevel(M,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const vA={UVMapping:ou,CubeReflectionMapping:sr,CubeRefractionMapping:Lr,EquirectangularReflectionMapping:ya,EquirectangularRefractionMapping:xa,CubeUVReflectionMapping:Ao},c_={RepeatWrapping:Sa,ClampToEdgeWrapping:Rn,MirroredRepeatWrapping:Ma},u_={NearestFilter:$t,NearestMipmapNearestFilter:Qc,NearestMipmapLinearFilter:da,LinearFilter:en,LinearMipmapNearestFilter:Rd,LinearMipmapLinearFilter:Ir};class yA extends Yn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=xs.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){xs.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Ic;class hp{static getContext(){return Ic===void 0&&(Ic=new(window.AudioContext||window.webkitAudioContext)),Ic}static setContext(e){Ic=e}}class xA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new or(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);hp.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const h_=new lt,f_=new lt,Qr=new lt;class SA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new tn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new tn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Qr.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(ds*t.fov*.5)/t.zoom;let c,u;f_.elements[12]=-i,h_.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,Qr.elements[0]=2*t.near/(u-c),Qr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Qr),c=-l*t.aspect-s,u=l*t.aspect-s,Qr.elements[0]=2*t.near/(u-c),Qr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Qr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(f_),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(h_)}}class fp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=d_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=d_();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function d_(){return(typeof performance>"u"?Date:performance).now()}const $r=new D,p_=new Pn,MA=new D,es=new D;class EA extends Pt{constructor(){super(),this.type="AudioListener",this.context=hp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new fp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose($r,p_,MA),es.set(0,0,-1).applyQuaternion(p_),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime($r.x,i),t.positionY.linearRampToValueAtTime($r.y,i),t.positionZ.linearRampToValueAtTime($r.z,i),t.forwardX.linearRampToValueAtTime(es.x,i),t.forwardY.linearRampToValueAtTime(es.y,i),t.forwardZ.linearRampToValueAtTime(es.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition($r.x,$r.y,$r.z),t.setOrientation(es.x,es.y,es.z,n.x,n.y,n.z)}}class iy extends Pt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ts=new D,m_=new Pn,wA=new D,ns=new D;class TA extends iy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ts,m_,wA),ns.set(0,0,1).applyQuaternion(m_);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ts.x,n),t.positionY.linearRampToValueAtTime(ts.y,n),t.positionZ.linearRampToValueAtTime(ts.z,n),t.orientationX.linearRampToValueAtTime(ns.x,n),t.orientationY.linearRampToValueAtTime(ns.y,n),t.orientationZ.linearRampToValueAtTime(ns.z,n)}else t.setPosition(ts.x,ts.y,ts.z),t.setOrientation(ns.x,ns.y,ns.z)}}class AA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class ry{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Pn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Pn.multiplyQuaternionsFlat(e,l,e,t,e,n),Pn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const dp="\\[\\]\\.:\\/",bA=new RegExp("["+dp+"]","g"),pp="[^"+dp+"]",CA="[^"+dp.replace("\\.","")+"]",RA=/((?:WC+[\/:])*)/.source.replace("WC",pp),PA=/(WCOD+)?/.source.replace("WCOD",CA),LA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",pp),IA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",pp),DA=new RegExp("^"+RA+PA+LA+IA+"$"),NA=["material","materials","bones","map"];class UA{constructor(e,t,n){const i=n||At.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class At{constructor(e,t,n){this.path=t,this.parsedPath=n||At.parseTrackName(t),this.node=At.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new At.Composite(e,t,n):new At(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(bA,"")}static parseTrackName(e){const t=DA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);NA.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=At.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}At.Composite=UA;At.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};At.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};At.prototype.GetterByBindingType=[At.prototype._getValue_direct,At.prototype._getValue_array,At.prototype._getValue_arrayElement,At.prototype._getValue_toArray];At.prototype.SetterByBindingTypeAndVersioning=[[At.prototype._setValue_direct,At.prototype._setValue_direct_setNeedsUpdate,At.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[At.prototype._setValue_array,At.prototype._setValue_array_setNeedsUpdate,At.prototype._setValue_array_setMatrixWorldNeedsUpdate],[At.prototype._setValue_arrayElement,At.prototype._setValue_arrayElement_setNeedsUpdate,At.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[At.prototype._setValue_fromArray,At.prototype._setValue_fromArray_setNeedsUpdate,At.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class OA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],_=m.uuid;let y=t[_];if(y===void 0){y=u++,t[_]=y,e.push(m);for(let M=0,x=l;M!==x;++M)s[M].push(new At(m,n[M],i[M]))}else if(y<h){c=e[y];const M=--h,x=e[M];t[x.uuid]=y,e[y]=x,t[_]=M,e[M]=m;for(let v=0,w=l;v!==w;++v){const E=s[v],A=E[M];let C=E[y];E[y]=A,C===void 0&&(C=new At(m,n[v],i[v])),E[M]=C}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let _=0,y=i;_!==y;++_){const M=n[_],x=M[p],v=M[f];M[f]=x,M[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,_=e[m],y=--l,M=e[y];t[_.uuid]=p,e[p]=_,t[M.uuid]=m,e[m]=M,e.pop();for(let x=0,v=i;x!==v;++x){const w=n[x],E=w[m],A=w[y];w[p]=E,w[m]=A,w.pop()}}else{const m=--l,_=e[m];m>0&&(t[_.uuid]=p),e[p]=_,e.pop();for(let y=0,M=i;y!==M;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=f,_=u.length;m!==_;++m){const y=u[m];p[m]=new At(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class sy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:ls,endingEnd:ls};for(let h=0;h!==l;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=B0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Fd:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulateAdditive(c);break;case lu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===k0;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===z0){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=cs,i.endingEnd=cs):(e?i.endingStart=this.zeroSlopeAtStart?cs:ls:i.endingStart=Ta,t?i.endingEnd=this.zeroSlopeAtEnd?cs:ls:i.endingEnd=Ta)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const FA=new Float32Array(1);class zA extends ar{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],_=m.name;let y=f[_];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,_));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;y=new ry(At.create(n,_,M),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,_),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new ap(new Float32Array(2),new Float32Array(2),1,FA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Fa.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=lu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const f=new sy(this,l,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Fa.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class mp{constructor(e){this.value=e}clone(){return new mp(this.value.clone===void 0?this.value:this.value.clone())}}let BA=0;class kA extends ar{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:BA++}),this.name="",this.usage=Ra,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class HA extends pu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class VA{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class oy{constructor(e,t,n=0,i=1/0){this.ray=new Ss(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ps,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return wd(e,this,n,t),n.sort(g_),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)wd(e[i],this,n,t);return n.sort(g_),n}}function g_(r,e){return r.distance-e.distance}function wd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)wd(i[s],e,t,!0)}}class Td{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Zt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class GA{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const __=new fe;class WA{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=__.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,__).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const v_=new D,Dc=new D;class XA{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){v_.subVectors(e,this.start),Dc.subVectors(this.end,this.start);const n=Dc.dot(Dc);let s=Dc.dot(v_)/n;return t&&(s=Zt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const y_=new D;class YA extends Pt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new _t,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new Ye(i,3));const s=new Bn({fog:!1,toneMapped:!1});this.cone=new Hi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),y_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(y_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Er=new D,Nc=new lt,Sf=new lt;class qA extends Hi{constructor(e){const t=ay(e),n=new _t,i=[],s=[],l=new ke(0,0,1),c=new ke(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Ye(i,3)),n.setAttribute("color",new Ye(s,3));const u=new Bn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Sf.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Nc.multiplyMatrices(Sf,c.matrixWorld),Er.setFromMatrixPosition(Nc),i.setXYZ(l,Er.x,Er.y,Er.z),Nc.multiplyMatrices(Sf,c.parent.matrixWorld),Er.setFromMatrixPosition(Nc),i.setXYZ(l+1,Er.x,Er.y,Er.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function ay(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,ay(r.children[t]));return e}class ZA extends ln{constructor(e,t,n){const i=new Za(t,4,2),s=new Ur({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const jA=new D,x_=new ke,S_=new ke;class JA extends Pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new qa(t);i.rotateY(Math.PI*.5),this.material=new Ur({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Dt(l,3)),this.add(new ln(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");x_.copy(this.light.color),S_.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?x_:S_;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(jA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class KA extends Hi{constructor(e=10,t=10,n=4473924,i=8947848){n=new ke(n),i=new ke(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,_=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const M=m===s?n:i;M.toArray(h,_),_+=3,M.toArray(h,_),_+=3,M.toArray(h,_),_+=3,M.toArray(h,_),_+=3}const f=new _t;f.setAttribute("position",new Ye(u,3)),f.setAttribute("color",new Ye(h,3));const p=new Bn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class QA extends Hi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new ke(s),l=new ke(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),_=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(_,0,y);const M=p&1?s:l;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?s:l,_=e-e/n*p;for(let y=0;y<i;y++){let M=y/i*(Math.PI*2),x=Math.sin(M)*_,v=Math.cos(M)*_;c.push(x,0,v),u.push(m.r,m.g,m.b),M=(y+1)/i*(Math.PI*2),x=Math.sin(M)*_,v=Math.cos(M)*_,c.push(x,0,v),u.push(m.r,m.g,m.b)}}const h=new _t;h.setAttribute("position",new Ye(c,3)),h.setAttribute("color",new Ye(u,3));const f=new Bn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const M_=new D,Uc=new D,E_=new D;class $A extends Pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new _t;i.setAttribute("position",new Ye([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Bn({fog:!1,toneMapped:!1});this.lightPlane=new Dr(i,s),this.add(this.lightPlane),i=new _t,i.setAttribute("position",new Ye([0,0,0,0,0,1],3)),this.targetLine=new Dr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),M_.setFromMatrixPosition(this.light.matrixWorld),Uc.setFromMatrixPosition(this.light.target.matrixWorld),E_.subVectors(Uc,M_),this.lightPlane.lookAt(Uc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Uc),this.targetLine.scale.z=E_.length()}}const Oc=new D,qt=new Va;class eb extends Hi{constructor(e){const t=new _t,n=new Bn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,M){u(y),u(M)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Ye(i,3)),t.setAttribute("color",new Ye(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new ke(16755200),f=new ke(16711680),p=new ke(43775),m=new ke(16777215),_=new ke(3355443);this.setColors(h,f,p,m,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Qt("c",t,e,qt,0,0,-1),Qt("t",t,e,qt,0,0,1),Qt("n1",t,e,qt,-n,-i,-1),Qt("n2",t,e,qt,n,-i,-1),Qt("n3",t,e,qt,-n,i,-1),Qt("n4",t,e,qt,n,i,-1),Qt("f1",t,e,qt,-n,-i,1),Qt("f2",t,e,qt,n,-i,1),Qt("f3",t,e,qt,-n,i,1),Qt("f4",t,e,qt,n,i,1),Qt("u1",t,e,qt,n*.7,i*1.1,-1),Qt("u2",t,e,qt,-n*.7,i*1.1,-1),Qt("u3",t,e,qt,0,i*2,-1),Qt("cf1",t,e,qt,-n,0,1),Qt("cf2",t,e,qt,n,0,1),Qt("cf3",t,e,qt,0,-i,1),Qt("cf4",t,e,qt,0,i,1),Qt("cn1",t,e,qt,-n,0,-1),Qt("cn2",t,e,qt,n,0,-1),Qt("cn3",t,e,qt,0,-i,-1),Qt("cn4",t,e,qt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Qt(r,e,t,n,i,s,l){Oc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],Oc.x,Oc.y,Oc.z)}}const Fc=new zn;class tb extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),s=new _t;s.setIndex(new Dt(n,1)),s.setAttribute("position",new Dt(i,3)),super(s,new Bn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Fc.setFromObject(this.object),Fc.isEmpty())return;const t=Fc.min,n=Fc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class nb extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new _t;s.setIndex(new Dt(n,1)),s.setAttribute("position",new Ye(i,3)),super(s,new Bn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class ib extends Dr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new _t;l.setAttribute("position",new Ye(s,3)),l.computeBoundingSphere(),super(l,new Bn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new _t;u.setAttribute("position",new Ye(c,3)),u.computeBoundingSphere(),this.add(new ln(u,new Ur({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const w_=new D;let zc,Mf;class rb extends Pt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",zc===void 0&&(zc=new _t,zc.setAttribute("position",new Ye([0,0,0,0,1,0],3)),Mf=new Co(0,.5,1,5,1),Mf.translate(0,-.5,0)),this.position.copy(t),this.line=new Dr(zc,new Bn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ln(Mf,new Ur({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{w_.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(w_,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class sb extends Hi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _t;i.setAttribute("position",new Ye(t,3)),i.setAttribute("color",new Ye(n,3));const s=new Bn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new ke,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ob{constructor(){this.type="ShapePath",this.color=new ke,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new La,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const w=[];for(let E=0,A=v.length;E<A;E++){const C=v[E],R=new gs;R.curves=C.curves,w.push(R)}return w}function n(v,w){const E=w.length;let A=!1;for(let C=E-1,R=0;R<E;C=R++){let N=w[C],F=w[R],b=F.x-N.x,L=F.y-N.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(N=w[R],b=-b,F=w[C],L=-L),v.y<N.y||v.y>F.y)continue;if(v.y===N.y){if(v.x===N.x)return!0}else{const B=L*(v.x-N.x)-b*(v.y-N.y);if(B===0)return!0;if(B<0)continue;A=!A}}else{if(v.y!==N.y)continue;if(F.x<=v.x&&v.x<=N.x||N.x<=v.x&&v.x<=F.x)return!0}}return A}const i=zi.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new gs,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let _=[],y=0,M;m[y]=void 0,_[y]=[];for(let v=0,w=s.length;v<w;v++)c=s[v],M=c.getPoints(),l=i(M),l=e?!l:l,l?(!f&&m[y]&&y++,m[y]={s:new gs,p:M},m[y].s.curves=c.curves,f&&y++,_[y]=[]):_[y].push({h:c,p:M[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,w=0;for(let E=0,A=m.length;E<A;E++)p[E]=[];for(let E=0,A=m.length;E<A;E++){const C=_[E];for(let R=0;R<C.length;R++){const N=C[R];let F=!0;for(let b=0;b<m.length;b++)n(N.p,m[b].p)&&(E!==b&&w++,F?(F=!1,p[b].push(N)):v=!0);F&&p[E].push(N)}}w>0&&v===!1&&(_=p)}let x;for(let v=0,w=m.length;v<w;v++){u=m[v].s,h.push(u),x=_[v];for(let E=0,A=x.length;E<A;E++)u.holes.push(x[E].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ru}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ru);const ab=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Cd,AddEquation:Ar,AddOperation:w0,AdditiveAnimationBlendMode:Fd,AdditiveBlending:Ff,AlphaFormat:I0,AlwaysCompare:J0,AlwaysDepth:_0,AlwaysStencilFunc:pd,AmbientLight:Kv,AnimationAction:sy,AnimationClip:Fa,AnimationLoader:cA,AnimationMixer:zA,AnimationObjectGroup:OA,AnimationUtils:sA,ArcCurve:Mv,ArrayCamera:fv,ArrowHelper:rb,AttachedBindMode:Vf,Audio:iy,AudioAnalyser:AA,AudioContext:hp,AudioListener:EA,AudioLoader:xA,AxesHelper:sb,BackSide:Fn,BasicDepthPacking:H0,BasicShadowMap:$_,BatchedMesh:yv,Bone:Kd,BooleanKeyframeTrack:Es,Box2:WA,Box3:zn,Box3Helper:nb,BoxGeometry:Ms,BoxHelper:tb,BufferAttribute:Dt,BufferGeometry:_t,BufferGeometryLoader:ny,ByteType:P0,Cache:xs,Camera:Va,CameraHelper:eb,CanvasTexture:RT,CapsuleGeometry:vu,CatmullRomCurve3:Ev,CineonToneMapping:b0,CircleGeometry:yu,ClampToEdgeWrapping:Rn,Clock:fp,Color:ke,ColorKeyframeTrack:lp,ColorManagement:Lt,CompressedArrayTexture:bT,CompressedCubeTexture:CT,CompressedTexture:gu,CompressedTextureLoader:uA,ConeGeometry:xu,ConstantAlphaFactor:p0,ConstantColorFactor:f0,CubeCamera:iv,CubeReflectionMapping:sr,CubeRefractionMapping:Lr,CubeTexture:Ga,CubeTextureLoader:hA,CubeUVReflectionMapping:Ao,CubicBezierCurve:ep,CubicBezierCurve3:wv,CubicInterpolant:Gv,CullFaceBack:Of,CullFaceFront:Q_,CullFaceFrontBack:_x,CullFaceNone:K_,Curve:wi,CurvePath:Av,CustomBlending:e0,CustomToneMapping:C0,CylinderGeometry:Co,Cylindrical:GA,Data3DTexture:Vd,DataArrayTexture:uu,DataTexture:ms,DataTextureLoader:fA,DataUtils:bS,DecrementStencilOp:Rx,DecrementWrapStencilOp:Lx,DefaultLoadingManager:Yv,DepthFormat:Cr,DepthStencilFormat:_s,DepthTexture:Yd,DetachedBindMode:R0,DirectionalLight:Jv,DirectionalLightHelper:$A,DiscreteInterpolant:Wv,DisplayP3ColorSpace:cu,DodecahedronGeometry:Su,DoubleSide:Ui,DstAlphaFactor:a0,DstColorFactor:c0,DynamicCopyUsage:Yx,DynamicDrawUsage:kx,DynamicReadUsage:Gx,EdgesGeometry:bv,EllipseCurve:_u,EqualCompare:Y0,EqualDepth:y0,EqualStencilFunc:Ux,EquirectangularReflectionMapping:ya,EquirectangularRefractionMapping:xa,Euler:Ha,EventDispatcher:ar,ExtrudeGeometry:Eu,FileLoader:or,Float16BufferAttribute:DS,Float32BufferAttribute:Ye,Float64BufferAttribute:NS,FloatType:Si,Fog:du,FogExp2:fu,FramebufferTexture:AT,FrontSide:rr,Frustum:Wa,GLBufferAttribute:VA,GLSL1:Zx,GLSL3:md,GreaterCompare:q0,GreaterDepth:S0,GreaterEqualCompare:j0,GreaterEqualDepth:x0,GreaterEqualStencilFunc:Bx,GreaterStencilFunc:Fx,GridHelper:KA,Group:mo,HalfFloatType:yo,HemisphereLight:qv,HemisphereLightHelper:JA,IcosahedronGeometry:wu,ImageBitmapLoader:yA,ImageLoader:za,ImageUtils:Hd,IncrementStencilOp:Cx,IncrementWrapStencilOp:Px,InstancedBufferAttribute:Eo,InstancedBufferGeometry:ty,InstancedInterleavedBuffer:HA,InstancedMesh:vv,Int16BufferAttribute:LS,Int32BufferAttribute:IS,Int8BufferAttribute:CS,IntType:Pd,InterleavedBuffer:pu,InterleavedBufferAttribute:vs,Interpolant:ja,InterpolateDiscrete:Ea,InterpolateLinear:wa,InterpolateSmooth:qc,InvertStencilOp:Ix,KeepStencilOp:ss,KeyframeTrack:Ti,LOD:gv,LatheGeometry:Ya,Layers:ps,LessCompare:X0,LessDepth:v0,LessEqualCompare:Bd,LessEqualDepth:va,LessEqualStencilFunc:Ox,LessStencilFunc:Nx,Light:Fr,LightProbe:ey,Line:Dr,Line3:XA,LineBasicMaterial:Bn,LineCurve:tp,LineCurve3:Tv,LineDashedMaterial:kv,LineLoop:xv,LineSegments:Hi,LinearDisplayP3ColorSpace:ka,LinearEncoding:zd,LinearFilter:en,LinearInterpolant:ap,LinearMipMapLinearFilter:Mx,LinearMipMapNearestFilter:Sx,LinearMipmapLinearFilter:Ir,LinearMipmapNearestFilter:Rd,LinearSRGBColorSpace:Bi,LinearToneMapping:T0,LinearTransfer:Aa,Loader:Yn,LoaderUtils:Ed,LoadingManager:cp,LoopOnce:z0,LoopPingPong:k0,LoopRepeat:B0,LuminanceAlphaFormat:N0,LuminanceFormat:D0,MOUSE:is,Material:Sn,MaterialLoader:Lu,MathUtils:cS,Matrix3:yt,Matrix4:lt,MaxEquation:Hf,Mesh:ln,MeshBasicMaterial:Ur,MeshDepthMaterial:qd,MeshDistanceMaterial:Zd,MeshLambertMaterial:zv,MeshMatcapMaterial:Bv,MeshNormalMaterial:Fv,MeshPhongMaterial:Uv,MeshPhysicalMaterial:Nv,MeshStandardMaterial:sp,MeshToonMaterial:Ov,MinEquation:kf,MirroredRepeatWrapping:Ma,MixOperation:E0,MultiplyBlending:Bf,MultiplyOperation:Ba,NearestFilter:$t,NearestMipMapLinearFilter:xx,NearestMipMapNearestFilter:yx,NearestMipmapLinearFilter:da,NearestMipmapNearestFilter:Qc,NeverCompare:W0,NeverDepth:g0,NeverStencilFunc:Dx,NoBlending:ir,NoColorSpace:ei,NoToneMapping:Oi,NormalAnimationBlendMode:lu,NormalBlending:fs,NotEqualCompare:Z0,NotEqualDepth:M0,NotEqualStencilFunc:zx,NumberKeyframeTrack:Ua,Object3D:Pt,ObjectLoader:_A,ObjectSpaceNormalMap:G0,OctahedronGeometry:qa,OneFactor:r0,OneMinusConstantAlphaFactor:m0,OneMinusConstantColorFactor:d0,OneMinusDstAlphaFactor:l0,OneMinusDstColorFactor:u0,OneMinusSrcAlphaFactor:Kc,OneMinusSrcColorFactor:o0,OrthographicCamera:Pr,P3Primaries:Ca,PCFShadowMap:su,PCFSoftShadowMap:fa,PMREMGenerator:_d,Path:La,PerspectiveCamera:tn,Plane:er,PlaneGeometry:Xa,PlaneHelper:ib,PointLight:jv,PointLightHelper:ZA,Points:Sv,PointsMaterial:Qd,PolarGridHelper:QA,PolyhedronGeometry:Or,PositionalAudio:TA,PropertyBinding:At,PropertyMixer:ry,QuadraticBezierCurve:np,QuadraticBezierCurve3:ip,Quaternion:Pn,QuaternionKeyframeTrack:Ro,QuaternionLinearInterpolant:Xv,RED_GREEN_RGTC2_Format:fd,RED_RGTC1_Format:F0,REVISION:ru,RGBADepthPacking:V0,RGBAFormat:On,RGBAIntegerFormat:Ud,RGBA_ASTC_10x10_Format:od,RGBA_ASTC_10x5_Format:id,RGBA_ASTC_10x6_Format:rd,RGBA_ASTC_10x8_Format:sd,RGBA_ASTC_12x10_Format:ad,RGBA_ASTC_12x12_Format:ld,RGBA_ASTC_4x4_Format:jf,RGBA_ASTC_5x4_Format:Jf,RGBA_ASTC_5x5_Format:Kf,RGBA_ASTC_6x5_Format:Qf,RGBA_ASTC_6x6_Format:$f,RGBA_ASTC_8x5_Format:ed,RGBA_ASTC_8x6_Format:td,RGBA_ASTC_8x8_Format:nd,RGBA_BPTC_Format:Yc,RGBA_ETC2_EAC_Format:Zf,RGBA_PVRTC_2BPPV1_Format:Yf,RGBA_PVRTC_4BPPV1_Format:Xf,RGBA_S3TC_DXT1_Format:Gc,RGBA_S3TC_DXT3_Format:Wc,RGBA_S3TC_DXT5_Format:Xc,RGB_BPTC_SIGNED_Format:cd,RGB_BPTC_UNSIGNED_Format:ud,RGB_ETC1_Format:Od,RGB_ETC2_Format:qf,RGB_PVRTC_2BPPV1_Format:Wf,RGB_PVRTC_4BPPV1_Format:Gf,RGB_S3TC_DXT1_Format:Vc,RGFormat:O0,RGIntegerFormat:Nd,RawShaderMaterial:Dv,Ray:Ss,Raycaster:oy,Rec709Primaries:ba,RectAreaLight:Qv,RedFormat:U0,RedIntegerFormat:Dd,ReinhardToneMapping:A0,RenderTarget:$0,RepeatWrapping:Sa,ReplaceStencilOp:bx,ReverseSubtractEquation:n0,RingGeometry:Tu,SIGNED_RED_GREEN_RGTC2_Format:dd,SIGNED_RED_RGTC1_Format:hd,SRGBColorSpace:an,SRGBTransfer:Ft,Scene:tu,ShaderChunk:mt,ShaderLib:xi,ShaderMaterial:ki,ShadowMaterial:Iv,Shape:gs,ShapeGeometry:Au,ShapePath:ob,ShapeUtils:zi,ShortType:L0,Skeleton:mu,SkeletonHelper:qA,SkinnedMesh:_v,Source:us,Sphere:Ln,SphereGeometry:Za,Spherical:Td,SphericalHarmonics3:$v,SplineCurve:rp,SpotLight:Zv,SpotLightHelper:YA,Sprite:mv,SpriteMaterial:Jd,SrcAlphaFactor:Jc,SrcAlphaSaturateFactor:h0,SrcColorFactor:s0,StaticCopyUsage:Xx,StaticDrawUsage:Ra,StaticReadUsage:Vx,StereoCamera:SA,StreamCopyUsage:qx,StreamDrawUsage:Hx,StreamReadUsage:Wx,StringKeyframeTrack:ws,SubtractEquation:t0,SubtractiveBlending:zf,TOUCH:rs,TangentSpaceNormalMap:Nr,TetrahedronGeometry:bu,Texture:jt,TextureLoader:dA,TorusGeometry:Cu,TorusKnotGeometry:Ru,Triangle:Wn,TriangleFanDrawMode:Tx,TriangleStripDrawMode:wx,TrianglesDrawMode:Ex,TubeGeometry:Pu,TwoPassDoubleSide:vx,UVMapping:ou,Uint16BufferAttribute:Gd,Uint32BufferAttribute:Wd,Uint8BufferAttribute:RS,Uint8ClampedBufferAttribute:PS,Uniform:mp,UniformsGroup:kA,UniformsLib:Pe,UniformsUtils:nv,UnsignedByteType:Fi,UnsignedInt248Type:br,UnsignedIntType:nr,UnsignedShort4444Type:Ld,UnsignedShort5551Type:Id,UnsignedShortType:au,VSMShadowMap:yi,Vector2:fe,Vector3:D,Vector4:It,VectorKeyframeTrack:Oa,VideoTexture:TT,WebGL1Renderer:dv,WebGL3DRenderTarget:mS,WebGLArrayRenderTarget:pS,WebGLCoordinateSystem:Mi,WebGLCubeRenderTarget:rv,WebGLMultipleRenderTargets:gS,WebGLRenderTarget:Ei,WebGLRenderer:jd,WebGLUtils:hv,WebGPUCoordinateSystem:xo,WireframeGeometry:Lv,WrapAroundEnding:Ta,ZeroCurvatureEnding:ls,ZeroFactor:i0,ZeroSlopeEnding:cs,ZeroStencilOp:Ax,_SRGBAFormat:$c,createCanvasElement:Q0,sRGBEncoding:Rr},Symbol.toStringTag,{value:"Module"}));var Ef={exports:{}},wr={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var T_;function lb(){return T_||(T_=1,wr.ConcurrentRoot=1,wr.ContinuousEventPriority=4,wr.DefaultEventPriority=16,wr.DiscreteEventPriority=1,wr.IdleEventPriority=536870912,wr.LegacyRoot=0),wr}var A_;function cb(){return A_||(A_=1,Ef.exports=lb()),Ef.exports}var _o=cb();function ub(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(_=>_(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function _(){const y=f(e);if(!p(m,y)){const M=m;h(m=y,M)}}return t.add(_),()=>t.delete(_)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const hb=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),b_=hb?Le.useEffect:Le.useLayoutEffect;function fb(r){const e=typeof r=="function"?ub(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Le.useReducer(x=>x+1,0),l=e.getState(),c=Le.useRef(l),u=Le.useRef(n),h=Le.useRef(i),f=Le.useRef(!1),p=Le.useRef();p.current===void 0&&(p.current=n(l));let m,_=!1;(c.current!==l||u.current!==n||h.current!==i||f.current)&&(m=n(l),_=!i(p.current,m)),b_(()=>{_&&(p.current=m),c.current=l,u.current=n,h.current=i,f.current=!1});const y=Le.useRef(l);b_(()=>{const x=()=>{try{const w=e.getState(),E=u.current(w);h.current(p.current,E)||(c.current=w,p.current=E,s())}catch{f.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const M=_?m:p.current;return Le.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var wf={exports:{}},Tf={exports:{}},Af={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var C_;function db(){return C_||(C_=1,(function(r){function e(X,Y){var Z=X.length;X.push(Y);e:for(;0<Z;){var ee=Z-1>>>1,me=X[ee];if(0<i(me,Y))X[ee]=Y,X[Z]=me,Z=ee;else break e}}function t(X){return X.length===0?null:X[0]}function n(X){if(X.length===0)return null;var Y=X[0],Z=X.pop();if(Z!==Y){X[0]=Z;e:for(var ee=0,me=X.length,J=me>>>1;ee<J;){var de=2*(ee+1)-1,Ce=X[de],Fe=de+1,Ue=X[Fe];if(0>i(Ce,Z))Fe<me&&0>i(Ue,Ce)?(X[ee]=Ue,X[Fe]=Z,ee=Fe):(X[ee]=Ce,X[de]=Z,ee=de);else if(Fe<me&&0>i(Ue,Z))X[ee]=Ue,X[Fe]=Z,ee=Fe;else break e}}return Y}function i(X,Y){var Z=X.sortIndex-Y.sortIndex;return Z!==0?Z:X.id-Y.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],f=1,p=null,m=3,_=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(X){for(var Y=t(h);Y!==null;){if(Y.callback===null)n(h);else if(Y.startTime<=X)n(h),Y.sortIndex=Y.expirationTime,e(u,Y);else break;Y=t(h)}}function A(X){if(M=!1,E(X),!y)if(t(u)!==null)y=!0,oe(C);else{var Y=t(h);Y!==null&&se(A,Y.startTime-X)}}function C(X,Y){y=!1,M&&(M=!1,v(F),F=-1),_=!0;var Z=m;try{for(E(Y),p=t(u);p!==null&&(!(p.expirationTime>Y)||X&&!B());){var ee=p.callback;if(typeof ee=="function"){p.callback=null,m=p.priorityLevel;var me=ee(p.expirationTime<=Y);Y=r.unstable_now(),typeof me=="function"?p.callback=me:p===t(u)&&n(u),E(Y)}else n(u);p=t(u)}if(p!==null)var J=!0;else{var de=t(h);de!==null&&se(A,de.startTime-Y),J=!1}return J}finally{p=null,m=Z,_=!1}}var R=!1,N=null,F=-1,b=5,L=-1;function B(){return!(r.unstable_now()-L<b)}function j(){if(N!==null){var X=r.unstable_now();L=X;var Y=!0;try{Y=N(!0,X)}finally{Y?ae():(R=!1,N=null)}}else R=!1}var ae;if(typeof w=="function")ae=function(){w(j)};else if(typeof MessageChannel<"u"){var H=new MessageChannel,Q=H.port2;H.port1.onmessage=j,ae=function(){Q.postMessage(null)}}else ae=function(){x(j,0)};function oe(X){N=X,R||(R=!0,ae())}function se(X,Y){F=x(function(){X(r.unstable_now())},Y)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(X){X.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,oe(C))},r.unstable_forceFrameRate=function(X){0>X||125<X?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<X?Math.floor(1e3/X):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(X){switch(m){case 1:case 2:case 3:var Y=3;break;default:Y=m}var Z=m;m=Y;try{return X()}finally{m=Z}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(X,Y){switch(X){case 1:case 2:case 3:case 4:case 5:break;default:X=3}var Z=m;m=X;try{return Y()}finally{m=Z}},r.unstable_scheduleCallback=function(X,Y,Z){var ee=r.unstable_now();switch(typeof Z=="object"&&Z!==null?(Z=Z.delay,Z=typeof Z=="number"&&0<Z?ee+Z:ee):Z=ee,X){case 1:var me=-1;break;case 2:me=250;break;case 5:me=1073741823;break;case 4:me=1e4;break;default:me=5e3}return me=Z+me,X={id:f++,callback:Y,priorityLevel:X,startTime:Z,expirationTime:me,sortIndex:-1},Z>ee?(X.sortIndex=Z,e(h,X),t(u)===null&&X===t(h)&&(M?(v(F),F=-1):M=!0,se(A,Z-ee))):(X.sortIndex=me,e(u,X),y||_||(y=!0,oe(C))),X},r.unstable_shouldYield=B,r.unstable_wrapCallback=function(X){var Y=m;return function(){var Z=m;m=Y;try{return X.apply(this,arguments)}finally{m=Z}}}})(Af)),Af}var R_;function ly(){return R_||(R_=1,Tf.exports=db()),Tf.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var bf,P_;function pb(){return P_||(P_=1,bf=function(e){var t={},n=j_(),i=ly(),s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)a+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),y=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),E=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),C=Symbol.iterator;function R(o){return o===null||typeof o!="object"?null:(o=C&&o[C]||o["@@iterator"],typeof o=="function"?o:null)}function N(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case _:return(o._context.displayName||"Context")+".Provider";case M:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return a=o.displayName||null,a!==null?a:N(o.type)||"Memo";case E:a=o._payload,o=o._init;try{return N(o(a))}catch{}}return null}function F(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return N(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function b(o){var a=o,d=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,(a.flags&4098)!==0&&(d=a.return),o=a.return;while(o)}return a.tag===3?d:null}function L(o){if(b(o)!==o)throw Error(l(188))}function B(o){var a=o.alternate;if(!a){if(a=b(o),a===null)throw Error(l(188));return a!==o?null:o}for(var d=o,g=a;;){var S=d.return;if(S===null)break;var T=S.alternate;if(T===null){if(g=S.return,g!==null){d=g;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===d)return L(S),o;if(T===g)return L(S),a;T=T.sibling}throw Error(l(188))}if(d.return!==g.return)d=S,g=T;else{for(var U=!1,G=S.child;G;){if(G===d){U=!0,d=S,g=T;break}if(G===g){U=!0,g=S,d=T;break}G=G.sibling}if(!U){for(G=T.child;G;){if(G===d){U=!0,d=T,g=S;break}if(G===g){U=!0,g=T,d=S;break}G=G.sibling}if(!U)throw Error(l(189))}}if(d.alternate!==g)throw Error(l(190))}if(d.tag!==3)throw Error(l(188));return d.stateNode.current===d?o:a}function j(o){return o=B(o),o!==null?ae(o):null}function ae(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=ae(o);if(a!==null)return a;o=o.sibling}return null}function H(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=H(o);if(a!==null)return a}o=o.sibling}return null}var Q=Array.isArray,oe=e.getPublicInstance,se=e.getRootHostContext,X=e.getChildHostContext,Y=e.prepareForCommit,Z=e.resetAfterCommit,ee=e.createInstance,me=e.appendInitialChild,J=e.finalizeInitialChildren,de=e.prepareUpdate,Ce=e.shouldSetTextContent,Fe=e.createTextInstance,Ue=e.scheduleTimeout,rt=e.cancelTimeout,nt=e.noTimeout,We=e.isPrimaryRenderer,Ge=e.supportsMutation,z=e.supportsPersistence,ve=e.supportsHydration,he=e.getInstanceFromNode,Ae=e.preparePortalMount,pe=e.getCurrentEventPriority,qe=e.detachDeletedInstance,Ne=e.supportsMicrotasks,ze=e.scheduleMicrotask,$e=e.supportsTestSelectors,xt=e.findFiberRoot,Nt=e.getBoundingRect,O=e.getTextContent,P=e.isHiddenSubtree,$=e.matchAccessibilityRole,Me=e.setFocusIfFocusable,_e=e.setupIntersectionObserver,Se=e.appendChild,Xe=e.appendChildToContainer,be=e.commitTextUpdate,Ie=e.commitMount,st=e.commitUpdate,Et=e.insertBefore,Ee=e.insertInContainerBefore,wt=e.removeChild,k=e.removeChildFromContainer,ce=e.resetTextContent,ge=e.hideInstance,ye=e.hideTextInstance,Je=e.unhideInstance,V=e.unhideTextInstance,Re=e.clearContainer,we=e.cloneInstance,ue=e.createContainerChildSet,xe=e.appendChildToContainerChildSet,Ze=e.finalizeContainerChildren,pt=e.replaceContainerChildren,Ut=e.cloneHiddenInstance,Bt=e.cloneHiddenTextInstance,Tt=e.canHydrateInstance,_n=e.canHydrateTextInstance,ni=e.canHydrateSuspenseInstance,Po=e.isSuspenseInstancePending,Lo=e.isSuspenseInstanceFallback,Ts=e.registerSuspenseInstanceRetry,lr=e.getNextHydratableSibling,As=e.getFirstHydratableChild,Ka=e.getFirstHydratableChildWithinContainer,Qa=e.getFirstHydratableChildWithinSuspenseInstance,Iu=e.hydrateInstance,Du=e.hydrateTextInstance,Nu=e.hydrateSuspenseInstance,I=e.getNextHydratableInstanceAfterSuspenseInstance,q=e.commitHydratedContainer,ne=e.commitHydratedSuspenseInstance,re=e.clearSuspenseBoundary,te=e.clearSuspenseBoundaryFromContainer,Be=e.shouldDeleteUnhydratedTailInstances,Ke=e.didNotMatchHydratedContainerTextInstance,it=e.didNotMatchHydratedTextInstance,ot;function ut(o){if(ot===void 0)try{throw Error()}catch(d){var a=d.stack.trim().match(/\n( *(at )?)/);ot=a&&a[1]||""}return`
`+ot+o}var ct=!1;function ht(o,a){if(!o||ct)return"";ct=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(Te){var g=Te}Reflect.construct(o,[],a)}else{try{a.call()}catch(Te){g=Te}o.call(a.prototype)}else{try{throw Error()}catch(Te){g=Te}o()}}catch(Te){if(Te&&g&&typeof Te.stack=="string"){for(var S=Te.stack.split(`
`),T=g.stack.split(`
`),U=S.length-1,G=T.length-1;1<=U&&0<=G&&S[U]!==T[G];)G--;for(;1<=U&&0<=G;U--,G--)if(S[U]!==T[G]){if(U!==1||G!==1)do if(U--,G--,0>G||S[U]!==T[G]){var le=`
`+S[U].replace(" at new "," at ");return o.displayName&&le.includes("<anonymous>")&&(le=le.replace("<anonymous>",o.displayName)),le}while(1<=U&&0<=G);break}}}finally{ct=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?ut(o):""}var Vt=Object.prototype.hasOwnProperty,vn=[],zt=-1;function hn(o){return{current:o}}function at(o){0>zt||(o.current=vn[zt],vn[zt]=null,zt--)}function He(o,a){zt++,vn[zt]=o.current,o.current=a}var ii={},St=hn(ii),Xt=hn(!1),Ai=ii;function ri(o,a){var d=o.type.contextTypes;if(!d)return ii;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in d)S[T]=a[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function fn(o){return o=o.childContextTypes,o!=null}function Jt(){at(Xt),at(St)}function bi(o,a,d){if(St.current!==ii)throw Error(l(168));He(St,a),He(Xt,d)}function bs(o,a,d){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return d;g=g.getChildContext();for(var S in g)if(!(S in a))throw Error(l(108,F(o)||"Unknown",S));return s({},d,g)}function yn(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||ii,Ai=St.current,He(St,o),He(Xt,Xt.current),!0}function Cs(o,a,d){var g=o.stateNode;if(!g)throw Error(l(169));d?(o=bs(o,a,Ai),g.__reactInternalMemoizedMergedChildContext=o,at(Xt),at(St),He(St,o)):at(Xt),He(Xt,d)}var qn=Math.clz32?Math.clz32:Ay,$a=Math.log,Ty=Math.LN2;function Ay(o){return o>>>=0,o===0?32:31-($a(o)/Ty|0)|0}var el=64,tl=4194304;function Io(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function nl(o,a){var d=o.pendingLanes;if(d===0)return 0;var g=0,S=o.suspendedLanes,T=o.pingedLanes,U=d&268435455;if(U!==0){var G=U&~S;G!==0?g=Io(G):(T&=U,T!==0&&(g=Io(T)))}else U=d&~S,U!==0?g=Io(U):T!==0&&(g=Io(T));if(g===0)return 0;if(a!==0&&a!==g&&(a&S)===0&&(S=g&-g,T=a&-a,S>=T||S===16&&(T&4194240)!==0))return a;if((g&4)!==0&&(g|=d&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)d=31-qn(a),S=1<<d,g|=o[d],a&=~S;return g}function by(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Cy(o,a){for(var d=o.suspendedLanes,g=o.pingedLanes,S=o.expirationTimes,T=o.pendingLanes;0<T;){var U=31-qn(T),G=1<<U,le=S[U];le===-1?((G&d)===0||(G&g)!==0)&&(S[U]=by(G,a)):le<=a&&(o.expiredLanes|=G),T&=~G}}function Uu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Ou(o){for(var a=[],d=0;31>d;d++)a.push(o);return a}function Do(o,a,d){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-qn(a),o[a]=d}function Ry(o,a){var d=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<d;){var S=31-qn(d),T=1<<S;a[S]=0,g[S]=-1,o[S]=-1,d&=~T}}function Fu(o,a){var d=o.entangledLanes|=a;for(o=o.entanglements;d;){var g=31-qn(d),S=1<<g;S&a|o[g]&a&&(o[g]|=a),d&=~S}}var bt=0;function vp(o){return o&=-o,1<o?4<o?(o&268435455)!==0?16:536870912:4:1}var zu=i.unstable_scheduleCallback,yp=i.unstable_cancelCallback,Py=i.unstable_shouldYield,Ly=i.unstable_requestPaint,dn=i.unstable_now,Bu=i.unstable_ImmediatePriority,Iy=i.unstable_UserBlockingPriority,ku=i.unstable_NormalPriority,Dy=i.unstable_IdlePriority,il=null,Ci=null;function Ny(o){if(Ci&&typeof Ci.onCommitFiberRoot=="function")try{Ci.onCommitFiberRoot(il,o,void 0,(o.current.flags&128)===128)}catch{}}function Uy(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Ri=typeof Object.is=="function"?Object.is:Uy,Vi=null,rl=!1,Hu=!1;function xp(o){Vi===null?Vi=[o]:Vi.push(o)}function Oy(o){rl=!0,xp(o)}function Pi(){if(!Hu&&Vi!==null){Hu=!0;var o=0,a=bt;try{var d=Vi;for(bt=1;o<d.length;o++){var g=d[o];do g=g(!0);while(g!==null)}Vi=null,rl=!1}catch(S){throw Vi!==null&&(Vi=Vi.slice(o+1)),zu(Bu,Pi),S}finally{bt=a,Hu=!1}}return null}var Fy=c.ReactCurrentBatchConfig;function sl(o,a){if(Ri(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var d=Object.keys(o),g=Object.keys(a);if(d.length!==g.length)return!1;for(g=0;g<d.length;g++){var S=d[g];if(!Vt.call(a,S)||!Ri(o[S],a[S]))return!1}return!0}function zy(o){switch(o.tag){case 5:return ut(o.type);case 16:return ut("Lazy");case 13:return ut("Suspense");case 19:return ut("SuspenseList");case 0:case 2:case 15:return o=ht(o.type,!1),o;case 11:return o=ht(o.type.render,!1),o;case 1:return o=ht(o.type,!0),o;default:return""}}function pi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var d in o)a[d]===void 0&&(a[d]=o[d]);return a}return a}var ol=hn(null),al=null,Rs=null,Vu=null;function Gu(){Vu=Rs=al=null}function Sp(o,a,d){We?(He(ol,a._currentValue),a._currentValue=d):(He(ol,a._currentValue2),a._currentValue2=d)}function Wu(o){var a=ol.current;at(ol),We?o._currentValue=a:o._currentValue2=a}function Xu(o,a,d){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===d)break;o=o.return}}function Ps(o,a){al=o,Vu=Rs=null,o=o.dependencies,o!==null&&o.firstContext!==null&&((o.lanes&a)!==0&&(Jn=!0),o.firstContext=null)}function si(o){var a=We?o._currentValue:o._currentValue2;if(Vu!==o)if(o={context:o,memoizedValue:a,next:null},Rs===null){if(al===null)throw Error(l(308));Rs=o,al.dependencies={lanes:0,firstContext:o}}else Rs=Rs.next=o;return a}var Li=null,cr=!1;function Yu(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Mp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Gi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function ur(o,a){var d=o.updateQueue;d!==null&&(d=d.shared,nn!==null&&(o.mode&1)!==0&&(Mt&2)===0?(o=d.interleaved,o===null?(a.next=a,Li===null?Li=[d]:Li.push(d)):(a.next=o.next,o.next=a),d.interleaved=a):(o=d.pending,o===null?a.next=a:(a.next=o.next,o.next=a),d.pending=a))}function ll(o,a,d){if(a=a.updateQueue,a!==null&&(a=a.shared,(d&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,d|=g,a.lanes=d,Fu(o,d)}}function Ep(o,a){var d=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,d===g)){var S=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var U={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?S=T=U:T=T.next=U,d=d.next}while(d!==null);T===null?S=T=a:T=T.next=a}else S=T=a;d={baseState:g.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=a:o.next=a,d.lastBaseUpdate=a}function cl(o,a,d,g){var S=o.updateQueue;cr=!1;var T=S.firstBaseUpdate,U=S.lastBaseUpdate,G=S.shared.pending;if(G!==null){S.shared.pending=null;var le=G,Te=le.next;le.next=null,U===null?T=Te:U.next=Te,U=le;var Ve=o.alternate;Ve!==null&&(Ve=Ve.updateQueue,G=Ve.lastBaseUpdate,G!==U&&(G===null?Ve.firstBaseUpdate=Te:G.next=Te,Ve.lastBaseUpdate=le))}if(T!==null){var ft=S.baseState;U=0,Ve=Te=le=null,G=T;do{var et=G.lane,Ot=G.eventTime;if((g&et)===et){Ve!==null&&(Ve=Ve.next={eventTime:Ot,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var Qe=o,Tn=G;switch(et=a,Ot=d,Tn.tag){case 1:if(Qe=Tn.payload,typeof Qe=="function"){ft=Qe.call(Ot,ft,et);break e}ft=Qe;break e;case 3:Qe.flags=Qe.flags&-65537|128;case 0:if(Qe=Tn.payload,et=typeof Qe=="function"?Qe.call(Ot,ft,et):Qe,et==null)break e;ft=s({},ft,et);break e;case 2:cr=!0}}G.callback!==null&&G.lane!==0&&(o.flags|=64,et=S.effects,et===null?S.effects=[G]:et.push(G))}else Ot={eventTime:Ot,lane:et,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ve===null?(Te=Ve=Ot,le=ft):Ve=Ve.next=Ot,U|=et;if(G=G.next,G===null){if(G=S.shared.pending,G===null)break;et=G,G=et.next,et.next=null,S.lastBaseUpdate=et,S.shared.pending=null}}while(!0);if(Ve===null&&(le=ft),S.baseState=le,S.firstBaseUpdate=Te,S.lastBaseUpdate=Ve,a=S.shared.interleaved,a!==null){S=a;do U|=S.lane,S=S.next;while(S!==a)}else T===null&&(S.shared.lanes=0);Bs|=U,o.lanes=U,o.memoizedState=ft}}function wp(o,a,d){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],S=g.callback;if(S!==null){if(g.callback=null,g=d,typeof S!="function")throw Error(l(191,S));S.call(g)}}}var Tp=new n.Component().refs;function qu(o,a,d,g){a=o.memoizedState,d=d(g,a),d=d==null?a:s({},a,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var ul={isMounted:function(o){return(o=o._reactInternals)?b(o)===o:!1},enqueueSetState:function(o,a,d){o=o._reactInternals;var g=Dn(),S=dr(o),T=Gi(g,S);T.payload=a,d!=null&&(T.callback=d),ur(o,T),a=ui(o,S,g),a!==null&&ll(a,o,S)},enqueueReplaceState:function(o,a,d){o=o._reactInternals;var g=Dn(),S=dr(o),T=Gi(g,S);T.tag=1,T.payload=a,d!=null&&(T.callback=d),ur(o,T),a=ui(o,S,g),a!==null&&ll(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var d=Dn(),g=dr(o),S=Gi(d,g);S.tag=2,a!=null&&(S.callback=a),ur(o,S),a=ui(o,g,d),a!==null&&ll(a,o,g)}};function Ap(o,a,d,g,S,T,U){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,U):a.prototype&&a.prototype.isPureReactComponent?!sl(d,g)||!sl(S,T):!0}function bp(o,a,d){var g=!1,S=ii,T=a.contextType;return typeof T=="object"&&T!==null?T=si(T):(S=fn(a)?Ai:St.current,g=a.contextTypes,T=(g=g!=null)?ri(o,S):ii),a=new a(d,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=ul,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=T),a}function Cp(o,a,d,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(d,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(d,g),a.state!==o&&ul.enqueueReplaceState(a,a.state,null)}function Zu(o,a,d,g){var S=o.stateNode;S.props=d,S.state=o.memoizedState,S.refs=Tp,Yu(o);var T=a.contextType;typeof T=="object"&&T!==null?S.context=si(T):(T=fn(a)?Ai:St.current,S.context=ri(o,T)),S.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(qu(o,a,T,d),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&ul.enqueueReplaceState(S,S.state,null),cl(o,d,S,g),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var Ls=[],Is=0,hl=null,fl=0,oi=[],ai=0,zr=null,Wi=1,Xi="";function Br(o,a){Ls[Is++]=fl,Ls[Is++]=hl,hl=o,fl=a}function Rp(o,a,d){oi[ai++]=Wi,oi[ai++]=Xi,oi[ai++]=zr,zr=o;var g=Wi;o=Xi;var S=32-qn(g)-1;g&=~(1<<S),d+=1;var T=32-qn(a)+S;if(30<T){var U=S-S%5;T=(g&(1<<U)-1).toString(32),g>>=U,S-=U,Wi=1<<32-qn(a)+S|d<<S|g,Xi=T+o}else Wi=1<<T|d<<S|g,Xi=o}function ju(o){o.return!==null&&(Br(o,1),Rp(o,1,0))}function Ju(o){for(;o===hl;)hl=Ls[--Is],Ls[Is]=null,fl=Ls[--Is],Ls[Is]=null;for(;o===zr;)zr=oi[--ai],oi[ai]=null,Xi=oi[--ai],oi[ai]=null,Wi=oi[--ai],oi[ai]=null}var Zn=null,jn=null,kt=!1,No=!1,mi=null;function Pp(o,a){var d=hi(5,null,null,0);d.elementType="DELETED",d.stateNode=a,d.return=o,a=o.deletions,a===null?(o.deletions=[d],o.flags|=16):a.push(d)}function Lp(o,a){switch(o.tag){case 5:return a=Tt(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,Zn=o,jn=As(a),!0):!1;case 6:return a=_n(a,o.pendingProps),a!==null?(o.stateNode=a,Zn=o,jn=null,!0):!1;case 13:if(a=ni(a),a!==null){var d=zr!==null?{id:Wi,overflow:Xi}:null;return o.memoizedState={dehydrated:a,treeContext:d,retryLane:1073741824},d=hi(18,null,null,0),d.stateNode=a,d.return=o,o.child=d,Zn=o,jn=null,!0}return!1;default:return!1}}function Ku(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Qu(o){if(kt){var a=jn;if(a){var d=a;if(!Lp(o,a)){if(Ku(o))throw Error(l(418));a=lr(d);var g=Zn;a&&Lp(o,a)?Pp(g,d):(o.flags=o.flags&-4097|2,kt=!1,Zn=o)}}else{if(Ku(o))throw Error(l(418));o.flags=o.flags&-4097|2,kt=!1,Zn=o}}}function Ip(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Zn=o}function Uo(o){if(!ve||o!==Zn)return!1;if(!kt)return Ip(o),kt=!0,!1;if(o.tag!==3&&(o.tag!==5||Be(o.type)&&!Ce(o.type,o.memoizedProps))){var a=jn;if(a){if(Ku(o)){for(o=jn;o;)o=lr(o);throw Error(l(418))}for(;a;)Pp(o,a),a=lr(a)}}if(Ip(o),o.tag===13){if(!ve)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));jn=I(o)}else jn=Zn?lr(o.stateNode):null;return!0}function Ds(){ve&&(jn=Zn=null,No=kt=!1)}function $u(o){mi===null?mi=[o]:mi.push(o)}function Oo(o,a,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(l(309));var g=d.stateNode}if(!g)throw Error(l(147,o));var S=g,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(U){var G=S.refs;G===Tp&&(G=S.refs={}),U===null?delete G[T]:G[T]=U},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!d._owner)throw Error(l(290,o))}return o}function dl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function Dp(o){var a=o._init;return a(o._payload)}function Np(o){function a(K,W){if(o){var ie=K.deletions;ie===null?(K.deletions=[W],K.flags|=16):ie.push(W)}}function d(K,W){if(!o)return null;for(;W!==null;)a(K,W),W=W.sibling;return null}function g(K,W){for(K=new Map;W!==null;)W.key!==null?K.set(W.key,W):K.set(W.index,W),W=W.sibling;return K}function S(K,W){return K=mr(K,W),K.index=0,K.sibling=null,K}function T(K,W,ie){return K.index=ie,o?(ie=K.alternate,ie!==null?(ie=ie.index,ie<W?(K.flags|=2,W):ie):(K.flags|=2,W)):(K.flags|=1048576,W)}function U(K){return o&&K.alternate===null&&(K.flags|=2),K}function G(K,W,ie,Oe){return W===null||W.tag!==6?(W=Oh(ie,K.mode,Oe),W.return=K,W):(W=S(W,ie),W.return=K,W)}function le(K,W,ie,Oe){var je=ie.type;return je===f?Ve(K,W,ie.props.children,Oe,ie.key):W!==null&&(W.elementType===je||typeof je=="object"&&je!==null&&je.$$typeof===E&&Dp(je)===W.type)?(Oe=S(W,ie.props),Oe.ref=Oo(K,W,ie),Oe.return=K,Oe):(Oe=Wl(ie.type,ie.key,ie.props,null,K.mode,Oe),Oe.ref=Oo(K,W,ie),Oe.return=K,Oe)}function Te(K,W,ie,Oe){return W===null||W.tag!==4||W.stateNode.containerInfo!==ie.containerInfo||W.stateNode.implementation!==ie.implementation?(W=Fh(ie,K.mode,Oe),W.return=K,W):(W=S(W,ie.children||[]),W.return=K,W)}function Ve(K,W,ie,Oe,je){return W===null||W.tag!==7?(W=Yr(ie,K.mode,Oe,je),W.return=K,W):(W=S(W,ie),W.return=K,W)}function ft(K,W,ie){if(typeof W=="string"&&W!==""||typeof W=="number")return W=Oh(""+W,K.mode,ie),W.return=K,W;if(typeof W=="object"&&W!==null){switch(W.$$typeof){case u:return ie=Wl(W.type,W.key,W.props,null,K.mode,ie),ie.ref=Oo(K,null,W),ie.return=K,ie;case h:return W=Fh(W,K.mode,ie),W.return=K,W;case E:var Oe=W._init;return ft(K,Oe(W._payload),ie)}if(Q(W)||R(W))return W=Yr(W,K.mode,ie,null),W.return=K,W;dl(K,W)}return null}function et(K,W,ie,Oe){var je=W!==null?W.key:null;if(typeof ie=="string"&&ie!==""||typeof ie=="number")return je!==null?null:G(K,W,""+ie,Oe);if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:return ie.key===je?le(K,W,ie,Oe):null;case h:return ie.key===je?Te(K,W,ie,Oe):null;case E:return je=ie._init,et(K,W,je(ie._payload),Oe)}if(Q(ie)||R(ie))return je!==null?null:Ve(K,W,ie,Oe,null);dl(K,ie)}return null}function Ot(K,W,ie,Oe,je){if(typeof Oe=="string"&&Oe!==""||typeof Oe=="number")return K=K.get(ie)||null,G(W,K,""+Oe,je);if(typeof Oe=="object"&&Oe!==null){switch(Oe.$$typeof){case u:return K=K.get(Oe.key===null?ie:Oe.key)||null,le(W,K,Oe,je);case h:return K=K.get(Oe.key===null?ie:Oe.key)||null,Te(W,K,Oe,je);case E:var vt=Oe._init;return Ot(K,W,ie,vt(Oe._payload),je)}if(Q(Oe)||R(Oe))return K=K.get(ie)||null,Ve(W,K,Oe,je,null);dl(W,Oe)}return null}function Qe(K,W,ie,Oe){for(var je=null,vt=null,dt=W,Ct=W=0,mn=null;dt!==null&&Ct<ie.length;Ct++){dt.index>Ct?(mn=dt,dt=null):mn=dt.sibling;var Rt=et(K,dt,ie[Ct],Oe);if(Rt===null){dt===null&&(dt=mn);break}o&&dt&&Rt.alternate===null&&a(K,dt),W=T(Rt,W,Ct),vt===null?je=Rt:vt.sibling=Rt,vt=Rt,dt=mn}if(Ct===ie.length)return d(K,dt),kt&&Br(K,Ct),je;if(dt===null){for(;Ct<ie.length;Ct++)dt=ft(K,ie[Ct],Oe),dt!==null&&(W=T(dt,W,Ct),vt===null?je=dt:vt.sibling=dt,vt=dt);return kt&&Br(K,Ct),je}for(dt=g(K,dt);Ct<ie.length;Ct++)mn=Ot(dt,K,Ct,ie[Ct],Oe),mn!==null&&(o&&mn.alternate!==null&&dt.delete(mn.key===null?Ct:mn.key),W=T(mn,W,Ct),vt===null?je=mn:vt.sibling=mn,vt=mn);return o&&dt.forEach(function(gr){return a(K,gr)}),kt&&Br(K,Ct),je}function Tn(K,W,ie,Oe){var je=R(ie);if(typeof je!="function")throw Error(l(150));if(ie=je.call(ie),ie==null)throw Error(l(151));for(var vt=je=null,dt=W,Ct=W=0,mn=null,Rt=ie.next();dt!==null&&!Rt.done;Ct++,Rt=ie.next()){dt.index>Ct?(mn=dt,dt=null):mn=dt.sibling;var gr=et(K,dt,Rt.value,Oe);if(gr===null){dt===null&&(dt=mn);break}o&&dt&&gr.alternate===null&&a(K,dt),W=T(gr,W,Ct),vt===null?je=gr:vt.sibling=gr,vt=gr,dt=mn}if(Rt.done)return d(K,dt),kt&&Br(K,Ct),je;if(dt===null){for(;!Rt.done;Ct++,Rt=ie.next())Rt=ft(K,Rt.value,Oe),Rt!==null&&(W=T(Rt,W,Ct),vt===null?je=Rt:vt.sibling=Rt,vt=Rt);return kt&&Br(K,Ct),je}for(dt=g(K,dt);!Rt.done;Ct++,Rt=ie.next())Rt=Ot(dt,K,Ct,Rt.value,Oe),Rt!==null&&(o&&Rt.alternate!==null&&dt.delete(Rt.key===null?Ct:Rt.key),W=T(Rt,W,Ct),vt===null?je=Rt:vt.sibling=Rt,vt=Rt);return o&&dt.forEach(function(px){return a(K,px)}),kt&&Br(K,Ct),je}function fi(K,W,ie,Oe){if(typeof ie=="object"&&ie!==null&&ie.type===f&&ie.key===null&&(ie=ie.props.children),typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:e:{for(var je=ie.key,vt=W;vt!==null;){if(vt.key===je){if(je=ie.type,je===f){if(vt.tag===7){d(K,vt.sibling),W=S(vt,ie.props.children),W.return=K,K=W;break e}}else if(vt.elementType===je||typeof je=="object"&&je!==null&&je.$$typeof===E&&Dp(je)===vt.type){d(K,vt.sibling),W=S(vt,ie.props),W.ref=Oo(K,vt,ie),W.return=K,K=W;break e}d(K,vt);break}else a(K,vt);vt=vt.sibling}ie.type===f?(W=Yr(ie.props.children,K.mode,Oe,ie.key),W.return=K,K=W):(Oe=Wl(ie.type,ie.key,ie.props,null,K.mode,Oe),Oe.ref=Oo(K,W,ie),Oe.return=K,K=Oe)}return U(K);case h:e:{for(vt=ie.key;W!==null;){if(W.key===vt)if(W.tag===4&&W.stateNode.containerInfo===ie.containerInfo&&W.stateNode.implementation===ie.implementation){d(K,W.sibling),W=S(W,ie.children||[]),W.return=K,K=W;break e}else{d(K,W);break}else a(K,W);W=W.sibling}W=Fh(ie,K.mode,Oe),W.return=K,K=W}return U(K);case E:return vt=ie._init,fi(K,W,vt(ie._payload),Oe)}if(Q(ie))return Qe(K,W,ie,Oe);if(R(ie))return Tn(K,W,ie,Oe);dl(K,ie)}return typeof ie=="string"&&ie!==""||typeof ie=="number"?(ie=""+ie,W!==null&&W.tag===6?(d(K,W.sibling),W=S(W,ie),W.return=K,K=W):(d(K,W),W=Oh(ie,K.mode,Oe),W.return=K,K=W),U(K)):d(K,W)}return fi}var Ns=Np(!0),Up=Np(!1),Fo={},li=hn(Fo),zo=hn(Fo),Us=hn(Fo);function Ii(o){if(o===Fo)throw Error(l(174));return o}function eh(o,a){He(Us,a),He(zo,o),He(li,Fo),o=se(a),at(li),He(li,o)}function Os(){at(li),at(zo),at(Us)}function Op(o){var a=Ii(Us.current),d=Ii(li.current);a=X(d,o.type,a),d!==a&&(He(zo,o),He(li,a))}function th(o){zo.current===o&&(at(li),at(zo))}var Gt=hn(0);function pl(o){for(var a=o;a!==null;){if(a.tag===13){var d=a.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||Po(d)||Lo(d)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if((a.flags&128)!==0)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var nh=[];function ih(){for(var o=0;o<nh.length;o++){var a=nh[o];We?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}nh.length=0}var ml=c.ReactCurrentDispatcher,ci=c.ReactCurrentBatchConfig,Fs=0,Yt=null,Mn=null,pn=null,gl=!1,Bo=!1,ko=0,By=0;function En(){throw Error(l(321))}function rh(o,a){if(a===null)return!1;for(var d=0;d<a.length&&d<o.length;d++)if(!Ri(o[d],a[d]))return!1;return!0}function sh(o,a,d,g,S,T){if(Fs=T,Yt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,ml.current=o===null||o.memoizedState===null?Gy:Wy,o=d(g,S),Bo){T=0;do{if(Bo=!1,ko=0,25<=T)throw Error(l(301));T+=1,pn=Mn=null,a.updateQueue=null,ml.current=Xy,o=d(g,S)}while(Bo)}if(ml.current=Sl,a=Mn!==null&&Mn.next!==null,Fs=0,pn=Mn=Yt=null,gl=!1,a)throw Error(l(300));return o}function oh(){var o=ko!==0;return ko=0,o}function Yi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return pn===null?Yt.memoizedState=pn=o:pn=pn.next=o,pn}function Di(){if(Mn===null){var o=Yt.alternate;o=o!==null?o.memoizedState:null}else o=Mn.next;var a=pn===null?Yt.memoizedState:pn.next;if(a!==null)pn=a,Mn=o;else{if(o===null)throw Error(l(310));Mn=o,o={memoizedState:Mn.memoizedState,baseState:Mn.baseState,baseQueue:Mn.baseQueue,queue:Mn.queue,next:null},pn===null?Yt.memoizedState=pn=o:pn=pn.next=o}return pn}function kr(o,a){return typeof a=="function"?a(o):a}function _l(o){var a=Di(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var g=Mn,S=g.baseQueue,T=d.pending;if(T!==null){if(S!==null){var U=S.next;S.next=T.next,T.next=U}g.baseQueue=S=T,d.pending=null}if(S!==null){T=S.next,g=g.baseState;var G=U=null,le=null,Te=T;do{var Ve=Te.lane;if((Fs&Ve)===Ve)le!==null&&(le=le.next={lane:0,action:Te.action,hasEagerState:Te.hasEagerState,eagerState:Te.eagerState,next:null}),g=Te.hasEagerState?Te.eagerState:o(g,Te.action);else{var ft={lane:Ve,action:Te.action,hasEagerState:Te.hasEagerState,eagerState:Te.eagerState,next:null};le===null?(G=le=ft,U=g):le=le.next=ft,Yt.lanes|=Ve,Bs|=Ve}Te=Te.next}while(Te!==null&&Te!==T);le===null?U=g:le.next=G,Ri(g,a.memoizedState)||(Jn=!0),a.memoizedState=g,a.baseState=U,a.baseQueue=le,d.lastRenderedState=g}if(o=d.interleaved,o!==null){S=o;do T=S.lane,Yt.lanes|=T,Bs|=T,S=S.next;while(S!==o)}else S===null&&(d.lanes=0);return[a.memoizedState,d.dispatch]}function vl(o){var a=Di(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var g=d.dispatch,S=d.pending,T=a.memoizedState;if(S!==null){d.pending=null;var U=S=S.next;do T=o(T,U.action),U=U.next;while(U!==S);Ri(T,a.memoizedState)||(Jn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),d.lastRenderedState=T}return[T,g]}function Fp(){}function zp(o,a){var d=Yt,g=Di(),S=a(),T=!Ri(g.memoizedState,S);if(T&&(g.memoizedState=S,Jn=!0),g=g.queue,Vo(Hp.bind(null,d,g,o),[o]),g.getSnapshot!==a||T||pn!==null&&pn.memoizedState.tag&1){if(d.flags|=2048,Ho(9,kp.bind(null,d,g,S,a),void 0,null),nn===null)throw Error(l(349));(Fs&30)!==0||Bp(d,a,S)}return S}function Bp(o,a,d){o.flags|=16384,o={getSnapshot:a,value:d},a=Yt.updateQueue,a===null?(a={lastEffect:null,stores:null},Yt.updateQueue=a,a.stores=[o]):(d=a.stores,d===null?a.stores=[o]:d.push(o))}function kp(o,a,d,g){a.value=d,a.getSnapshot=g,Vp(a)&&ui(o,1,-1)}function Hp(o,a,d){return d(function(){Vp(a)&&ui(o,1,-1)})}function Vp(o){var a=o.getSnapshot;o=o.value;try{var d=a();return!Ri(o,d)}catch{return!0}}function ah(o){var a=Yi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:kr,lastRenderedState:o},a.queue=o,o=o.dispatch=Vy.bind(null,Yt,o),[a.memoizedState,o]}function Ho(o,a,d,g){return o={tag:o,create:a,destroy:d,deps:g,next:null},a=Yt.updateQueue,a===null?(a={lastEffect:null,stores:null},Yt.updateQueue=a,a.lastEffect=o.next=o):(d=a.lastEffect,d===null?a.lastEffect=o.next=o:(g=d.next,d.next=o,o.next=g,a.lastEffect=o)),o}function Gp(){return Di().memoizedState}function yl(o,a,d,g){var S=Yi();Yt.flags|=o,S.memoizedState=Ho(1|a,d,void 0,g===void 0?null:g)}function xl(o,a,d,g){var S=Di();g=g===void 0?null:g;var T=void 0;if(Mn!==null){var U=Mn.memoizedState;if(T=U.destroy,g!==null&&rh(g,U.deps)){S.memoizedState=Ho(a,d,T,g);return}}Yt.flags|=o,S.memoizedState=Ho(1|a,d,T,g)}function lh(o,a){return yl(8390656,8,o,a)}function Vo(o,a){return xl(2048,8,o,a)}function Wp(o,a){return xl(4,2,o,a)}function Xp(o,a){return xl(4,4,o,a)}function Yp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function qp(o,a,d){return d=d!=null?d.concat([o]):null,xl(4,4,Yp.bind(null,a,o),d)}function ch(){}function Zp(o,a){var d=Di();a=a===void 0?null:a;var g=d.memoizedState;return g!==null&&a!==null&&rh(a,g[1])?g[0]:(d.memoizedState=[o,a],o)}function jp(o,a){var d=Di();a=a===void 0?null:a;var g=d.memoizedState;return g!==null&&a!==null&&rh(a,g[1])?g[0]:(o=o(),d.memoizedState=[o,a],o)}function ky(o,a){var d=bt;bt=d!==0&&4>d?d:4,o(!0);var g=ci.transition;ci.transition={};try{o(!1),a()}finally{bt=d,ci.transition=g}}function Jp(){return Di().memoizedState}function Hy(o,a,d){var g=dr(o);d={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null},Kp(o)?Qp(a,d):($p(o,a,d),d=Dn(),o=ui(o,g,d),o!==null&&em(o,a,g))}function Vy(o,a,d){var g=dr(o),S={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null};if(Kp(o))Qp(a,S);else{$p(o,a,S);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var U=a.lastRenderedState,G=T(U,d);if(S.hasEagerState=!0,S.eagerState=G,Ri(G,U))return}catch{}finally{}d=Dn(),o=ui(o,g,d),o!==null&&em(o,a,g)}}function Kp(o){var a=o.alternate;return o===Yt||a!==null&&a===Yt}function Qp(o,a){Bo=gl=!0;var d=o.pending;d===null?a.next=a:(a.next=d.next,d.next=a),o.pending=a}function $p(o,a,d){nn!==null&&(o.mode&1)!==0&&(Mt&2)===0?(o=a.interleaved,o===null?(d.next=d,Li===null?Li=[a]:Li.push(a)):(d.next=o.next,o.next=d),a.interleaved=d):(o=a.pending,o===null?d.next=d:(d.next=o.next,o.next=d),a.pending=d)}function em(o,a,d){if((d&4194240)!==0){var g=a.lanes;g&=o.pendingLanes,d|=g,a.lanes=d,Fu(o,d)}}var Sl={readContext:si,useCallback:En,useContext:En,useEffect:En,useImperativeHandle:En,useInsertionEffect:En,useLayoutEffect:En,useMemo:En,useReducer:En,useRef:En,useState:En,useDebugValue:En,useDeferredValue:En,useTransition:En,useMutableSource:En,useSyncExternalStore:En,useId:En,unstable_isNewReconciler:!1},Gy={readContext:si,useCallback:function(o,a){return Yi().memoizedState=[o,a===void 0?null:a],o},useContext:si,useEffect:lh,useImperativeHandle:function(o,a,d){return d=d!=null?d.concat([o]):null,yl(4194308,4,Yp.bind(null,a,o),d)},useLayoutEffect:function(o,a){return yl(4194308,4,o,a)},useInsertionEffect:function(o,a){return yl(4,2,o,a)},useMemo:function(o,a){var d=Yi();return a=a===void 0?null:a,o=o(),d.memoizedState=[o,a],o},useReducer:function(o,a,d){var g=Yi();return a=d!==void 0?d(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=Hy.bind(null,Yt,o),[g.memoizedState,o]},useRef:function(o){var a=Yi();return o={current:o},a.memoizedState=o},useState:ah,useDebugValue:ch,useDeferredValue:function(o){var a=ah(o),d=a[0],g=a[1];return lh(function(){var S=ci.transition;ci.transition={};try{g(o)}finally{ci.transition=S}},[o]),d},useTransition:function(){var o=ah(!1),a=o[0];return o=ky.bind(null,o[1]),Yi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,d){var g=Yt,S=Yi();if(kt){if(d===void 0)throw Error(l(407));d=d()}else{if(d=a(),nn===null)throw Error(l(349));(Fs&30)!==0||Bp(g,a,d)}S.memoizedState=d;var T={value:d,getSnapshot:a};return S.queue=T,lh(Hp.bind(null,g,T,o),[o]),g.flags|=2048,Ho(9,kp.bind(null,g,T,d,a),void 0,null),d},useId:function(){var o=Yi(),a=nn.identifierPrefix;if(kt){var d=Xi,g=Wi;d=(g&~(1<<32-qn(g)-1)).toString(32)+d,a=":"+a+"R"+d,d=ko++,0<d&&(a+="H"+d.toString(32)),a+=":"}else d=By++,a=":"+a+"r"+d.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},Wy={readContext:si,useCallback:Zp,useContext:si,useEffect:Vo,useImperativeHandle:qp,useInsertionEffect:Wp,useLayoutEffect:Xp,useMemo:jp,useReducer:_l,useRef:Gp,useState:function(){return _l(kr)},useDebugValue:ch,useDeferredValue:function(o){var a=_l(kr),d=a[0],g=a[1];return Vo(function(){var S=ci.transition;ci.transition={};try{g(o)}finally{ci.transition=S}},[o]),d},useTransition:function(){var o=_l(kr)[0],a=Di().memoizedState;return[o,a]},useMutableSource:Fp,useSyncExternalStore:zp,useId:Jp,unstable_isNewReconciler:!1},Xy={readContext:si,useCallback:Zp,useContext:si,useEffect:Vo,useImperativeHandle:qp,useInsertionEffect:Wp,useLayoutEffect:Xp,useMemo:jp,useReducer:vl,useRef:Gp,useState:function(){return vl(kr)},useDebugValue:ch,useDeferredValue:function(o){var a=vl(kr),d=a[0],g=a[1];return Vo(function(){var S=ci.transition;ci.transition={};try{g(o)}finally{ci.transition=S}},[o]),d},useTransition:function(){var o=vl(kr)[0],a=Di().memoizedState;return[o,a]},useMutableSource:Fp,useSyncExternalStore:zp,useId:Jp,unstable_isNewReconciler:!1};function uh(o,a){try{var d="",g=a;do d+=zy(g),g=g.return;while(g);var S=d}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:S}}function hh(o,a){try{console.error(a.value)}catch(d){setTimeout(function(){throw d})}}var Yy=typeof WeakMap=="function"?WeakMap:Map;function tm(o,a,d){d=Gi(-1,d),d.tag=3,d.payload={element:null};var g=a.value;return d.callback=function(){Fl||(Fl=!0,Rh=g),hh(o,a)},d}function nm(o,a,d){d=Gi(-1,d),d.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var S=a.value;d.payload=function(){return g(S)},d.callback=function(){hh(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){hh(o,a),typeof g!="function"&&(hr===null?hr=new Set([this]):hr.add(this));var U=a.stack;this.componentDidCatch(a.value,{componentStack:U!==null?U:""})}),d}function im(o,a,d){var g=o.pingCache;if(g===null){g=o.pingCache=new Yy;var S=new Set;g.set(a,S)}else S=g.get(a),S===void 0&&(S=new Set,g.set(a,S));S.has(d)||(S.add(d),o=ox.bind(null,o,a,d),a.then(o,o))}function rm(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function sm(o,a,d,g,S){return(o.mode&1)===0?(o===a?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(a=Gi(-1,1),a.tag=2,ur(d,a))),d.lanes|=1),o):(o.flags|=65536,o.lanes=S,o)}function Ni(o){o.flags|=4}function om(o,a){if(o!==null&&o.child===a.child)return!0;if((a.flags&16)!==0)return!1;for(o=a.child;o!==null;){if((o.flags&12854)!==0||(o.subtreeFlags&12854)!==0)return!1;o=o.sibling}return!0}var Go,Wo,Ml,El;if(Ge)Go=function(o,a){for(var d=a.child;d!==null;){if(d.tag===5||d.tag===6)me(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===a)break;for(;d.sibling===null;){if(d.return===null||d.return===a)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},Wo=function(){},Ml=function(o,a,d,g,S){if(o=o.memoizedProps,o!==g){var T=a.stateNode,U=Ii(li.current);d=de(T,d,o,g,S,U),(a.updateQueue=d)&&Ni(a)}},El=function(o,a,d,g){d!==g&&Ni(a)};else if(z){Go=function(o,a,d,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&g&&(T=Ut(T,S.type,S.memoizedProps,S)),me(o,T)}else if(S.tag===6)T=S.stateNode,d&&g&&(T=Bt(T,S.memoizedProps,S)),me(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Go(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var am=function(o,a,d,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&g&&(T=Ut(T,S.type,S.memoizedProps,S)),xe(o,T)}else if(S.tag===6)T=S.stateNode,d&&g&&(T=Bt(T,S.memoizedProps,S)),xe(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),am(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};Wo=function(o,a){var d=a.stateNode;if(!om(o,a)){o=d.containerInfo;var g=ue(o);am(g,a,!1,!1),d.pendingChildren=g,Ni(a),Ze(o,g)}},Ml=function(o,a,d,g,S){var T=o.stateNode,U=o.memoizedProps;if((o=om(o,a))&&U===g)a.stateNode=T;else{var G=a.stateNode,le=Ii(li.current),Te=null;U!==g&&(Te=de(G,d,U,g,S,le)),o&&Te===null?a.stateNode=T:(T=we(T,Te,d,U,g,a,o,G),J(T,d,g,S,le)&&Ni(a),a.stateNode=T,o?Ni(a):Go(T,a,!1,!1))}},El=function(o,a,d,g){d!==g?(o=Ii(Us.current),d=Ii(li.current),a.stateNode=Fe(g,o,d,a),Ni(a)):a.stateNode=o.stateNode}}else Wo=function(){},Ml=function(){},El=function(){};function Xo(o,a){if(!kt)switch(o.tailMode){case"hidden":a=o.tail;for(var d=null;a!==null;)a.alternate!==null&&(d=a),a=a.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var g=null;d!==null;)d.alternate!==null&&(g=d),d=d.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function wn(o){var a=o.alternate!==null&&o.alternate.child===o.child,d=0,g=0;if(a)for(var S=o.child;S!==null;)d|=S.lanes|S.childLanes,g|=S.subtreeFlags&14680064,g|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)d|=S.lanes|S.childLanes,g|=S.subtreeFlags,g|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=g,o.childLanes=d,a}function qy(o,a,d){var g=a.pendingProps;switch(Ju(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return wn(a),null;case 1:return fn(a.type)&&Jt(),wn(a),null;case 3:return g=a.stateNode,Os(),at(Xt),at(St),ih(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Uo(a)?Ni(a):o===null||o.memoizedState.isDehydrated&&(a.flags&256)===0||(a.flags|=1024,mi!==null&&(Ih(mi),mi=null))),Wo(o,a),wn(a),null;case 5:th(a),d=Ii(Us.current);var S=a.type;if(o!==null&&a.stateNode!=null)Ml(o,a,S,g,d),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return wn(a),null}if(o=Ii(li.current),Uo(a)){if(!ve)throw Error(l(175));o=Iu(a.stateNode,a.type,a.memoizedProps,d,o,a,!No),a.updateQueue=o,o!==null&&Ni(a)}else{var T=ee(S,g,d,o,a);Go(T,a,!1,!1),a.stateNode=T,J(T,S,g,d,o)&&Ni(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return wn(a),null;case 6:if(o&&a.stateNode!=null)El(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=Ii(Us.current),d=Ii(li.current),Uo(a)){if(!ve)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(d=Du(o,g,a,!No))&&(S=Zn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:Ke(S.stateNode.containerInfo,o,g,T);break;case 5:it(S.type,S.memoizedProps,S.stateNode,o,g,T)}d&&Ni(a)}else a.stateNode=Fe(g,o,d,a)}return wn(a),null;case 13:if(at(Gt),g=a.memoizedState,kt&&jn!==null&&(a.mode&1)!==0&&(a.flags&128)===0){for(o=jn;o;)o=lr(o);return Ds(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Uo(a),o===null){if(!g)throw Error(l(318));if(!ve)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Nu(o,a)}else Ds(),(a.flags&128)===0&&(a.memoizedState=null),a.flags|=4;return wn(a),null}return mi!==null&&(Ih(mi),mi=null),(a.flags&128)!==0?(a.lanes=d,a):(g=g!==null,d=!1,o===null?Uo(a):d=o.memoizedState!==null,g&&!d&&(a.child.flags|=8192,(a.mode&1)!==0&&(o===null||(Gt.current&1)!==0?on===0&&(on=3):Nh())),a.updateQueue!==null&&(a.flags|=4),wn(a),null);case 4:return Os(),Wo(o,a),o===null&&Ae(a.stateNode.containerInfo),wn(a),null;case 10:return Wu(a.type._context),wn(a),null;case 17:return fn(a.type)&&Jt(),wn(a),null;case 19:if(at(Gt),S=a.memoizedState,S===null)return wn(a),null;if(g=(a.flags&128)!==0,T=S.rendering,T===null)if(g)Xo(S,!1);else{if(on!==0||o!==null&&(o.flags&128)!==0)for(o=a.child;o!==null;){if(T=pl(o),T!==null){for(a.flags|=128,Xo(S,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=d,g=a.child;g!==null;)d=g,S=o,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,S=T.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),g=g.sibling;return He(Gt,Gt.current&1|2),a.child}o=o.sibling}S.tail!==null&&dn()>Ch&&(a.flags|=128,g=!0,Xo(S,!1),a.lanes=4194304)}else{if(!g)if(o=pl(T),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),Xo(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!kt)return wn(a),null}else 2*dn()-S.renderingStartTime>Ch&&d!==1073741824&&(a.flags|=128,g=!0,Xo(S,!1),a.lanes=4194304);S.isBackwards?(T.sibling=a.child,a.child=T):(o=S.last,o!==null?o.sibling=T:a.child=T,S.last=T)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=dn(),a.sibling=null,o=Gt.current,He(Gt,g?o&1|2:o&1),a):(wn(a),null);case 22:case 23:return Dh(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&(a.mode&1)!==0?(Kn&1073741824)!==0&&(wn(a),Ge&&a.subtreeFlags&6&&(a.flags|=8192)):wn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Zy=c.ReactCurrentOwner,Jn=!1;function In(o,a,d,g){a.child=o===null?Up(a,null,d,g):Ns(a,o.child,d,g)}function lm(o,a,d,g,S){d=d.render;var T=a.ref;return Ps(a,S),g=sh(o,a,d,g,T,S),d=oh(),o!==null&&!Jn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,qi(o,a,S)):(kt&&d&&ju(a),a.flags|=1,In(o,a,g,S),a.child)}function cm(o,a,d,g,S){if(o===null){var T=d.type;return typeof T=="function"&&!Uh(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(a.tag=15,a.type=T,um(o,a,T,g,S)):(o=Wl(d.type,null,g,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,(o.lanes&S)===0){var U=T.memoizedProps;if(d=d.compare,d=d!==null?d:sl,d(U,g)&&o.ref===a.ref)return qi(o,a,S)}return a.flags|=1,o=mr(T,g),o.ref=a.ref,o.return=a,a.child=o}function um(o,a,d,g,S){if(o!==null&&sl(o.memoizedProps,g)&&o.ref===a.ref)if(Jn=!1,(o.lanes&S)!==0)(o.flags&131072)!==0&&(Jn=!0);else return a.lanes=o.lanes,qi(o,a,S);return fh(o,a,d,g,S)}function hm(o,a,d){var g=a.pendingProps,S=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if((a.mode&1)===0)a.memoizedState={baseLanes:0,cachePool:null},He(zs,Kn),Kn|=d;else if((d&1073741824)!==0)a.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:d,He(zs,Kn),Kn|=g;else return o=T!==null?T.baseLanes|d:d,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,He(zs,Kn),Kn|=o,null;else T!==null?(g=T.baseLanes|d,a.memoizedState=null):g=d,He(zs,Kn),Kn|=g;return In(o,a,S,d),a.child}function fm(o,a){var d=a.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(a.flags|=512,a.flags|=2097152)}function fh(o,a,d,g,S){var T=fn(d)?Ai:St.current;return T=ri(a,T),Ps(a,S),d=sh(o,a,d,g,T,S),g=oh(),o!==null&&!Jn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,qi(o,a,S)):(kt&&g&&ju(a),a.flags|=1,In(o,a,d,S),a.child)}function dm(o,a,d,g,S){if(fn(d)){var T=!0;yn(a)}else T=!1;if(Ps(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),bp(a,d,g),Zu(a,d,g,S),g=!0;else if(o===null){var U=a.stateNode,G=a.memoizedProps;U.props=G;var le=U.context,Te=d.contextType;typeof Te=="object"&&Te!==null?Te=si(Te):(Te=fn(d)?Ai:St.current,Te=ri(a,Te));var Ve=d.getDerivedStateFromProps,ft=typeof Ve=="function"||typeof U.getSnapshotBeforeUpdate=="function";ft||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(G!==g||le!==Te)&&Cp(a,U,g,Te),cr=!1;var et=a.memoizedState;U.state=et,cl(a,g,U,S),le=a.memoizedState,G!==g||et!==le||Xt.current||cr?(typeof Ve=="function"&&(qu(a,d,Ve,g),le=a.memoizedState),(G=cr||Ap(a,d,G,g,et,le,Te))?(ft||typeof U.UNSAFE_componentWillMount!="function"&&typeof U.componentWillMount!="function"||(typeof U.componentWillMount=="function"&&U.componentWillMount(),typeof U.UNSAFE_componentWillMount=="function"&&U.UNSAFE_componentWillMount()),typeof U.componentDidMount=="function"&&(a.flags|=4194308)):(typeof U.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=le),U.props=g,U.state=le,U.context=Te,g=G):(typeof U.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{U=a.stateNode,Mp(o,a),G=a.memoizedProps,Te=a.type===a.elementType?G:pi(a.type,G),U.props=Te,ft=a.pendingProps,et=U.context,le=d.contextType,typeof le=="object"&&le!==null?le=si(le):(le=fn(d)?Ai:St.current,le=ri(a,le));var Ot=d.getDerivedStateFromProps;(Ve=typeof Ot=="function"||typeof U.getSnapshotBeforeUpdate=="function")||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(G!==ft||et!==le)&&Cp(a,U,g,le),cr=!1,et=a.memoizedState,U.state=et,cl(a,g,U,S);var Qe=a.memoizedState;G!==ft||et!==Qe||Xt.current||cr?(typeof Ot=="function"&&(qu(a,d,Ot,g),Qe=a.memoizedState),(Te=cr||Ap(a,d,Te,g,et,Qe,le)||!1)?(Ve||typeof U.UNSAFE_componentWillUpdate!="function"&&typeof U.componentWillUpdate!="function"||(typeof U.componentWillUpdate=="function"&&U.componentWillUpdate(g,Qe,le),typeof U.UNSAFE_componentWillUpdate=="function"&&U.UNSAFE_componentWillUpdate(g,Qe,le)),typeof U.componentDidUpdate=="function"&&(a.flags|=4),typeof U.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof U.componentDidUpdate!="function"||G===o.memoizedProps&&et===o.memoizedState||(a.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&et===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=Qe),U.props=g,U.state=Qe,U.context=le,g=Te):(typeof U.componentDidUpdate!="function"||G===o.memoizedProps&&et===o.memoizedState||(a.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&et===o.memoizedState||(a.flags|=1024),g=!1)}return dh(o,a,d,g,T,S)}function dh(o,a,d,g,S,T){fm(o,a);var U=(a.flags&128)!==0;if(!g&&!U)return S&&Cs(a,d,!1),qi(o,a,T);g=a.stateNode,Zy.current=a;var G=U&&typeof d.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&U?(a.child=Ns(a,o.child,null,T),a.child=Ns(a,null,G,T)):In(o,a,G,T),a.memoizedState=g.state,S&&Cs(a,d,!0),a.child}function pm(o){var a=o.stateNode;a.pendingContext?bi(o,a.pendingContext,a.pendingContext!==a.context):a.context&&bi(o,a.context,!1),eh(o,a.containerInfo)}function mm(o,a,d,g,S){return Ds(),$u(S),a.flags|=256,In(o,a,d,g),a.child}var wl={dehydrated:null,treeContext:null,retryLane:0};function Tl(o){return{baseLanes:o,cachePool:null}}function gm(o,a,d){var g=a.pendingProps,S=Gt.current,T=!1,U=(a.flags&128)!==0,G;if((G=U)||(G=o!==null&&o.memoizedState===null?!1:(S&2)!==0),G?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),He(Gt,S&1),o===null)return Qu(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?((a.mode&1)===0?a.lanes=1:Lo(o)?a.lanes=8:a.lanes=1073741824,null):(S=g.children,o=g.fallback,T?(g=a.mode,T=a.child,S={mode:"hidden",children:S},(g&1)===0&&T!==null?(T.childLanes=0,T.pendingProps=S):T=Xl(S,g,0,null),o=Yr(o,g,d,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=Tl(d),a.memoizedState=wl,o):ph(a,S));if(S=o.memoizedState,S!==null){if(G=S.dehydrated,G!==null){if(U)return a.flags&256?(a.flags&=-257,Al(o,a,d,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=g.fallback,S=a.mode,g=Xl({mode:"visible",children:g.children},S,0,null),T=Yr(T,S,d,null),T.flags|=2,g.return=a,T.return=a,g.sibling=T,a.child=g,(a.mode&1)!==0&&Ns(a,o.child,null,d),a.child.memoizedState=Tl(d),a.memoizedState=wl,T);if((a.mode&1)===0)a=Al(o,a,d,null);else if(Lo(G))a=Al(o,a,d,Error(l(419)));else if(g=(d&o.childLanes)!==0,Jn||g){if(g=nn,g!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=(T&(g.suspendedLanes|d))!==0?0:T,g!==0&&g!==S.retryLane&&(S.retryLane=g,ui(o,g,-1))}Nh(),a=Al(o,a,d,Error(l(421)))}else Po(G)?(a.flags|=128,a.child=o.child,a=ax.bind(null,o),Ts(G,a),a=null):(d=S.treeContext,ve&&(jn=Qa(G),Zn=a,kt=!0,mi=null,No=!1,d!==null&&(oi[ai++]=Wi,oi[ai++]=Xi,oi[ai++]=zr,Wi=d.id,Xi=d.overflow,zr=a)),a=ph(a,a.pendingProps.children),a.flags|=4096);return a}return T?(g=vm(o,a,g.children,g.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?Tl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=wl,g):(d=_m(o,a,g.children,d),a.memoizedState=null,d)}return T?(g=vm(o,a,g.children,g.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?Tl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=wl,g):(d=_m(o,a,g.children,d),a.memoizedState=null,d)}function ph(o,a){return a=Xl({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function _m(o,a,d,g){var S=o.child;return o=S.sibling,d=mr(S,{mode:"visible",children:d}),(a.mode&1)===0&&(d.lanes=g),d.return=a,d.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=d}function vm(o,a,d,g,S){var T=a.mode;o=o.child;var U=o.sibling,G={mode:"hidden",children:d};return(T&1)===0&&a.child!==o?(d=a.child,d.childLanes=0,d.pendingProps=G,a.deletions=null):(d=mr(o,G),d.subtreeFlags=o.subtreeFlags&14680064),U!==null?g=mr(U,g):(g=Yr(g,T,S,null),g.flags|=2),g.return=a,d.return=a,d.sibling=g,a.child=d,g}function Al(o,a,d,g){return g!==null&&$u(g),Ns(a,o.child,null,d),o=ph(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function ym(o,a,d){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),Xu(o.return,a,d)}function mh(o,a,d,g,S){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:d,tailMode:S}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=d,T.tailMode=S)}function xm(o,a,d){var g=a.pendingProps,S=g.revealOrder,T=g.tail;if(In(o,a,g.children,d),g=Gt.current,(g&2)!==0)g=g&1|2,a.flags|=128;else{if(o!==null&&(o.flags&128)!==0)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&ym(o,d,a);else if(o.tag===19)ym(o,d,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(He(Gt,g),(a.mode&1)===0)a.memoizedState=null;else switch(S){case"forwards":for(d=a.child,S=null;d!==null;)o=d.alternate,o!==null&&pl(o)===null&&(S=d),d=d.sibling;d=S,d===null?(S=a.child,a.child=null):(S=d.sibling,d.sibling=null),mh(a,!1,S,d,T);break;case"backwards":for(d=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&pl(o)===null){a.child=S;break}o=S.sibling,S.sibling=d,d=S,S=o}mh(a,!0,d,null,T);break;case"together":mh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function qi(o,a,d){if(o!==null&&(a.dependencies=o.dependencies),Bs|=a.lanes,(d&a.childLanes)===0)return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,d=mr(o,o.pendingProps),a.child=d,d.return=a;o.sibling!==null;)o=o.sibling,d=d.sibling=mr(o,o.pendingProps),d.return=a;d.sibling=null}return a.child}function jy(o,a,d){switch(a.tag){case 3:pm(a),Ds();break;case 5:Op(a);break;case 1:fn(a.type)&&yn(a);break;case 4:eh(a,a.stateNode.containerInfo);break;case 10:Sp(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(He(Gt,Gt.current&1),a.flags|=128,null):(d&a.child.childLanes)!==0?gm(o,a,d):(He(Gt,Gt.current&1),o=qi(o,a,d),o!==null?o.sibling:null);He(Gt,Gt.current&1);break;case 19:if(g=(d&a.childLanes)!==0,(o.flags&128)!==0){if(g)return xm(o,a,d);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),He(Gt,Gt.current),g)break;return null;case 22:case 23:return a.lanes=0,hm(o,a,d)}return qi(o,a,d)}function Jy(o,a){switch(Ju(a),a.tag){case 1:return fn(a.type)&&Jt(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Os(),at(Xt),at(St),ih(),o=a.flags,(o&65536)!==0&&(o&128)===0?(a.flags=o&-65537|128,a):null;case 5:return th(a),null;case 13:if(at(Gt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Ds()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return at(Gt),null;case 4:return Os(),null;case 10:return Wu(a.type._context),null;case 22:case 23:return Dh(),null;case 24:return null;default:return null}}var bl=!1,Hr=!1,Ky=typeof WeakSet=="function"?WeakSet:Set,De=null;function Cl(o,a){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(g){Vn(o,a,g)}else d.current=null}function gh(o,a,d){try{d()}catch(g){Vn(o,a,g)}}var Sm=!1;function Qy(o,a){for(Y(o.containerInfo),De=a;De!==null;)if(o=De,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,De=a;else for(;De!==null;){o=De;try{var d=o.alternate;if((o.flags&1024)!==0)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var g=d.memoizedProps,S=d.memoizedState,T=o.stateNode,U=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:pi(o.type,g),S);T.__reactInternalSnapshotBeforeUpdate=U}break;case 3:Ge&&Re(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(G){Vn(o,o.return,G)}if(a=o.sibling,a!==null){a.return=o.return,De=a;break}De=o.return}return d=Sm,Sm=!1,d}function Vr(o,a,d){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var S=g=g.next;do{if((S.tag&o)===o){var T=S.destroy;S.destroy=void 0,T!==void 0&&gh(a,d,T)}S=S.next}while(S!==g)}}function Yo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var d=a=a.next;do{if((d.tag&o)===o){var g=d.create;d.destroy=g()}d=d.next}while(d!==a)}}function _h(o){var a=o.ref;if(a!==null){var d=o.stateNode;switch(o.tag){case 5:o=oe(d);break;default:o=d}typeof a=="function"?a(o):a.current=o}}function Mm(o,a,d){if(Ci&&typeof Ci.onCommitFiberUnmount=="function")try{Ci.onCommitFiberUnmount(il,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var S=g,T=S.destroy;S=S.tag,T!==void 0&&((S&2)!==0||(S&4)!==0)&&gh(a,d,T),g=g.next}while(g!==o)}break;case 1:if(Cl(a,d),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(U){Vn(a,d,U)}break;case 5:Cl(a,d);break;case 4:Ge?Cm(o,a,d):z&&z&&(a=a.stateNode.containerInfo,d=ue(a),pt(a,d))}}function Em(o,a,d){for(var g=a;;)if(Mm(o,g,d),g.child===null||Ge&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function wm(o){var a=o.alternate;a!==null&&(o.alternate=null,wm(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&qe(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Tm(o){return o.tag===5||o.tag===3||o.tag===4}function Am(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Tm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function bm(o){if(Ge){e:{for(var a=o.return;a!==null;){if(Tm(a))break e;a=a.return}throw Error(l(160))}var d=a;switch(d.tag){case 5:a=d.stateNode,d.flags&32&&(ce(a),d.flags&=-33),d=Am(o),yh(o,d,a);break;case 3:case 4:a=d.stateNode.containerInfo,d=Am(o),vh(o,d,a);break;default:throw Error(l(161))}}}function vh(o,a,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Ee(d,o,a):Xe(d,o);else if(g!==4&&(o=o.child,o!==null))for(vh(o,a,d),o=o.sibling;o!==null;)vh(o,a,d),o=o.sibling}function yh(o,a,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Et(d,o,a):Se(d,o);else if(g!==4&&(o=o.child,o!==null))for(yh(o,a,d),o=o.sibling;o!==null;)yh(o,a,d),o=o.sibling}function Cm(o,a,d){for(var g=a,S=!1,T,U;;){if(!S){S=g.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:U=!1;break e;case 3:T=T.containerInfo,U=!0;break e;case 4:T=T.containerInfo,U=!0;break e}S=S.return}S=!0}if(g.tag===5||g.tag===6)Em(o,g,d),U?k(T,g.stateNode):wt(T,g.stateNode);else if(g.tag===18)U?te(T,g.stateNode):re(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,U=!0,g.child.return=g,g=g.child;continue}}else if(Mm(o,g,d),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(S=!1)}g.sibling.return=g.return,g=g.sibling}}function xh(o,a){if(Ge){switch(a.tag){case 0:case 11:case 14:case 15:Vr(3,a,a.return),Yo(3,a),Vr(5,a,a.return);return;case 1:return;case 5:var d=a.stateNode;if(d!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var S=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&st(d,T,S,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));d=a.memoizedProps,be(a.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:ve&&o!==null&&o.memoizedState.isDehydrated&&q(a.stateNode.containerInfo);return;case 12:return;case 13:Rl(a);return;case 19:Rl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Vr(3,a,a.return),Yo(3,a),Vr(5,a,a.return);return;case 12:return;case 13:Rl(a);return;case 19:Rl(a);return;case 3:ve&&o!==null&&o.memoizedState.isDehydrated&&q(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(z){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,pt(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Rl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new Ky),a.forEach(function(g){var S=lx.bind(null,o,g);d.has(g)||(d.add(g),g.then(S,S))})}}function $y(o,a){for(De=a;De!==null;){a=De;var d=a.deletions;if(d!==null)for(var g=0;g<d.length;g++){var S=d[g];try{var T=o;Ge?Cm(T,S,a):Em(T,S,a);var U=S.alternate;U!==null&&(U.return=null),S.return=null}catch(je){Vn(S,a,je)}}if(d=a.child,(a.subtreeFlags&12854)!==0&&d!==null)d.return=a,De=d;else for(;De!==null;){a=De;try{var G=a.flags;if(G&32&&Ge&&ce(a.stateNode),G&512){var le=a.alternate;if(le!==null){var Te=le.ref;Te!==null&&(typeof Te=="function"?Te(null):Te.current=null)}}if(G&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Ve=a.alternate;(Ve===null||Ve.memoizedState===null)&&(bh=dn())}break;case 22:var ft=a.memoizedState!==null,et=a.alternate,Ot=et!==null&&et.memoizedState!==null;if(d=a,Ge){e:if(g=d,S=ft,T=null,Ge)for(var Qe=g;;){if(Qe.tag===5){if(T===null){T=Qe;var Tn=Qe.stateNode;S?ge(Tn):Je(Qe.stateNode,Qe.memoizedProps)}}else if(Qe.tag===6){if(T===null){var fi=Qe.stateNode;S?ye(fi):V(fi,Qe.memoizedProps)}}else if((Qe.tag!==22&&Qe.tag!==23||Qe.memoizedState===null||Qe===g)&&Qe.child!==null){Qe.child.return=Qe,Qe=Qe.child;continue}if(Qe===g)break;for(;Qe.sibling===null;){if(Qe.return===null||Qe.return===g)break e;T===Qe&&(T=null),Qe=Qe.return}T===Qe&&(T=null),Qe.sibling.return=Qe.return,Qe=Qe.sibling}}if(ft&&!Ot&&(d.mode&1)!==0){De=d;for(var K=d.child;K!==null;){for(d=De=K;De!==null;){g=De;var W=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Vr(4,g,g.return);break;case 1:Cl(g,g.return);var ie=g.stateNode;if(typeof ie.componentWillUnmount=="function"){var Oe=g.return;try{ie.props=g.memoizedProps,ie.state=g.memoizedState,ie.componentWillUnmount()}catch(je){Vn(g,Oe,je)}}break;case 5:Cl(g,g.return);break;case 22:if(g.memoizedState!==null){Lm(d);continue}}W!==null?(W.return=g,De=W):Lm(d)}K=K.sibling}}}switch(G&4102){case 2:bm(a),a.flags&=-3;break;case 6:bm(a),a.flags&=-3,xh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,xh(a.alternate,a);break;case 4:xh(a.alternate,a)}}catch(je){Vn(a,a.return,je)}if(d=a.sibling,d!==null){d.return=a.return,De=d;break}De=a.return}}}function ex(o,a,d){De=o,Rm(o)}function Rm(o,a,d){for(var g=(o.mode&1)!==0;De!==null;){var S=De,T=S.child;if(S.tag===22&&g){var U=S.memoizedState!==null||bl;if(!U){var G=S.alternate,le=G!==null&&G.memoizedState!==null||Hr;G=bl;var Te=Hr;if(bl=U,(Hr=le)&&!Te)for(De=S;De!==null;)U=De,le=U.child,U.tag===22&&U.memoizedState!==null?Im(S):le!==null?(le.return=U,De=le):Im(S);for(;T!==null;)De=T,Rm(T),T=T.sibling;De=S,bl=G,Hr=Te}Pm(o)}else(S.subtreeFlags&8772)!==0&&T!==null?(T.return=S,De=T):Pm(o)}}function Pm(o){for(;De!==null;){var a=De;if((a.flags&8772)!==0){var d=a.alternate;try{if((a.flags&8772)!==0)switch(a.tag){case 0:case 11:case 15:Hr||Yo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!Hr)if(d===null)g.componentDidMount();else{var S=a.elementType===a.type?d.memoizedProps:pi(a.type,d.memoizedProps);g.componentDidUpdate(S,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&wp(a,T,g);break;case 3:var U=a.updateQueue;if(U!==null){if(d=null,a.child!==null)switch(a.child.tag){case 5:d=oe(a.child.stateNode);break;case 1:d=a.child.stateNode}wp(a,U,d)}break;case 5:var G=a.stateNode;d===null&&a.flags&4&&Ie(G,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(ve&&a.memoizedState===null){var le=a.alternate;if(le!==null){var Te=le.memoizedState;if(Te!==null){var Ve=Te.dehydrated;Ve!==null&&ne(Ve)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Hr||a.flags&512&&_h(a)}catch(ft){Vn(a,a.return,ft)}}if(a===o){De=null;break}if(d=a.sibling,d!==null){d.return=a.return,De=d;break}De=a.return}}function Lm(o){for(;De!==null;){var a=De;if(a===o){De=null;break}var d=a.sibling;if(d!==null){d.return=a.return,De=d;break}De=a.return}}function Im(o){for(;De!==null;){var a=De;try{switch(a.tag){case 0:case 11:case 15:var d=a.return;try{Yo(4,a)}catch(le){Vn(a,d,le)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var S=a.return;try{g.componentDidMount()}catch(le){Vn(a,S,le)}}var T=a.return;try{_h(a)}catch(le){Vn(a,T,le)}break;case 5:var U=a.return;try{_h(a)}catch(le){Vn(a,U,le)}}}catch(le){Vn(a,a.return,le)}if(a===o){De=null;break}var G=a.sibling;if(G!==null){G.return=a.return,De=G;break}De=a.return}}var Pl=0,Ll=1,Il=2,Dl=3,Nl=4;if(typeof Symbol=="function"&&Symbol.for){var qo=Symbol.for;Pl=qo("selector.component"),Ll=qo("selector.has_pseudo_class"),Il=qo("selector.role"),Dl=qo("selector.test_id"),Nl=qo("selector.text")}function Sh(o){var a=he(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=xt(o),o===null)throw Error(l(362));return o.stateNode.current}function Mh(o,a){switch(a.$$typeof){case Pl:if(o.type===a.value)return!0;break;case Ll:e:{a=a.value,o=[o,0];for(var d=0;d<o.length;){var g=o[d++],S=o[d++],T=a[S];if(g.tag!==5||!P(g)){for(;T!=null&&Mh(g,T);)S++,T=a[S];if(S===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,S),g=g.sibling}}a=!1}return a;case Il:if(o.tag===5&&$(o.stateNode,a.value))return!0;break;case Nl:if((o.tag===5||o.tag===6)&&(o=O(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Dl:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function Eh(o){switch(o.$$typeof){case Pl:return"<"+(N(o.value)||"Unknown")+">";case Ll:return":has("+(Eh(o)||"")+")";case Il:return'[role="'+o.value+'"]';case Nl:return'"'+o.value+'"';case Dl:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function Dm(o,a){var d=[];o=[o,0];for(var g=0;g<o.length;){var S=o[g++],T=o[g++],U=a[T];if(S.tag!==5||!P(S)){for(;U!=null&&Mh(S,U);)T++,U=a[T];if(T===a.length)d.push(S);else for(S=S.child;S!==null;)o.push(S,T),S=S.sibling}}return d}function wh(o,a){if(!$e)throw Error(l(363));o=Sh(o),o=Dm(o,a),a=[],o=Array.from(o);for(var d=0;d<o.length;){var g=o[d++];if(g.tag===5)P(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var tx=Math.ceil,Ul=c.ReactCurrentDispatcher,Th=c.ReactCurrentOwner,Kt=c.ReactCurrentBatchConfig,Mt=0,nn=null,rn=null,xn=0,Kn=0,zs=hn(0),on=0,Zo=null,Bs=0,Ol=0,Ah=0,jo=null,kn=null,bh=0,Ch=1/0;function ks(){Ch=dn()+500}var Fl=!1,Rh=null,hr=null,zl=!1,fr=null,Bl=0,Jo=0,Ph=null,kl=-1,Hl=0;function Dn(){return(Mt&6)!==0?dn():kl!==-1?kl:kl=dn()}function dr(o){return(o.mode&1)===0?1:(Mt&2)!==0&&xn!==0?xn&-xn:Fy.transition!==null?(Hl===0&&(o=el,el<<=1,(el&4194240)===0&&(el=64),Hl=o),Hl):(o=bt,o!==0?o:pe())}function ui(o,a,d){if(50<Jo)throw Jo=0,Ph=null,Error(l(185));var g=Vl(o,a);return g===null?null:(Do(g,a,d),((Mt&2)===0||g!==nn)&&(g===nn&&((Mt&2)===0&&(Ol|=a),on===4&&pr(g,xn)),Hn(g,d),a===1&&Mt===0&&(o.mode&1)===0&&(ks(),rl&&Pi())),g)}function Vl(o,a){o.lanes|=a;var d=o.alternate;for(d!==null&&(d.lanes|=a),d=o,o=o.return;o!==null;)o.childLanes|=a,d=o.alternate,d!==null&&(d.childLanes|=a),d=o,o=o.return;return d.tag===3?d.stateNode:null}function Hn(o,a){var d=o.callbackNode;Cy(o,a);var g=nl(o,o===nn?xn:0);if(g===0)d!==null&&yp(d),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(d!=null&&yp(d),a===1)o.tag===0?Oy(Um.bind(null,o)):xp(Um.bind(null,o)),Ne?ze(function(){Mt===0&&Pi()}):zu(Bu,Pi),d=null;else{switch(vp(g)){case 1:d=Bu;break;case 4:d=Iy;break;case 16:d=ku;break;case 536870912:d=Dy;break;default:d=ku}d=Wm(d,Nm.bind(null,o))}o.callbackPriority=a,o.callbackNode=d}}function Nm(o,a){if(kl=-1,Hl=0,(Mt&6)!==0)throw Error(l(327));var d=o.callbackNode;if(Xr()&&o.callbackNode!==d)return null;var g=nl(o,o===nn?xn:0);if(g===0)return null;if((g&30)!==0||(g&o.expiredLanes)!==0||a)a=Gl(o,g);else{a=g;var S=Mt;Mt|=2;var T=zm();(nn!==o||xn!==a)&&(ks(),Gr(o,a));do try{rx();break}catch(G){Fm(o,G)}while(!0);Gu(),Ul.current=T,Mt=S,rn!==null?a=0:(nn=null,xn=0,a=on)}if(a!==0){if(a===2&&(S=Uu(o),S!==0&&(g=S,a=Lh(o,S))),a===1)throw d=Zo,Gr(o,0),pr(o,g),Hn(o,dn()),d;if(a===6)pr(o,g);else{if(S=o.current.alternate,(g&30)===0&&!nx(S)&&(a=Gl(o,g),a===2&&(T=Uu(o),T!==0&&(g=T,a=Lh(o,T))),a===1))throw d=Zo,Gr(o,0),pr(o,g),Hn(o,dn()),d;switch(o.finishedWork=S,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Wr(o,kn);break;case 3:if(pr(o,g),(g&130023424)===g&&(a=bh+500-dn(),10<a)){if(nl(o,0)!==0)break;if(S=o.suspendedLanes,(S&g)!==g){Dn(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=Ue(Wr.bind(null,o,kn),a);break}Wr(o,kn);break;case 4:if(pr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,S=-1;0<g;){var U=31-qn(g);T=1<<U,U=a[U],U>S&&(S=U),g&=~T}if(g=S,g=dn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*tx(g/1960))-g,10<g){o.timeoutHandle=Ue(Wr.bind(null,o,kn),g);break}Wr(o,kn);break;case 5:Wr(o,kn);break;default:throw Error(l(329))}}}return Hn(o,dn()),o.callbackNode===d?Nm.bind(null,o):null}function Lh(o,a){var d=jo;return o.current.memoizedState.isDehydrated&&(Gr(o,a).flags|=256),o=Gl(o,a),o!==2&&(a=kn,kn=d,a!==null&&Ih(a)),o}function Ih(o){kn===null?kn=o:kn.push.apply(kn,o)}function nx(o){for(var a=o;;){if(a.flags&16384){var d=a.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var g=0;g<d.length;g++){var S=d[g],T=S.getSnapshot;S=S.value;try{if(!Ri(T(),S))return!1}catch{return!1}}}if(d=a.child,a.subtreeFlags&16384&&d!==null)d.return=a,a=d;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function pr(o,a){for(a&=~Ah,a&=~Ol,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var d=31-qn(a),g=1<<d;o[d]=-1,a&=~g}}function Um(o){if((Mt&6)!==0)throw Error(l(327));Xr();var a=nl(o,0);if((a&1)===0)return Hn(o,dn()),null;var d=Gl(o,a);if(o.tag!==0&&d===2){var g=Uu(o);g!==0&&(a=g,d=Lh(o,g))}if(d===1)throw d=Zo,Gr(o,0),pr(o,a),Hn(o,dn()),d;if(d===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Wr(o,kn),Hn(o,dn()),null}function Om(o){fr!==null&&fr.tag===0&&(Mt&6)===0&&Xr();var a=Mt;Mt|=1;var d=Kt.transition,g=bt;try{if(Kt.transition=null,bt=1,o)return o()}finally{bt=g,Kt.transition=d,Mt=a,(Mt&6)===0&&Pi()}}function Dh(){Kn=zs.current,at(zs)}function Gr(o,a){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==nt&&(o.timeoutHandle=nt,rt(d)),rn!==null)for(d=rn.return;d!==null;){var g=d;switch(Ju(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&Jt();break;case 3:Os(),at(Xt),at(St),ih();break;case 5:th(g);break;case 4:Os();break;case 13:at(Gt);break;case 19:at(Gt);break;case 10:Wu(g.type._context);break;case 22:case 23:Dh()}d=d.return}if(nn=o,rn=o=mr(o.current,null),xn=Kn=a,on=0,Zo=null,Ah=Ol=Bs=0,kn=jo=null,Li!==null){for(a=0;a<Li.length;a++)if(d=Li[a],g=d.interleaved,g!==null){d.interleaved=null;var S=g.next,T=d.pending;if(T!==null){var U=T.next;T.next=S,g.next=U}d.pending=g}Li=null}return o}function Fm(o,a){do{var d=rn;try{if(Gu(),ml.current=Sl,gl){for(var g=Yt.memoizedState;g!==null;){var S=g.queue;S!==null&&(S.pending=null),g=g.next}gl=!1}if(Fs=0,pn=Mn=Yt=null,Bo=!1,ko=0,Th.current=null,d===null||d.return===null){on=1,Zo=a,rn=null;break}e:{var T=o,U=d.return,G=d,le=a;if(a=xn,G.flags|=32768,le!==null&&typeof le=="object"&&typeof le.then=="function"){var Te=le,Ve=G,ft=Ve.tag;if((Ve.mode&1)===0&&(ft===0||ft===11||ft===15)){var et=Ve.alternate;et?(Ve.updateQueue=et.updateQueue,Ve.memoizedState=et.memoizedState,Ve.lanes=et.lanes):(Ve.updateQueue=null,Ve.memoizedState=null)}var Ot=rm(U);if(Ot!==null){Ot.flags&=-257,sm(Ot,U,G,T,a),Ot.mode&1&&im(T,Te,a),a=Ot,le=Te;var Qe=a.updateQueue;if(Qe===null){var Tn=new Set;Tn.add(le),a.updateQueue=Tn}else Qe.add(le);break e}else{if((a&1)===0){im(T,Te,a),Nh();break e}le=Error(l(426))}}else if(kt&&G.mode&1){var fi=rm(U);if(fi!==null){(fi.flags&65536)===0&&(fi.flags|=256),sm(fi,U,G,T,a),$u(le);break e}}T=le,on!==4&&(on=2),jo===null?jo=[T]:jo.push(T),le=uh(le,G),G=U;do{switch(G.tag){case 3:G.flags|=65536,a&=-a,G.lanes|=a;var K=tm(G,le,a);Ep(G,K);break e;case 1:T=le;var W=G.type,ie=G.stateNode;if((G.flags&128)===0&&(typeof W.getDerivedStateFromError=="function"||ie!==null&&typeof ie.componentDidCatch=="function"&&(hr===null||!hr.has(ie)))){G.flags|=65536,a&=-a,G.lanes|=a;var Oe=nm(G,T,a);Ep(G,Oe);break e}}G=G.return}while(G!==null)}km(d)}catch(je){a=je,rn===d&&d!==null&&(rn=d=d.return);continue}break}while(!0)}function zm(){var o=Ul.current;return Ul.current=Sl,o===null?Sl:o}function Nh(){(on===0||on===3||on===2)&&(on=4),nn===null||(Bs&268435455)===0&&(Ol&268435455)===0||pr(nn,xn)}function Gl(o,a){var d=Mt;Mt|=2;var g=zm();nn===o&&xn===a||Gr(o,a);do try{ix();break}catch(S){Fm(o,S)}while(!0);if(Gu(),Mt=d,Ul.current=g,rn!==null)throw Error(l(261));return nn=null,xn=0,on}function ix(){for(;rn!==null;)Bm(rn)}function rx(){for(;rn!==null&&!Py();)Bm(rn)}function Bm(o){var a=Gm(o.alternate,o,Kn);o.memoizedProps=o.pendingProps,a===null?km(o):rn=a,Th.current=null}function km(o){var a=o;do{var d=a.alternate;if(o=a.return,(a.flags&32768)===0){if(d=qy(d,a,Kn),d!==null){rn=d;return}}else{if(d=Jy(d,a),d!==null){d.flags&=32767,rn=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{on=6,rn=null;return}}if(a=a.sibling,a!==null){rn=a;return}rn=a=o}while(a!==null);on===0&&(on=5)}function Wr(o,a){var d=bt,g=Kt.transition;try{Kt.transition=null,bt=1,sx(o,a,d)}finally{Kt.transition=g,bt=d}return null}function sx(o,a,d){do Xr();while(fr!==null);if((Mt&6)!==0)throw Error(l(327));var g=o.finishedWork,S=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(Ry(o,T),o===nn&&(rn=nn=null,xn=0),(g.subtreeFlags&2064)===0&&(g.flags&2064)===0||zl||(zl=!0,Wm(ku,function(){return Xr(),null})),T=(g.flags&15990)!==0,(g.subtreeFlags&15990)!==0||T){T=Kt.transition,Kt.transition=null;var U=bt;bt=1;var G=Mt;Mt|=4,Th.current=null,Qy(o,g),$y(o,g),Z(o.containerInfo),o.current=g,ex(g),Ly(),Mt=G,bt=U,Kt.transition=T}else o.current=g;if(zl&&(zl=!1,fr=o,Bl=S),T=o.pendingLanes,T===0&&(hr=null),Ny(g.stateNode),Hn(o,dn()),a!==null)for(d=o.onRecoverableError,g=0;g<a.length;g++)d(a[g]);if(Fl)throw Fl=!1,o=Rh,Rh=null,o;return(Bl&1)!==0&&o.tag!==0&&Xr(),T=o.pendingLanes,(T&1)!==0?o===Ph?Jo++:(Jo=0,Ph=o):Jo=0,Pi(),null}function Xr(){if(fr!==null){var o=vp(Bl),a=Kt.transition,d=bt;try{if(Kt.transition=null,bt=16>o?16:o,fr===null)var g=!1;else{if(o=fr,fr=null,Bl=0,(Mt&6)!==0)throw Error(l(331));var S=Mt;for(Mt|=4,De=o.current;De!==null;){var T=De,U=T.child;if((De.flags&16)!==0){var G=T.deletions;if(G!==null){for(var le=0;le<G.length;le++){var Te=G[le];for(De=Te;De!==null;){var Ve=De;switch(Ve.tag){case 0:case 11:case 15:Vr(8,Ve,T)}var ft=Ve.child;if(ft!==null)ft.return=Ve,De=ft;else for(;De!==null;){Ve=De;var et=Ve.sibling,Ot=Ve.return;if(wm(Ve),Ve===Te){De=null;break}if(et!==null){et.return=Ot,De=et;break}De=Ot}}}var Qe=T.alternate;if(Qe!==null){var Tn=Qe.child;if(Tn!==null){Qe.child=null;do{var fi=Tn.sibling;Tn.sibling=null,Tn=fi}while(Tn!==null)}}De=T}}if((T.subtreeFlags&2064)!==0&&U!==null)U.return=T,De=U;else e:for(;De!==null;){if(T=De,(T.flags&2048)!==0)switch(T.tag){case 0:case 11:case 15:Vr(9,T,T.return)}var K=T.sibling;if(K!==null){K.return=T.return,De=K;break e}De=T.return}}var W=o.current;for(De=W;De!==null;){U=De;var ie=U.child;if((U.subtreeFlags&2064)!==0&&ie!==null)ie.return=U,De=ie;else e:for(U=W;De!==null;){if(G=De,(G.flags&2048)!==0)try{switch(G.tag){case 0:case 11:case 15:Yo(9,G)}}catch(je){Vn(G,G.return,je)}if(G===U){De=null;break e}var Oe=G.sibling;if(Oe!==null){Oe.return=G.return,De=Oe;break e}De=G.return}}if(Mt=S,Pi(),Ci&&typeof Ci.onPostCommitFiberRoot=="function")try{Ci.onPostCommitFiberRoot(il,o)}catch{}g=!0}return g}finally{bt=d,Kt.transition=a}}return!1}function Hm(o,a,d){a=uh(d,a),a=tm(o,a,1),ur(o,a),a=Dn(),o=Vl(o,1),o!==null&&(Do(o,1,a),Hn(o,a))}function Vn(o,a,d){if(o.tag===3)Hm(o,o,d);else for(;a!==null;){if(a.tag===3){Hm(a,o,d);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(hr===null||!hr.has(g))){o=uh(d,o),o=nm(a,o,1),ur(a,o),o=Dn(),a=Vl(a,1),a!==null&&(Do(a,1,o),Hn(a,o));break}}a=a.return}}function ox(o,a,d){var g=o.pingCache;g!==null&&g.delete(a),a=Dn(),o.pingedLanes|=o.suspendedLanes&d,nn===o&&(xn&d)===d&&(on===4||on===3&&(xn&130023424)===xn&&500>dn()-bh?Gr(o,0):Ah|=d),Hn(o,a)}function Vm(o,a){a===0&&((o.mode&1)===0?a=1:(a=tl,tl<<=1,(tl&130023424)===0&&(tl=4194304)));var d=Dn();o=Vl(o,a),o!==null&&(Do(o,a,d),Hn(o,d))}function ax(o){var a=o.memoizedState,d=0;a!==null&&(d=a.retryLane),Vm(o,d)}function lx(o,a){var d=0;switch(o.tag){case 13:var g=o.stateNode,S=o.memoizedState;S!==null&&(d=S.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),Vm(o,d)}var Gm;Gm=function(o,a,d){if(o!==null)if(o.memoizedProps!==a.pendingProps||Xt.current)Jn=!0;else{if((o.lanes&d)===0&&(a.flags&128)===0)return Jn=!1,jy(o,a,d);Jn=(o.flags&131072)!==0}else Jn=!1,kt&&(a.flags&1048576)!==0&&Rp(a,fl,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=ri(a,St.current);Ps(a,d),S=sh(null,a,g,o,S,d);var T=oh();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,fn(g)?(T=!0,yn(a)):T=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Yu(a),S.updater=ul,a.stateNode=S,S._reactInternals=a,Zu(a,g,o,d),a=dh(null,a,g,!0,T,d)):(a.tag=0,kt&&T&&ju(a),In(null,a,S,d),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=g._init,g=S(g._payload),a.type=g,S=a.tag=ux(g),o=pi(g,o),S){case 0:a=fh(null,a,g,o,d);break e;case 1:a=dm(null,a,g,o,d);break e;case 11:a=lm(null,a,g,o,d);break e;case 14:a=cm(null,a,g,pi(g.type,o),d);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),fh(o,a,g,S,d);case 1:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),dm(o,a,g,S,d);case 3:e:{if(pm(a),o===null)throw Error(l(387));g=a.pendingProps,T=a.memoizedState,S=T.element,Mp(o,a),cl(a,g,null,d);var U=a.memoizedState;if(g=U.element,ve&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:U.cache,transitions:U.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){S=Error(l(423)),a=mm(o,a,g,d,S);break e}else if(g!==S){S=Error(l(424)),a=mm(o,a,g,d,S);break e}else for(ve&&(jn=Ka(a.stateNode.containerInfo),Zn=a,kt=!0,mi=null,No=!1),d=Up(a,null,g,d),a.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Ds(),g===S){a=qi(o,a,d);break e}In(o,a,g,d)}a=a.child}return a;case 5:return Op(a),o===null&&Qu(a),g=a.type,S=a.pendingProps,T=o!==null?o.memoizedProps:null,U=S.children,Ce(g,S)?U=null:T!==null&&Ce(g,T)&&(a.flags|=32),fm(o,a),In(o,a,U,d),a.child;case 6:return o===null&&Qu(a),null;case 13:return gm(o,a,d);case 4:return eh(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Ns(a,null,g,d):In(o,a,g,d),a.child;case 11:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),lm(o,a,g,S,d);case 7:return In(o,a,a.pendingProps,d),a.child;case 8:return In(o,a,a.pendingProps.children,d),a.child;case 12:return In(o,a,a.pendingProps.children,d),a.child;case 10:e:{if(g=a.type._context,S=a.pendingProps,T=a.memoizedProps,U=S.value,Sp(a,g,U),T!==null)if(Ri(T.value,U)){if(T.children===S.children&&!Xt.current){a=qi(o,a,d);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var G=T.dependencies;if(G!==null){U=T.child;for(var le=G.firstContext;le!==null;){if(le.context===g){if(T.tag===1){le=Gi(-1,d&-d),le.tag=2;var Te=T.updateQueue;if(Te!==null){Te=Te.shared;var Ve=Te.pending;Ve===null?le.next=le:(le.next=Ve.next,Ve.next=le),Te.pending=le}}T.lanes|=d,le=T.alternate,le!==null&&(le.lanes|=d),Xu(T.return,d,a),G.lanes|=d;break}le=le.next}}else if(T.tag===10)U=T.type===a.type?null:T.child;else if(T.tag===18){if(U=T.return,U===null)throw Error(l(341));U.lanes|=d,G=U.alternate,G!==null&&(G.lanes|=d),Xu(U,d,a),U=T.sibling}else U=T.child;if(U!==null)U.return=T;else for(U=T;U!==null;){if(U===a){U=null;break}if(T=U.sibling,T!==null){T.return=U.return,U=T;break}U=U.return}T=U}In(o,a,S.children,d),a=a.child}return a;case 9:return S=a.type,g=a.pendingProps.children,Ps(a,d),S=si(S),g=g(S),a.flags|=1,In(o,a,g,d),a.child;case 14:return g=a.type,S=pi(g,a.pendingProps),S=pi(g.type,S),cm(o,a,g,S,d);case 15:return um(o,a,a.type,a.pendingProps,d);case 17:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,fn(g)?(o=!0,yn(a)):o=!1,Ps(a,d),bp(a,g,S),Zu(a,g,S,d),dh(null,a,g,!0,o,d);case 19:return xm(o,a,d);case 22:return hm(o,a,d)}throw Error(l(156,a.tag))};function Wm(o,a){return zu(o,a)}function cx(o,a,d,g){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function hi(o,a,d,g){return new cx(o,a,d,g)}function Uh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function ux(o){if(typeof o=="function")return Uh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===M)return 11;if(o===w)return 14}return 2}function mr(o,a){var d=o.alternate;return d===null?(d=hi(o.tag,a,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=a,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,a=o.dependencies,d.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Wl(o,a,d,g,S,T){var U=2;if(g=o,typeof o=="function")Uh(o)&&(U=1);else if(typeof o=="string")U=5;else e:switch(o){case f:return Yr(d.children,S,T,a);case p:U=8,S|=8;break;case m:return o=hi(12,d,a,S|2),o.elementType=m,o.lanes=T,o;case x:return o=hi(13,d,a,S),o.elementType=x,o.lanes=T,o;case v:return o=hi(19,d,a,S),o.elementType=v,o.lanes=T,o;case A:return Xl(d,S,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case _:U=10;break e;case y:U=9;break e;case M:U=11;break e;case w:U=14;break e;case E:U=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=hi(U,d,a,S),a.elementType=o,a.type=g,a.lanes=T,a}function Yr(o,a,d,g){return o=hi(7,o,g,a),o.lanes=d,o}function Xl(o,a,d,g){return o=hi(22,o,g,a),o.elementType=A,o.lanes=d,o.stateNode={},o}function Oh(o,a,d){return o=hi(6,o,null,a),o.lanes=d,o}function Fh(o,a,d){return a=hi(4,o.children!==null?o.children:[],o.key,a),a.lanes=d,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function hx(o,a,d,g,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=nt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Ou(0),this.expirationTimes=Ou(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ou(0),this.identifierPrefix=g,this.onRecoverableError=S,ve&&(this.mutableSourceEagerHydrationData=null)}function Xm(o,a,d,g,S,T,U,G,le){return o=new hx(o,a,d,G,le),a===1?(a=1,T===!0&&(a|=8)):a=0,T=hi(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:d,cache:null,transitions:null},Yu(T),o}function Ym(o){if(!o)return ii;o=o._reactInternals;e:{if(b(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(fn(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var d=o.type;if(fn(d))return bs(o,d,a)}return a}function qm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=j(a),o===null?null:o.stateNode}function Zm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<a?d:a}}function zh(o,a){Zm(o,a),(o=o.alternate)&&Zm(o,a)}function fx(o){return o=j(o),o===null?null:o.stateNode}function dx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Dn();ui(o,134217728,a),zh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Dn(),d=dr(o);ui(o,d,a),zh(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var d=Io(a.pendingLanes);d!==0&&(Fu(a,d|1),Hn(a,dn()),(Mt&6)===0&&(ks(),Pi()))}break;case 13:var g=Dn();Om(function(){return ui(o,1,g)}),zh(o,1)}},t.batchedUpdates=function(o,a){var d=Mt;Mt|=1;try{return o(a)}finally{Mt=d,Mt===0&&(ks(),rl&&Pi())}},t.createComponentSelector=function(o){return{$$typeof:Pl,value:o}},t.createContainer=function(o,a,d,g,S,T,U){return Xm(o,a,!1,null,d,g,S,T,U)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Ll,value:o}},t.createHydrationContainer=function(o,a,d,g,S,T,U,G,le){return o=Xm(d,g,!0,o,S,T,U,G,le),o.context=Ym(null),d=o.current,g=Dn(),S=dr(d),T=Gi(g,S),T.callback=a??null,ur(d,T),o.current.lanes=S,Do(o,S,g),Hn(o,g),o},t.createPortal=function(o,a,d){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:Il,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Dl,value:o}},t.createTextSelector=function(o){return{$$typeof:Nl,value:o}},t.deferredUpdates=function(o){var a=bt,d=Kt.transition;try{return Kt.transition=null,bt=16,o()}finally{bt=a,Kt.transition=d}},t.discreteUpdates=function(o,a,d,g,S){var T=bt,U=Kt.transition;try{return Kt.transition=null,bt=1,o(a,d,g,S)}finally{bt=T,Kt.transition=U,Mt===0&&ks()}},t.findAllNodes=wh,t.findBoundingRects=function(o,a){if(!$e)throw Error(l(363));a=wh(o,a),o=[];for(var d=0;d<a.length;d++)o.push(Nt(a[d]));for(a=o.length-1;0<a;a--){d=o[a];for(var g=d.x,S=g+d.width,T=d.y,U=T+d.height,G=a-1;0<=G;G--)if(a!==G){var le=o[G],Te=le.x,Ve=Te+le.width,ft=le.y,et=ft+le.height;if(g>=Te&&T>=ft&&S<=Ve&&U<=et){o.splice(a,1);break}else if(g!==Te||d.width!==le.width||et<T||ft>U){if(!(T!==ft||d.height!==le.height||Ve<g||Te>S)){Te>g&&(le.width+=Te-g,le.x=g),Ve<S&&(le.width=S-Te),o.splice(a,1);break}}else{ft>T&&(le.height+=ft-T,le.y=T),et<U&&(le.height=U-ft),o.splice(a,1);break}}}return o},t.findHostInstance=qm,t.findHostInstanceWithNoPortals=function(o){return o=B(o),o=o!==null?H(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return qm(o)},t.flushControlled=function(o){var a=Mt;Mt|=1;var d=Kt.transition,g=bt;try{Kt.transition=null,bt=1,o()}finally{bt=g,Kt.transition=d,Mt=a,Mt===0&&(ks(),Pi())}},t.flushPassiveEffects=Xr,t.flushSync=Om,t.focusWithin=function(o,a){if(!$e)throw Error(l(363));for(o=Sh(o),a=Dm(o,a),a=Array.from(a),o=0;o<a.length;){var d=a[o++];if(!P(d)){if(d.tag===5&&Me(d.stateNode))return!0;for(d=d.child;d!==null;)a.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return bt},t.getFindAllNodesFailureDescription=function(o,a){if(!$e)throw Error(l(363));var d=0,g=[];o=[Sh(o),0];for(var S=0;S<o.length;){var T=o[S++],U=o[S++],G=a[U];if((T.tag!==5||!P(T))&&(Mh(T,G)&&(g.push(Eh(G)),U++,U>d&&(d=U)),U<a.length))for(T=T.child;T!==null;)o.push(T,U),T=T.sibling}if(d<a.length){for(o=[];d<a.length;d++)o.push(Eh(a[d]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return oe(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:fx,findFiberByHostInstance:o.findFiberByHostInstance||dx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{il=a.inject(o),Ci=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,d,g){if(!$e)throw Error(l(363));o=wh(o,a);var S=_e(o,d,g).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var d=a._getVersion;d=d(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,d]:o.mutableSourceEagerHydrationData.push(a,d)},t.runWithPriority=function(o,a){var d=bt;try{return bt=o,a()}finally{bt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,d,g){var S=a.current,T=Dn(),U=dr(S);return d=Ym(d),a.context===null?a.context=d:a.pendingContext=d,a=Gi(T,U),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),ur(S,a),o=ui(S,U,T),o!==null&&ll(o,S,U),U},t}),bf}var L_;function mb(){return L_||(L_=1,wf.exports=pb()),wf.exports}var gb=mb();const _b=J_(gb);var I_=ly();const gp={},vb=r=>void Object.assign(gp,r);function yb(r,e){function t(f,{args:p=[],attach:m,..._},y){let M=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(_.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=_.object;x=uo(v,{type:f,root:y,attach:m,primitive:!0})}else{const v=gp[M];if(!v)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=uo(new v(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x instanceof _t?x.__r3f.attach="geometry":x instanceof Sn&&(x.__r3f.attach="material")),M!=="inject"&&Pf(x,_),x}function n(f,p){let m=!1;if(p){var _,y;(_=p.__r3f)!=null&&_.attach?Rf(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||uo(p,{}),p.__r3f.parent=f,bd(p),ho(p)}}function i(f,p,m){let _=!1;if(p){var y,M;if((y=p.__r3f)!=null&&y.attach)Rf(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"});const x=f.children.filter(w=>w!==p),v=x.indexOf(m);f.children=[...x.slice(0,v),p,...x.slice(v)],_=!0}_||(M=f.__r3f)==null||M.objects.push(p),p.__r3f||uo(p,{}),p.__r3f.parent=f,bd(p),ho(p)}}function s(f,p,m=!1){f&&[...f].forEach(_=>l(p,_,m))}function l(f,p,m){if(p){var _,y,M;if(p.__r3f&&(p.__r3f.parent=null),(_=f.__r3f)!=null&&_.objects&&(f.__r3f.objects=f.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)F_(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&Ab(jc(p),p)}const w=(M=p.__r3f)==null?void 0:M.primitive,E=!w&&(m===void 0?p.dispose!==null:m);if(!w){var v;s((v=p.__r3f)==null?void 0:v.objects,p,E),s(p.children,p,E)}if(delete p.__r3f,E&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?I_.unstable_scheduleCallback(I_.unstable_IdlePriority,A):A()}ho(f)}}function c(f,p,m,_){var y;const M=(y=f.__r3f)==null?void 0:y.parent;if(!M)return;const x=t(p,m,f.__r3f.root);if(f.children){for(const v of f.children)v.__r3f&&n(x,v);f.children=f.children.filter(v=>!v.__r3f)}f.__r3f.objects.forEach(v=>n(x,v)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||l(M,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(M,x),x.raycast&&x.__r3f.eventCount&&jc(x).getState().internal.interaction.push(x),[_,_.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:_b({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&l(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const _=f.getState().scene;_.__r3f&&i(_,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f?.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,_){var y;if(((y=f?.__r3f)!=null?y:{}).primitive&&_.object&&_.object!==f)return[!0];{const{args:x=[],children:v,...w}=_,{args:E=[],children:A,...C}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((N,F)=>N!==E[F]))return[!0];const R=my(f,w,C,!0);return R.changes.length?[!1,R]:null}},commitUpdate(f,[p,m],_,y,M,x){p?c(f,_,M,x):Pf(f,m)},commitMount(f,p,m,_){var y;const M=(y=f.__r3f)!=null?y:{};f.raycast&&M.handlers&&M.eventCount&&jc(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>uo(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:_}=(p=f.__r3f)!=null?p:{};m&&_&&F_(_,f,m),f.isObject3D&&(f.visible=!1),ho(f)},unhideInstance(f,p){var m;const{attach:_,parent:y}=(m=f.__r3f)!=null?m:{};_&&y&&Rf(y,f,_),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),ho(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():_o.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Ht.fun(performance.now)?performance.now:Ht.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Ht.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Ht.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Pf}}var D_,N_;const Cf=r=>"colorSpace"in r||"outputColorSpace"in r,cy=()=>{var r;return(r=gp.ColorManagement)!=null?r:null},uy=r=>r&&r.isOrthographicCamera,xb=r=>r&&r.hasOwnProperty("current"),Ja=typeof window<"u"&&((D_=window.document)!=null&&D_.createElement||((N_=window.navigator)==null?void 0:N_.product)==="ReactNative")?Le.useLayoutEffect:Le.useEffect;function hy(r){const e=Le.useRef(r);return Ja(()=>void(e.current=r),[r]),e}function Sb({set:r}){return Ja(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class fy extends Le.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}fy.getDerivedStateFromError=()=>({error:!0});const dy="__default",U_=new Map,Mb=r=>r&&!!r.memoized&&!!r.changes;function py(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const la=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function jc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Ht={obj:r=>r===Object(r)&&!Ht.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Ht.str(r)||Ht.num(r))return r===e;const s=Ht.obj(r);if(s&&n==="reference")return r===e;const l=Ht.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Ht.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Ht.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function Eb(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function uo(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function Ad(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const O_=/-\d+$/;function Rf(r,e,t){if(Ht.str(t)){if(O_.test(t)){const s=t.replace(O_,""),{target:l,key:c}=Ad(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=Ad(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function F_(r,e,t){var n,i;if(Ht.str(t)){const{target:s,key:l}=Ad(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function my(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){var f;const p=(f=r?.__r3f)!=null?f:{},m=Object.entries(i),_=[];if(h){const M=Object.keys(u);for(let x=0;x<M.length;x++)i.hasOwnProperty(M[x])||m.unshift([M[x],dy+"remove"])}m.forEach(([M,x])=>{var v;if((v=r.__r3f)!=null&&v.primitive&&M==="object"||Ht.equ(x,u[M]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(M))return _.push([M,x,!0,[]]);let w=[];M.includes("-")&&(w=M.split("-")),_.push([M,x,!1,w]);for(const E in i){const A=i[E];E.startsWith(`${M}-`)&&_.push([E,A,!1,E.split("-")])}});const y={...i};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:_}}function Pf(r,e){var t,n,i;const s=(t=r.__r3f)!=null?t:{},l=s.root,c=(n=l==null||l.getState==null?void 0:l.getState())!=null?n:{},{memoized:u,changes:h}=Mb(e)?e:my(r,e),f=s.eventCount;r.__r3f&&(r.__r3f.memoizedProps=u);for(let m=0;m<h.length;m++){let[_,y,M,x]=h[m];if(Cf(r)){const A="srgb",C="srgb-linear";_==="encoding"?(_="colorSpace",y=y===3001?A:C):_==="outputEncoding"&&(_="outputColorSpace",y=y===3001?A:C)}let v=r,w=v[_];if(x.length&&(w=x.reduce((E,A)=>E[A],r),!(w&&w.set))){const[E,...A]=x.reverse();v=A.reverse().reduce((C,R)=>C[R],r),_=E}if(y===dy+"remove")if(v.constructor){let E=U_.get(v.constructor);E||(E=new v.constructor,U_.set(v.constructor,E)),y=E[_]}else y=0;if(M)y?s.handlers[_]=y:delete s.handlers[_],s.eventCount=Object.keys(s.handlers).length;else if(w&&w.set&&(w.copy||w instanceof ps)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&w.constructor===y.constructor)w.copy(y);else if(y!==void 0){const E=w instanceof ke;!E&&w.setScalar?w.setScalar(y):w instanceof ps&&y instanceof ps?w.mask=y.mask:w.set(y),!cy()&&!c.linear&&E&&w.convertSRGBToLinear()}}else if(v[_]=y,v[_]instanceof jt&&v[_].format===On&&v[_].type===Fi){const E=v[_];Cf(E)&&Cf(c.gl)?E.colorSpace=c.gl.outputColorSpace:E.encoding=c.gl.outputEncoding}ho(r)}if(s.parent&&r.raycast&&f!==s.eventCount){const m=jc(r).getState().internal,_=m.interaction.indexOf(r);_>-1&&m.interaction.splice(_,1),s.eventCount&&m.interaction.push(r)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(i=r.__r3f)!=null&&i.parent&&bd(r),r}function ho(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function bd(r){r.onUpdate==null||r.onUpdate(r)}function wb(r,e){r.manual||(uy(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Bc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function Tb(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return _o.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return _o.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return _o.ContinuousEventPriority;default:return _o.DefaultEventPriority}}function gy(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function Ab(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{gy(t.capturedMap,e,n,i)})}function bb(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],_=h?h(f.internal.interaction):f.internal.interaction;for(let v=0;v<_.length;v++){const w=la(_[v]);w&&(w.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(v){const w=la(v);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var E;w.events.compute==null||w.events.compute(u,w,(E=w.previousRoot)==null?void 0:E.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(v,!0):[]}let M=_.flatMap(y).sort((v,w)=>{const E=la(v.object),A=la(w.object);return!E||!A?v.distance-w.distance:A.events.priority-E.events.priority||v.distance-w.distance}).filter(v=>{const w=Bc(v);return p.has(w)?!1:(p.add(w),!0)});f.events.filter&&(M=f.events.filter(M,f));for(const v of M){let w=v.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({...v,eventObject:w}),w=w.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let v of f.internal.capturedMap.get(u.pointerId).values())p.has(Bc(v.intersection))||m.push(v.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const _={stopped:!1};for(const y of u){const M=la(y.object)||m,{raycaster:x,pointer:v,camera:w,internal:E}=M,A=new D(v.x,v.y,0).unproject(w),C=L=>{var B,j;return(B=(j=E.capturedMap.get(L))==null?void 0:j.has(y.eventObject))!=null?B:!1},R=L=>{const B={intersection:y,target:h.target};E.capturedMap.has(L)?E.capturedMap.get(L).set(y.eventObject,B):E.capturedMap.set(L,new Map([[y.eventObject,B]])),h.target.setPointerCapture(L)},N=L=>{const B=E.capturedMap.get(L);B&&gy(E.capturedMap,y.eventObject,B,L)};let F={};for(let L in h){let B=h[L];typeof B!="function"&&(F[L]=B)}let b={...y,...F,pointer:v,intersections:u,stopped:_.stopped,delta:f,unprojectedPoint:A,ray:x.ray,camera:w,stopPropagation(){const L="pointerId"in h&&E.capturedMap.get(h.pointerId);if((!L||L.has(y.eventObject))&&(b.stopped=_.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(B=>B.eventObject===y.eventObject))){const B=u.slice(0,u.indexOf(y));s([...B,y])}},target:{hasPointerCapture:C,setPointerCapture:R,releasePointerCapture:N},currentTarget:{hasPointerCapture:C,setPointerCapture:R,releasePointerCapture:N},nativeEvent:h};if(p(b),_.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,_=m?.handlers;if(h.hovered.delete(Bc(f)),m!=null&&m.eventCount){const y={...f,intersections:u};_.onPointerOut==null||_.onPointerOut(y),_.onPointerLeave==null||_.onPointerLeave(y)}}}function l(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const _=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,_?t:void 0),v=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=x.map(E=>E.eventObject)),y&&!x.length&&v<=2&&(l(f,m.interaction),p&&p(f)),_&&s(x);function w(E){const A=E.eventObject,C=A.__r3f,R=C?.handlers;if(C!=null&&C.eventCount)if(_){if(R.onPointerOver||R.onPointerEnter||R.onPointerOut||R.onPointerLeave){const N=Bc(E),F=m.hovered.get(N);F?F.stopped&&E.stopPropagation():(m.hovered.set(N,E),R.onPointerOver==null||R.onPointerOver(E),R.onPointerEnter==null||R.onPointerEnter(E))}R.onPointerMove==null||R.onPointerMove(E)}else{const N=R[u];N?(!y||m.initialHits.includes(A))&&(l(f,m.interaction.filter(F=>!m.initialHits.includes(F))),N(E)):y&&m.initialHits.includes(A)&&l(f,m.interaction.filter(F=>!m.initialHits.includes(F)))}}i(x,f,v,w)}}return{handlePointer:c}}const _y=r=>!!(r!=null&&r.render),vy=Le.createContext(null),Cb=(r,e)=>{const t=fb((c,u)=>{const h=new D,f=new D,p=new D;function m(v=u().camera,w=f,E=u().size){const{width:A,height:C,top:R,left:N}=E,F=A/C;w instanceof D?p.copy(w):p.set(...w);const b=v.getWorldPosition(h).distanceTo(p);if(uy(v))return{width:A/v.zoom,height:C/v.zoom,top:R,left:N,factor:1,distance:b,aspect:F};{const L=v.fov*Math.PI/180,B=2*Math.tan(L/2)*b,j=B*(A/C);return{width:j,height:B,top:R,left:N,factor:A/j,distance:b,aspect:F}}}let _;const y=v=>c(w=>({performance:{...w.performance,current:v}})),M=new fe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,w)=>e(v,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new fp,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();_&&clearTimeout(_),v.performance.current!==v.performance.min&&y(v.performance.min),_=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(w=>({...w,events:{...w.events,...v}})),setSize:(v,w,E,A,C)=>{const R=u().camera,N={width:v,height:w,top:A||0,left:C||0,updateStyle:E};c(F=>({size:N,viewport:{...F.viewport,...m(R,f,N)}}))},setDpr:v=>c(w=>{const E=py(v);return{viewport:{...w.viewport,dpr:E,initialDpr:w.viewport.initialDpr||E}}}),setFrameloop:(v="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,v!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Le.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,w,E)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:v,priority:w,store:E}),A.subscribers=A.subscribers.sort((C,R)=>C.priority-R.priority),()=>{const C=u().internal;C!=null&&C.subscribers&&(C.priority=C.priority-(w>0?1:0),C.subscribers=C.subscribers.filter(R=>R.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,wb(c,u),f.setPixelRatio(h.dpr);const _=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,_)}c!==l&&(l=c,p(_=>({viewport:{..._.viewport,..._.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let kc,Rb=new Set,Pb=new Set,Lb=new Set;function Lf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ca(r,e){switch(r){case"before":return Lf(Rb,e);case"after":return Lf(Pb,e);case"tail":return Lf(Lb,e)}}let If,Df;function Nf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),If=e.internal.subscribers,kc=0;kc<If.length;kc++)Df=If[kc],Df.ref.current(Df.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function Ib(r){let e=!1,t,n,i;function s(u){n=requestAnimationFrame(s),e=!0,t=0,ca("before",u);for(const f of r.values()){var h;i=f.store.getState(),i.internal.active&&(i.frameloop==="always"||i.internal.frames>0)&&!((h=i.gl.xr)!=null&&h.isPresenting)&&(t+=Nf(u,i))}if(ca("after",u),t===0)return ca("tail",u),e=!1,cancelAnimationFrame(n)}function l(u,h=1){var f;if(!u)return r.forEach(p=>l(p.store.getState()),h);(f=u.gl.xr)!=null&&f.isPresenting||!u.internal.active||u.frameloop==="never"||(u.internal.frames=Math.min(60,u.internal.frames+h),e||(e=!0,requestAnimationFrame(s)))}function c(u,h=!0,f,p){if(h&&ca("before",u),f)Nf(u,f,p);else for(const m of r.values())Nf(u,m.store.getState());h&&ca("after",u)}return{loop:s,invalidate:l,advance:c}}function yy(){const r=Le.useContext(vy);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Tr(r=t=>t,e){return yy()(r,e)}function Db(r,e=0){const t=yy(),n=t.getState().internal.subscribe,i=hy(r);return Ja(()=>n(i,e,t),[e,n,t]),null}const wo=new Map,{invalidate:z_,advance:B_}=Ib(wo),{reconciler:iu,applyProps:lo}=yb(wo,Tb),co={objects:"shallow",strict:!1},Nb=(r,e)=>{const t=typeof r=="function"?r(e):r;return _y(t)?t:new jd({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function Ub(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function Ob(r){const e=wo.get(r),t=e?.fiber,n=e?.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||Cb(z_,B_),l=t||iu.createContainer(s,_o.ConcurrentRoot,null,!1,null,"",i,null);e||wo.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:_,events:y,onCreated:M,shadows:x=!1,linear:v=!1,flat:w=!1,legacy:E=!1,orthographic:A=!1,frameloop:C="always",dpr:R=[1,2],performance:N,raycaster:F,camera:b,onPointerMissed:L}=f,B=s.getState(),j=B.gl;B.gl||B.set({gl:j=Nb(p,r)});let ae=B.raycaster;ae||B.set({raycaster:ae=new oy});const{params:H,...Q}=F||{};if(Ht.equ(Q,ae,co)||lo(ae,{...Q}),Ht.equ(H,ae.params,co)||lo(ae,{params:{...ae.params,...H}}),!B.camera||B.camera===h&&!Ht.equ(h,b,co)){h=b;const Z=b instanceof Va,ee=Z?b:A?new Pr(0,0,0,0,.1,1e3):new tn(75,0,.1,1e3);Z||(ee.position.z=5,b&&lo(ee,b),!B.camera&&!(b!=null&&b.rotation)&&ee.lookAt(0,0,0)),B.set({camera:ee}),ae.camera=ee}if(!B.scene){let Z;_ instanceof tu?Z=_:(Z=new tu,_&&lo(Z,_)),B.set({scene:uo(Z)})}if(!B.xr){var oe;const Z=(J,de)=>{const Ce=s.getState();Ce.frameloop!=="never"&&B_(J,!0,Ce,de)},ee=()=>{const J=s.getState();J.gl.xr.enabled=J.gl.xr.isPresenting,J.gl.xr.setAnimationLoop(J.gl.xr.isPresenting?Z:null),J.gl.xr.isPresenting||z_(J)},me={connect(){const J=s.getState().gl;J.xr.addEventListener("sessionstart",ee),J.xr.addEventListener("sessionend",ee)},disconnect(){const J=s.getState().gl;J.xr.removeEventListener("sessionstart",ee),J.xr.removeEventListener("sessionend",ee)}};typeof((oe=j.xr)==null?void 0:oe.addEventListener)=="function"&&me.connect(),B.set({xr:me})}if(j.shadowMap){const Z=j.shadowMap.enabled,ee=j.shadowMap.type;if(j.shadowMap.enabled=!!x,Ht.boo(x))j.shadowMap.type=fa;else if(Ht.str(x)){var se;const me={basic:$_,percentage:su,soft:fa,variance:yi};j.shadowMap.type=(se=me[x])!=null?se:fa}else Ht.obj(x)&&Object.assign(j.shadowMap,x);(Z!==j.shadowMap.enabled||ee!==j.shadowMap.type)&&(j.shadowMap.needsUpdate=!0)}const X=cy();X&&("enabled"in X?X.enabled=!E:"legacyMode"in X&&(X.legacyMode=E)),u||lo(j,{outputEncoding:v?3e3:3001,toneMapping:w?Oi:Cd}),B.legacy!==E&&B.set(()=>({legacy:E})),B.linear!==v&&B.set(()=>({linear:v})),B.flat!==w&&B.set(()=>({flat:w})),p&&!Ht.fun(p)&&!_y(p)&&!Ht.equ(p,j,co)&&lo(j,p),y&&!B.events.handlers&&B.set({events:y(s)});const Y=Ub(r,m);return Ht.equ(Y,B.size,co)||B.setSize(Y.width,Y.height,Y.updateStyle,Y.top,Y.left),R&&B.viewport.dpr!==py(R)&&B.setDpr(R),B.frameloop!==C&&B.setFrameloop(C),B.onPointerMissed||B.set({onPointerMissed:L}),N&&!Ht.equ(N,B.performance,co)&&B.set(Z=>({performance:{...Z.performance,...N}})),c=M,u=!0,this},render(f){return u||this.configure(),iu.updateContainer(Le.createElement(Fb,{store:s,children:f,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){xy(r)}}}function Fb({store:r,children:e,onCreated:t,rootElement:n}){return Ja(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Le.createElement(vy.Provider,{value:r},e)}function xy(r,e){const t=wo.get(r),n=t?.fiber;if(n){const i=t?.store.getState();i&&(i.internal.active=!1),iu.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),Eb(i),wo.delete(r)}catch{}},500)})}}iu.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Le.version});function To(){return To=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},To.apply(null,arguments)}function k_(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function zb({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,l]=Le.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Le.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,f=Le.useRef(!1);Le.useEffect(()=>(f.current=!0,()=>void(f.current=!1)));const[p,m,_]=Le.useMemo(()=>{const v=()=>{if(!c.current.element)return;const{left:w,top:E,width:A,height:C,bottom:R,right:N,x:F,y:b}=c.current.element.getBoundingClientRect(),L={left:w,top:E,width:A,height:C,bottom:R,right:N,x:F,y:b};c.current.element instanceof HTMLElement&&n&&(L.height=c.current.element.offsetHeight,L.width=c.current.element.offsetWidth),Object.freeze(L),f.current&&!Vb(c.current.lastBounds,L)&&l(c.current.lastBounds=L)};return[v,h?k_(v,h):v,u?k_(v,u):v]},[l,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(v=>v.removeEventListener("scroll",_,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new i(_),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(v=>v.addEventListener("scroll",_,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{_()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=v=>{!v||v===c.current.element||(y(),c.current.element=v,c.current.scrollContainers=Sy(v),M())};return kb(_,!!e),Bb(m),Le.useEffect(()=>{y(),M()},[e,_,m]),Le.useEffect(()=>y,[]),[x,s,p]}function Bb(r){Le.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function kb(r,e){Le.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function Sy(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...Sy(r.parentElement)]}const Hb=["x","y","top","bottom","left","right","width","height"],Vb=(r,e)=>Hb.every(t=>r[t]===e[t]);var Gb=Object.defineProperty,Wb=Object.defineProperties,Xb=Object.getOwnPropertyDescriptors,H_=Object.getOwnPropertySymbols,Yb=Object.prototype.hasOwnProperty,qb=Object.prototype.propertyIsEnumerable,V_=(r,e,t)=>e in r?Gb(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,G_=(r,e)=>{for(var t in e||(e={}))Yb.call(e,t)&&V_(r,t,e[t]);if(H_)for(var t of H_(e))qb.call(e,t)&&V_(r,t,e[t]);return r},Zb=(r,e)=>Wb(r,Xb(e)),W_,X_;typeof window<"u"&&((W_=window.document)!=null&&W_.createElement||((X_=window.navigator)==null?void 0:X_.product)==="ReactNative")?Le.useLayoutEffect:Le.useEffect;function My(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=My(n,e,t);if(i)return i;n=n.sibling}}function Ey(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const Y_=console.error;console.error=function(){const r=[...arguments].join("");if(r?.startsWith("Warning:")&&r.includes("useContext")){console.error=Y_;return}return Y_.apply(this,arguments)};const _p=Ey(Le.createContext(null));class wy extends Le.Component{render(){return Le.createElement(_p.Provider,{value:this._reactInternals},this.props.children)}}function jb(){const r=Le.useContext(_p);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Le.useId();return Le.useMemo(()=>{for(const n of[r,r?.alternate]){if(!n)continue;const i=My(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function Jb(){const r=jb(),[e]=Le.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==_p&&!e.has(i)&&e.set(i,Le.useContext(Ey(i)))}t=t.return}return e}function Kb(){const r=Jb();return Le.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Le.createElement(e,null,Le.createElement(t.Provider,Zb(G_({},n),{value:r.get(t)}))),e=>Le.createElement(wy,G_({},e))),[r])}const Uf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function Qb(r){const{handlePointer:e}=bb(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Uf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=Uf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Uf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const $b=Le.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=Qb,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:M,performance:x,raycaster:v,camera:w,scene:E,onPointerMissed:A,onCreated:C,...R},N){Le.useMemo(()=>vb(ab),[]);const F=Kb(),[b,L]=zb({scroll:!0,debounce:{scroll:50,resize:0},...n}),B=Le.useRef(null),j=Le.useRef(null);Le.useImperativeHandle(N,()=>B.current);const ae=hy(A),[H,Q]=Le.useState(!1),[oe,se]=Le.useState(!1);if(H)throw H;if(oe)throw oe;const X=Le.useRef(null);Ja(()=>{const Z=B.current;L.width>0&&L.height>0&&Z&&(X.current||(X.current=Ob(Z)),X.current.configure({gl:s,events:l,shadows:h,linear:f,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:M,performance:x,raycaster:v,camera:w,scene:E,size:L,onPointerMissed:(...ee)=>ae.current==null?void 0:ae.current(...ee),onCreated:ee=>{ee.events.connect==null||ee.events.connect(c?xb(c)?c.current:c:j.current),u&&ee.setEvents({compute:(me,J)=>{const de=me[u+"X"],Ce=me[u+"Y"];J.pointer.set(de/J.size.width*2-1,-(Ce/J.size.height)*2+1),J.raycaster.setFromCamera(J.pointer,J.camera)}}),C?.(ee)}}),X.current.render(Le.createElement(F,null,Le.createElement(fy,{set:se},Le.createElement(Le.Suspense,{fallback:Le.createElement(Sb,{set:Q})},e)))))}),Le.useEffect(()=>{const Z=B.current;if(Z)return()=>xy(Z)},[]);const Y=c?"none":"auto";return Le.createElement("div",To({ref:j,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:Y,...i}},R),Le.createElement("div",{ref:b,style:{width:"100%",height:"100%"}},Le.createElement("canvas",{ref:B,style:{display:"block"}},t)))}),pC=Le.forwardRef(function(e,t){return Le.createElement(wy,null,Le.createElement($b,To({},e,{ref:t})))});var eC=Object.defineProperty,tC=(r,e,t)=>e in r?eC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,nC=(r,e,t)=>(tC(r,e+"",t),t);class iC{constructor(){nC(this,"_listeners")}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}var rC=Object.defineProperty,sC=(r,e,t)=>e in r?rC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,tt=(r,e,t)=>(sC(r,typeof e!="symbol"?e+"":e,t),t);const Hc=new Ss,q_=new er,oC=Math.cos(70*(Math.PI/180)),Z_=(r,e)=>(r%e+e)%e;let aC=class extends iC{constructor(e,t){super(),tt(this,"object"),tt(this,"domElement"),tt(this,"enabled",!0),tt(this,"target",new D),tt(this,"minDistance",0),tt(this,"maxDistance",1/0),tt(this,"minZoom",0),tt(this,"maxZoom",1/0),tt(this,"minPolarAngle",0),tt(this,"maxPolarAngle",Math.PI),tt(this,"minAzimuthAngle",-1/0),tt(this,"maxAzimuthAngle",1/0),tt(this,"enableDamping",!1),tt(this,"dampingFactor",.05),tt(this,"enableZoom",!0),tt(this,"zoomSpeed",1),tt(this,"enableRotate",!0),tt(this,"rotateSpeed",1),tt(this,"enablePan",!0),tt(this,"panSpeed",1),tt(this,"screenSpacePanning",!0),tt(this,"keyPanSpeed",7),tt(this,"zoomToCursor",!1),tt(this,"autoRotate",!1),tt(this,"autoRotateSpeed",2),tt(this,"reverseOrbit",!1),tt(this,"reverseHorizontalOrbit",!1),tt(this,"reverseVerticalOrbit",!1),tt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),tt(this,"mouseButtons",{LEFT:is.ROTATE,MIDDLE:is.DOLLY,RIGHT:is.PAN}),tt(this,"touches",{ONE:rs.ROTATE,TWO:rs.DOLLY_PAN}),tt(this,"target0"),tt(this,"position0"),tt(this,"zoom0"),tt(this,"_domElementKeyEvents",null),tt(this,"getPolarAngle"),tt(this,"getAzimuthalAngle"),tt(this,"setPolarAngle"),tt(this,"setAzimuthalAngle"),tt(this,"getDistance"),tt(this,"getZoomScale"),tt(this,"listenToKeyEvents"),tt(this,"stopListenToKeyEvents"),tt(this,"saveState"),tt(this,"reset"),tt(this,"update"),tt(this,"connect"),tt(this,"dispose"),tt(this,"dollyIn"),tt(this,"dollyOut"),tt(this,"getScale"),tt(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>f.phi,this.getAzimuthalAngle=()=>f.theta,this.setPolarAngle=k=>{let ce=Z_(k,2*Math.PI),ge=f.phi;ge<0&&(ge+=2*Math.PI),ce<0&&(ce+=2*Math.PI);let ye=Math.abs(ce-ge);2*Math.PI-ye<ye&&(ce<ge?ce+=2*Math.PI:ge+=2*Math.PI),p.phi=ce-ge,n.update()},this.setAzimuthalAngle=k=>{let ce=Z_(k,2*Math.PI),ge=f.theta;ge<0&&(ge+=2*Math.PI),ce<0&&(ce+=2*Math.PI);let ye=Math.abs(ce-ge);2*Math.PI-ye<ye&&(ce<ge?ce+=2*Math.PI:ge+=2*Math.PI),p.theta=ce-ge,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=k=>{k.addEventListener("keydown",Se),this._domElementKeyEvents=k},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",Se),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const k=new D,ce=new D(0,1,0),ge=new Pn().setFromUnitVectors(e.up,ce),ye=ge.clone().invert(),Je=new D,V=new Pn,Re=2*Math.PI;return function(){const ue=n.object.position;ge.setFromUnitVectors(e.up,ce),ye.copy(ge).invert(),k.copy(ue).sub(n.target),k.applyQuaternion(ge),f.setFromVector3(k),n.autoRotate&&u===c.NONE&&H(j()),n.enableDamping?(f.theta+=p.theta*n.dampingFactor,f.phi+=p.phi*n.dampingFactor):(f.theta+=p.theta,f.phi+=p.phi);let xe=n.minAzimuthAngle,Ze=n.maxAzimuthAngle;isFinite(xe)&&isFinite(Ze)&&(xe<-Math.PI?xe+=Re:xe>Math.PI&&(xe-=Re),Ze<-Math.PI?Ze+=Re:Ze>Math.PI&&(Ze-=Re),xe<=Ze?f.theta=Math.max(xe,Math.min(Ze,f.theta)):f.theta=f.theta>(xe+Ze)/2?Math.max(xe,f.theta):Math.min(Ze,f.theta)),f.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,f.phi)),f.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(_,n.dampingFactor):n.target.add(_),n.zoomToCursor&&b||n.object.isOrthographicCamera?f.radius=J(f.radius):f.radius=J(f.radius*m),k.setFromSpherical(f),k.applyQuaternion(ye),ue.copy(n.target).add(k),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,_.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),_.set(0,0,0));let pt=!1;if(n.zoomToCursor&&b){let Ut=null;if(n.object instanceof tn&&n.object.isPerspectiveCamera){const Bt=k.length();Ut=J(Bt*m);const Tt=Bt-Ut;n.object.position.addScaledVector(N,Tt),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const Bt=new D(F.x,F.y,0);Bt.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix(),pt=!0;const Tt=new D(F.x,F.y,0);Tt.unproject(n.object),n.object.position.sub(Tt).add(Bt),n.object.updateMatrixWorld(),Ut=k.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Ut!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Ut).add(n.object.position):(Hc.origin.copy(n.object.position),Hc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Hc.direction))<oC?e.lookAt(n.target):(q_.setFromNormalAndCoplanarPoint(n.object.up,n.target),Hc.intersectPlane(q_,n.target))))}else n.object instanceof Pr&&n.object.isOrthographicCamera&&(pt=m!==1,pt&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix()));return m=1,b=!1,pt||Je.distanceToSquared(n.object.position)>h||8*(1-V.dot(n.object.quaternion))>h?(n.dispatchEvent(i),Je.copy(n.object.position),V.copy(n.object.quaternion),pt=!1,!0):!1}})(),this.connect=k=>{n.domElement=k,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Ie),n.domElement.addEventListener("pointerdown",Nt),n.domElement.addEventListener("pointercancel",P),n.domElement.addEventListener("wheel",_e)},this.dispose=()=>{var k,ce,ge,ye,Je,V;n.domElement&&(n.domElement.style.touchAction="auto"),(k=n.domElement)==null||k.removeEventListener("contextmenu",Ie),(ce=n.domElement)==null||ce.removeEventListener("pointerdown",Nt),(ge=n.domElement)==null||ge.removeEventListener("pointercancel",P),(ye=n.domElement)==null||ye.removeEventListener("wheel",_e),(Je=n.domElement)==null||Je.ownerDocument.removeEventListener("pointermove",O),(V=n.domElement)==null||V.ownerDocument.removeEventListener("pointerup",P),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Se)};const n=this,i={type:"change"},s={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,f=new Td,p=new Td;let m=1;const _=new D,y=new fe,M=new fe,x=new fe,v=new fe,w=new fe,E=new fe,A=new fe,C=new fe,R=new fe,N=new D,F=new fe;let b=!1;const L=[],B={};function j(){return 2*Math.PI/60/60*n.autoRotateSpeed}function ae(){return Math.pow(.95,n.zoomSpeed)}function H(k){n.reverseOrbit||n.reverseHorizontalOrbit?p.theta+=k:p.theta-=k}function Q(k){n.reverseOrbit||n.reverseVerticalOrbit?p.phi+=k:p.phi-=k}const oe=(()=>{const k=new D;return function(ge,ye){k.setFromMatrixColumn(ye,0),k.multiplyScalar(-ge),_.add(k)}})(),se=(()=>{const k=new D;return function(ge,ye){n.screenSpacePanning===!0?k.setFromMatrixColumn(ye,1):(k.setFromMatrixColumn(ye,0),k.crossVectors(n.object.up,k)),k.multiplyScalar(ge),_.add(k)}})(),X=(()=>{const k=new D;return function(ge,ye){const Je=n.domElement;if(Je&&n.object instanceof tn&&n.object.isPerspectiveCamera){const V=n.object.position;k.copy(V).sub(n.target);let Re=k.length();Re*=Math.tan(n.object.fov/2*Math.PI/180),oe(2*ge*Re/Je.clientHeight,n.object.matrix),se(2*ye*Re/Je.clientHeight,n.object.matrix)}else Je&&n.object instanceof Pr&&n.object.isOrthographicCamera?(oe(ge*(n.object.right-n.object.left)/n.object.zoom/Je.clientWidth,n.object.matrix),se(ye*(n.object.top-n.object.bottom)/n.object.zoom/Je.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function Y(k){n.object instanceof tn&&n.object.isPerspectiveCamera||n.object instanceof Pr&&n.object.isOrthographicCamera?m=k:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Z(k){Y(m/k)}function ee(k){Y(m*k)}function me(k){if(!n.zoomToCursor||!n.domElement)return;b=!0;const ce=n.domElement.getBoundingClientRect(),ge=k.clientX-ce.left,ye=k.clientY-ce.top,Je=ce.width,V=ce.height;F.x=ge/Je*2-1,F.y=-(ye/V)*2+1,N.set(F.x,F.y,1).unproject(n.object).sub(n.object.position).normalize()}function J(k){return Math.max(n.minDistance,Math.min(n.maxDistance,k))}function de(k){y.set(k.clientX,k.clientY)}function Ce(k){me(k),A.set(k.clientX,k.clientY)}function Fe(k){v.set(k.clientX,k.clientY)}function Ue(k){M.set(k.clientX,k.clientY),x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const ce=n.domElement;ce&&(H(2*Math.PI*x.x/ce.clientHeight),Q(2*Math.PI*x.y/ce.clientHeight)),y.copy(M),n.update()}function rt(k){C.set(k.clientX,k.clientY),R.subVectors(C,A),R.y>0?Z(ae()):R.y<0&&ee(ae()),A.copy(C),n.update()}function nt(k){w.set(k.clientX,k.clientY),E.subVectors(w,v).multiplyScalar(n.panSpeed),X(E.x,E.y),v.copy(w),n.update()}function We(k){me(k),k.deltaY<0?ee(ae()):k.deltaY>0&&Z(ae()),n.update()}function Ge(k){let ce=!1;switch(k.code){case n.keys.UP:X(0,n.keyPanSpeed),ce=!0;break;case n.keys.BOTTOM:X(0,-n.keyPanSpeed),ce=!0;break;case n.keys.LEFT:X(n.keyPanSpeed,0),ce=!0;break;case n.keys.RIGHT:X(-n.keyPanSpeed,0),ce=!0;break}ce&&(k.preventDefault(),n.update())}function z(){if(L.length==1)y.set(L[0].pageX,L[0].pageY);else{const k=.5*(L[0].pageX+L[1].pageX),ce=.5*(L[0].pageY+L[1].pageY);y.set(k,ce)}}function ve(){if(L.length==1)v.set(L[0].pageX,L[0].pageY);else{const k=.5*(L[0].pageX+L[1].pageX),ce=.5*(L[0].pageY+L[1].pageY);v.set(k,ce)}}function he(){const k=L[0].pageX-L[1].pageX,ce=L[0].pageY-L[1].pageY,ge=Math.sqrt(k*k+ce*ce);A.set(0,ge)}function Ae(){n.enableZoom&&he(),n.enablePan&&ve()}function pe(){n.enableZoom&&he(),n.enableRotate&&z()}function qe(k){if(L.length==1)M.set(k.pageX,k.pageY);else{const ge=wt(k),ye=.5*(k.pageX+ge.x),Je=.5*(k.pageY+ge.y);M.set(ye,Je)}x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const ce=n.domElement;ce&&(H(2*Math.PI*x.x/ce.clientHeight),Q(2*Math.PI*x.y/ce.clientHeight)),y.copy(M)}function Ne(k){if(L.length==1)w.set(k.pageX,k.pageY);else{const ce=wt(k),ge=.5*(k.pageX+ce.x),ye=.5*(k.pageY+ce.y);w.set(ge,ye)}E.subVectors(w,v).multiplyScalar(n.panSpeed),X(E.x,E.y),v.copy(w)}function ze(k){const ce=wt(k),ge=k.pageX-ce.x,ye=k.pageY-ce.y,Je=Math.sqrt(ge*ge+ye*ye);C.set(0,Je),R.set(0,Math.pow(C.y/A.y,n.zoomSpeed)),Z(R.y),A.copy(C)}function $e(k){n.enableZoom&&ze(k),n.enablePan&&Ne(k)}function xt(k){n.enableZoom&&ze(k),n.enableRotate&&qe(k)}function Nt(k){var ce,ge;n.enabled!==!1&&(L.length===0&&((ce=n.domElement)==null||ce.ownerDocument.addEventListener("pointermove",O),(ge=n.domElement)==null||ge.ownerDocument.addEventListener("pointerup",P)),st(k),k.pointerType==="touch"?Xe(k):$(k))}function O(k){n.enabled!==!1&&(k.pointerType==="touch"?be(k):Me(k))}function P(k){var ce,ge,ye;Et(k),L.length===0&&((ce=n.domElement)==null||ce.releasePointerCapture(k.pointerId),(ge=n.domElement)==null||ge.ownerDocument.removeEventListener("pointermove",O),(ye=n.domElement)==null||ye.ownerDocument.removeEventListener("pointerup",P)),n.dispatchEvent(l),u=c.NONE}function $(k){let ce;switch(k.button){case 0:ce=n.mouseButtons.LEFT;break;case 1:ce=n.mouseButtons.MIDDLE;break;case 2:ce=n.mouseButtons.RIGHT;break;default:ce=-1}switch(ce){case is.DOLLY:if(n.enableZoom===!1)return;Ce(k),u=c.DOLLY;break;case is.ROTATE:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enablePan===!1)return;Fe(k),u=c.PAN}else{if(n.enableRotate===!1)return;de(k),u=c.ROTATE}break;case is.PAN:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enableRotate===!1)return;de(k),u=c.ROTATE}else{if(n.enablePan===!1)return;Fe(k),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Me(k){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;Ue(k);break;case c.DOLLY:if(n.enableZoom===!1)return;rt(k);break;case c.PAN:if(n.enablePan===!1)return;nt(k);break}}function _e(k){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(k.preventDefault(),n.dispatchEvent(s),We(k),n.dispatchEvent(l))}function Se(k){n.enabled===!1||n.enablePan===!1||Ge(k)}function Xe(k){switch(Ee(k),L.length){case 1:switch(n.touches.ONE){case rs.ROTATE:if(n.enableRotate===!1)return;z(),u=c.TOUCH_ROTATE;break;case rs.PAN:if(n.enablePan===!1)return;ve(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case rs.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ae(),u=c.TOUCH_DOLLY_PAN;break;case rs.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;pe(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function be(k){switch(Ee(k),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;qe(k),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Ne(k),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;$e(k),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;xt(k),n.update();break;default:u=c.NONE}}function Ie(k){n.enabled!==!1&&k.preventDefault()}function st(k){L.push(k)}function Et(k){delete B[k.pointerId];for(let ce=0;ce<L.length;ce++)if(L[ce].pointerId==k.pointerId){L.splice(ce,1);return}}function Ee(k){let ce=B[k.pointerId];ce===void 0&&(ce=new fe,B[k.pointerId]=ce),ce.set(k.pageX,k.pageY)}function wt(k){const ce=k.pointerId===L[0].pointerId?L[1]:L[0];return B[ce.pointerId]}this.dollyIn=(k=ae())=>{ee(k),n.update()},this.dollyOut=(k=ae())=>{Z(k),n.update()},this.getScale=()=>m,this.setScale=k=>{Y(k),n.update()},this.getZoomScale=()=>ae(),t!==void 0&&this.connect(t),this.update()}};const gC=Le.forwardRef(({makeDefault:r,camera:e,regress:t,domElement:n,enableDamping:i=!0,keyEvents:s=!1,onChange:l,onStart:c,onEnd:u,...h},f)=>{const p=Tr(R=>R.invalidate),m=Tr(R=>R.camera),_=Tr(R=>R.gl),y=Tr(R=>R.events),M=Tr(R=>R.setEvents),x=Tr(R=>R.set),v=Tr(R=>R.get),w=Tr(R=>R.performance),E=e||m,A=n||y.connected||_.domElement,C=Le.useMemo(()=>new aC(E),[E]);return Db(()=>{C.enabled&&C.update()},-1),Le.useEffect(()=>(s&&C.connect(s===!0?A:s),C.connect(A),()=>void C.dispose()),[s,A,t,C,p]),Le.useEffect(()=>{const R=b=>{p(),t&&w.regress(),l&&l(b)},N=b=>{c&&c(b)},F=b=>{u&&u(b)};return C.addEventListener("change",R),C.addEventListener("start",N),C.addEventListener("end",F),()=>{C.removeEventListener("start",N),C.removeEventListener("end",F),C.removeEventListener("change",R)}},[l,c,u,C,p,M]),Le.useEffect(()=>{if(r){const R=v().controls;return x({controls:C}),()=>x({controls:R})}},[r,C]),Le.createElement("primitive",To({ref:f,object:C,enableDamping:i},h))});function lC(r,e){const t=r+"Geometry";return Le.forwardRef(({args:n,children:i,...s},l)=>{const c=Le.useRef(null);return Le.useImperativeHandle(l,()=>c.current),Le.useLayoutEffect(()=>void e?.(c.current)),Le.createElement("mesh",To({ref:c},s),Le.createElement(t,{attach:"geometry",args:n}),i)})}const _C=lC("sphere");export{_t as B,pC as C,Dr as L,gC as O,hC as R,_C as S,D as V,Bn as a,uC as c,Le as r,Db as u};
//# sourceMappingURL=three-vendor-BFkSgm9p.js.map
