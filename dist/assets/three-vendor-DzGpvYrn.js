import{r as nc,a as Xb,g as bm}from"./react-vendor-D3F3s8fL.js";var Yd={exports:{}},fl={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var bv;function qb(){if(bv)return fl;bv=1;var s=nc(),t=Symbol.for("react.element"),e=Symbol.for("react.fragment"),n=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(c,h,f){var p,m={},g=null,v=null;f!==void 0&&(g=""+f),h.key!==void 0&&(g=""+h.key),h.ref!==void 0&&(v=h.ref);for(p in h)n.call(h,p)&&!o.hasOwnProperty(p)&&(m[p]=h[p]);if(c&&c.defaultProps)for(p in h=c.defaultProps,h)m[p]===void 0&&(m[p]=h[p]);return{$$typeof:t,type:c,key:g,ref:v,props:m,_owner:i.current}}return fl.Fragment=e,fl.jsx=l,fl.jsxs=l,fl}var Ev;function Yb(){return Ev||(Ev=1,Yd.exports=qb()),Yd.exports}var xi=Yb(),Kc={},Tv;function Zb(){if(Tv)return Kc;Tv=1;var s=Xb();return Kc.createRoot=s.createRoot,Kc.hydrateRoot=s.hydrateRoot,Kc}var ND=Zb(),ne=nc();const jb=bm(ne);var Zd={exports:{}},Es={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Av;function Kb(){return Av||(Av=1,Es.ConcurrentRoot=1,Es.ContinuousEventPriority=8,Es.DefaultEventPriority=32,Es.DiscreteEventPriority=2,Es.IdleEventPriority=268435456,Es.LegacyRoot=0,Es.NoEventPriority=0),Es}var wv;function Jb(){return wv||(wv=1,Zd.exports=Kb()),Zd.exports}var Xu=Jb();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const kh="180",tr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},er={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Ty=0,tm=1,Ay=2,Qb=3,wy=0,Wh=1,Cl=2,qi=3,Os=0,Kn=1,is=2,Ps=0,lr=1,em=2,nm=3,im=4,Cy=5,ua=100,Ry=101,Dy=102,Uy=103,Ny=104,Ly=200,Py=201,Iy=202,Oy=203,Ku=204,Ju=205,By=206,zy=207,Fy=208,Hy=209,Vy=210,Gy=211,ky=212,Wy=213,Xy=214,Qu=0,$u=1,th=2,hr=3,eh=4,nh=5,ih=6,sh=7,ic=0,qy=1,Yy=2,rs=0,Zy=1,jy=2,Ky=3,Em=4,Jy=5,Qy=6,$y=7,sm="attached",tx="detached",Xh=300,Bs=301,pa=302,zl=303,Fl=304,No=306,Hl=1e3,Pi=1001,Vl=1002,wn=1003,Tm=1004,$b=1004,go=1005,tE=1005,pn=1006,Rl=1007,eE=1007,ss=1008,nE=1008,Ii=1009,Am=1010,wm=1011,So=1012,qh=1013,zs=1014,ai=1015,Lo=1016,Yh=1017,Zh=1018,Mo=1020,Cm=35902,Rm=35899,Dm=1021,Um=1022,Fn=1023,bo=1026,Eo=1027,jh=1028,sc=1029,Nm=1030,Kh=1031,iE=1032,Jh=1033,Dl=33776,Ul=33777,Nl=33778,Ll=33779,ah=35840,rh=35841,oh=35842,lh=35843,ch=36196,uh=37492,hh=37496,fh=37808,dh=37809,ph=37810,mh=37811,gh=37812,vh=37813,_h=37814,yh=37815,xh=37816,Sh=37817,Mh=37818,bh=37819,Eh=37820,Th=37821,Ah=36492,wh=36494,Ch=36495,Rh=36283,Dh=36284,Uh=36285,Nh=36286,ex=2200,nx=2201,ix=2202,Gl=2300,Lh=2301,qu=2302,ar=2400,rr=2401,kl=2402,Qh=2500,Lm=2501,sE=0,aE=1,rE=2,sx=3200,ax=3201,oE=3202,lE=3203,va=0,rx=1,Ns="",zn="srgb",ma="srgb-linear",Wl="linear",He="srgb",cE=0,nr=7680,uE=7681,hE=7682,fE=7683,dE=34055,pE=34056,mE=5386,gE=512,vE=513,_E=514,yE=515,xE=516,SE=517,ME=518,am=519,ox=512,lx=513,cx=514,Pm=515,ux=516,hx=517,fx=518,dx=519,Xl=35044,bE=35048,EE=35040,TE=35045,AE=35049,wE=35041,CE=35046,RE=35050,DE=35042,UE="100",rm="300 es",Si=2e3,To=2001,NE={COMPUTE:"compute",RENDER:"render"},LE={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},PE={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};let cs=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}};const In=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Cv=1234567;const cr=Math.PI/180,Ao=180/Math.PI;function Mi(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(In[s&255]+In[s>>8&255]+In[s>>16&255]+In[s>>24&255]+"-"+In[t&255]+In[t>>8&255]+"-"+In[t>>16&15|64]+In[t>>24&255]+"-"+In[e&63|128]+In[e>>8&255]+"-"+In[e>>16&255]+In[e>>24&255]+In[n&255]+In[n>>8&255]+In[n>>16&255]+In[n>>24&255]).toLowerCase()}function he(s,t,e){return Math.max(t,Math.min(e,s))}function Im(s,t){return(s%t+t)%t}function IE(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function OE(s,t,e){return s!==t?(e-s)/(t-s):0}function Pl(s,t,e){return(1-e)*s+e*t}function BE(s,t,e,n){return Pl(s,t,1-Math.exp(-e*n))}function zE(s,t=1){return t-Math.abs(Im(s,t*2)-t)}function FE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function HE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function VE(s,t){return s+Math.floor(Math.random()*(t-s+1))}function GE(s,t){return s+Math.random()*(t-s)}function kE(s){return s*(.5-Math.random())}function WE(s){s!==void 0&&(Cv=s);let t=Cv+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function XE(s){return s*cr}function qE(s){return s*Ao}function YE(s){return(s&s-1)===0&&s!==0}function ZE(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function jE(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function KE(s,t,e,n,i){const o=Math.cos,l=Math.sin,c=o(e/2),h=l(e/2),f=o((t+n)/2),p=l((t+n)/2),m=o((t-n)/2),g=l((t-n)/2),v=o((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function jn(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function _e(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const JE={DEG2RAD:cr,RAD2DEG:Ao,generateUUID:Mi,clamp:he,euclideanModulo:Im,mapLinear:IE,inverseLerp:OE,lerp:Pl,damp:BE,pingpong:zE,smoothstep:FE,smootherstep:HE,randInt:VE,randFloat:GE,randFloatSpread:kE,seededRandom:WE,degToRad:XE,radToDeg:qE,isPowerOfTwo:YE,ceilPowerOfTwo:ZE,floorPowerOfTwo:jE,setQuaternionFromProperEuler:KE,normalize:_e,denormalize:jn};class ft{constructor(t=0,e=0){ft.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=he(this.x,t.x,e.x),this.y=he(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=he(this.x,t,e),this.y=he(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(he(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(he(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),o=this.x-t.x,l=this.y-t.y;return this.x=o*n-l*i+t.x,this.y=o*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Hn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,o,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=o[l+0],v=o[l+1],x=o[l+2],b=o[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=b;return}if(m!==b||h!==g||f!==v||p!==x){let S=1-c;const _=h*g+f*v+p*x+m*b,E=_>=0?1:-1,A=1-_*_;if(A>Number.EPSILON){const U=Math.sqrt(A),R=Math.atan2(U,_*E);S=Math.sin(S*R)/U,c=Math.sin(c*R)/U}const T=c*E;if(h=h*S+g*T,f=f*S+v*T,p=p*S+x*T,m=m*S+b*T,S===1-c){const U=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=U,f*=U,p*=U,m*=U}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,o,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=o[l],g=o[l+1],v=o[l+2],x=o[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(o/2),g=h(n/2),v=h(i/2),x=h(o/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],o=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(o-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(o+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(o-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(o+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(he(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,o=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-o*h,this._y=i*p+l*h+o*c-n*f,this._z=o*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*o+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),o=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(t=0,e=0,n=0){I.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Rv.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Rv.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*i,this.y=o[1]*e+o[4]*n+o[7]*i,this.z=o[2]*e+o[5]*n+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*i+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*i+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*i+o[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,o=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-o*i),m=2*(o*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-o*m,this.z=i+h*m+o*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i,this.y=o[1]*e+o[5]*n+o[9]*i,this.z=o[2]*e+o[6]*n+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=he(this.x,t.x,e.x),this.y=he(this.y,t.y,e.y),this.z=he(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=he(this.x,t,e),this.y=he(this.y,t,e),this.z=he(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(he(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,o=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-o*c,this.y=o*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return jd.copy(this).projectOnVector(t),this.sub(jd)}reflect(t){return this.sub(jd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(he(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const jd=new I,Rv=new Hn;class ge{constructor(t,e,n,i,o,l,c,h,f){ge.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f)}set(t,e,n,i,o,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=o,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],b=i[0],S=i[3],_=i[6],E=i[1],A=i[4],T=i[7],U=i[2],R=i[5],P=i[8];return o[0]=l*b+c*E+h*U,o[3]=l*S+c*A+h*R,o[6]=l*_+c*T+h*P,o[1]=f*b+p*E+m*U,o[4]=f*S+p*A+m*R,o[7]=f*_+p*T+m*P,o[2]=g*b+v*E+x*U,o[5]=g*S+v*A+x*R,o[8]=g*_+v*T+x*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*o*p+n*c*h+i*o*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*o,v=f*o-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/x;return t[0]=m*b,t[1]=(i*f-p*n)*b,t[2]=(c*n-i*l)*b,t[3]=g*b,t[4]=(p*e-i*h)*b,t[5]=(i*o-c*e)*b,t[6]=v*b,t[7]=(n*h-f*e)*b,t[8]=(l*e-n*o)*b,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,o,l,c){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(Kd.makeScale(t,e)),this}rotate(t){return this.premultiply(Kd.makeRotation(-t)),this}translate(t,e){return this.premultiply(Kd.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Kd=new ge;function px(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const QE={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function vo(s,t){return new QE[s](t)}function ql(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function mx(){const s=ql("canvas");return s.style.display="block",s}const Dv={};function Yl(s){s in Dv||(Dv[s]=!0,console.warn(s))}function $E(s,t,e){return new Promise(function(n,i){function o(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:n()}}setTimeout(o,e)})}const Uv=new ge().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Nv=new ge().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function tT(){const s={enabled:!0,workingColorSpace:ma,spaces:{},convert:function(i,o,l){return this.enabled===!1||o===l||!o||!l||(this.spaces[o].transfer===He&&(i.r=Is(i.r),i.g=Is(i.g),i.b=Is(i.b)),this.spaces[o].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===He&&(i.r=xo(i.r),i.g=xo(i.g),i.b=xo(i.b))),i},workingToColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},colorSpaceToWorking:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ns?Wl:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,l){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,o){return Yl("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,o)},toWorkingColorSpace:function(i,o){return Yl("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,o)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[ma]:{primaries:t,whitePoint:n,transfer:Wl,toXYZ:Uv,fromXYZ:Nv,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:zn},outputColorSpaceConfig:{drawingBufferColorSpace:zn}},[zn]:{primaries:t,whitePoint:n,transfer:He,toXYZ:Uv,fromXYZ:Nv,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:zn}}}),s}const Re=tT();function Is(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function xo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Xr;class gx{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Xr===void 0&&(Xr=ql("canvas")),Xr.width=t.width,Xr.height=t.height;const i=Xr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=Xr}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=ql("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),o=i.data;for(let l=0;l<o.length;l++)o[l]=Is(o[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Is(e[n]/255)*255):e[n]=Is(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let eT=0;class fa{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:eT++}),this.uuid=Mi(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?o.push(Jd(i[l].image)):o.push(Jd(i[l]))}else o=Jd(i);n.url=o}return e||(t.images[this.uuid]=n),n}}function Jd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?gx.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let nT=0;const Qd=new I;class rn extends cs{constructor(t=rn.DEFAULT_IMAGE,e=rn.DEFAULT_MAPPING,n=Pi,i=Pi,o=pn,l=ss,c=Fn,h=Ii,f=rn.DEFAULT_ANISOTROPY,p=Ns){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:nT++}),this.uuid=Mi(),this.name="",this.source=new fa(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=o,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new ft(0,0),this.repeat=new ft(1,1),this.center=new ft(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ge,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Qd).x}get height(){return this.source.getSize(Qd).y}get depth(){return this.source.getSize(Qd).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Xh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Hl:t.x=t.x-Math.floor(t.x);break;case Pi:t.x=t.x<0?0:1;break;case Vl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Hl:t.y=t.y-Math.floor(t.y);break;case Pi:t.y=t.y<0?0:1;break;case Vl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}rn.DEFAULT_IMAGE=null;rn.DEFAULT_MAPPING=Xh;rn.DEFAULT_ANISOTROPY=1;class Ne{constructor(t=0,e=0,n=0,i=1){Ne.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,o;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],b=h[2],S=h[6],_=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-b)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+b)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const A=(f+1)/2,T=(v+1)/2,U=(_+1)/2,R=(p+g)/4,P=(m+b)/4,B=(x+S)/4;return A>T&&A>U?A<.01?(n=0,i=.707106781,o=.707106781):(n=Math.sqrt(A),i=R/n,o=P/n):T>U?T<.01?(n=.707106781,i=0,o=.707106781):(i=Math.sqrt(T),n=R/i,o=B/i):U<.01?(n=.707106781,i=.707106781,o=0):(o=Math.sqrt(U),n=P/o,i=B/o),this.set(n,i,o,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-b)*(m-b)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-b)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=he(this.x,t.x,e.x),this.y=he(this.y,t.y,e.y),this.z=he(this.z,t.z,e.z),this.w=he(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=he(this.x,t,e),this.y=he(this.y,t,e),this.z=he(this.z,t,e),this.w=he(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(he(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Om extends cs{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:pn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Ne(0,0,t,e),this.scissorTest=!1,this.viewport=new Ne(0,0,t,e);const i={width:t,height:e,depth:n.depth},o=new rn(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=o.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:pn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new fa(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ls extends Om{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class $h extends rn{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=wn,this.minFilter=wn,this.wrapR=Pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class iT extends ls{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new $h(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class tf extends rn{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=wn,this.minFilter=wn,this.wrapR=Pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class sT extends ls{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new tf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Vn{constructor(t=new I(1/0,1/0,1/0),e=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(ki.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(ki.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ki.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const o=n.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=o.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,ki):ki.fromBufferAttribute(o,l),ki.applyMatrix4(t.matrixWorld),this.expandByPoint(ki);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Jc.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Jc.copy(n.boundingBox)),Jc.applyMatrix4(t.matrixWorld),this.union(Jc)}const i=t.children;for(let o=0,l=i.length;o<l;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,ki),ki.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(dl),Qc.subVectors(this.max,dl),qr.subVectors(t.a,dl),Yr.subVectors(t.b,dl),Zr.subVectors(t.c,dl),na.subVectors(Yr,qr),ia.subVectors(Zr,Yr),Ha.subVectors(qr,Zr);let e=[0,-na.z,na.y,0,-ia.z,ia.y,0,-Ha.z,Ha.y,na.z,0,-na.x,ia.z,0,-ia.x,Ha.z,0,-Ha.x,-na.y,na.x,0,-ia.y,ia.x,0,-Ha.y,Ha.x,0];return!$d(e,qr,Yr,Zr,Qc)||(e=[1,0,0,0,1,0,0,0,1],!$d(e,qr,Yr,Zr,Qc))?!1:($c.crossVectors(na,ia),e=[$c.x,$c.y,$c.z],$d(e,qr,Yr,Zr,Qc))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ki).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(ki).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ts[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ts[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ts[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ts[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ts[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ts[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ts[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ts[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ts),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Ts=[new I,new I,new I,new I,new I,new I,new I,new I],ki=new I,Jc=new Vn,qr=new I,Yr=new I,Zr=new I,na=new I,ia=new I,Ha=new I,dl=new I,Qc=new I,$c=new I,Va=new I;function $d(s,t,e,n,i){for(let o=0,l=s.length-3;o<=l;o+=3){Va.fromArray(s,o);const c=i.x*Math.abs(Va.x)+i.y*Math.abs(Va.y)+i.z*Math.abs(Va.z),h=t.dot(Va),f=e.dot(Va),p=n.dot(Va);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const aT=new Vn,pl=new I,tp=new I;let Cn=class{constructor(t=new I,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):aT.setFromPoints(t).getCenter(n);let i=0;for(let o=0,l=t.length;o<l;o++)i=Math.max(i,n.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;pl.subVectors(t,this.center);const e=pl.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(pl,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(tp.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(pl.copy(t.center).add(tp)),this.expandByPoint(pl.copy(t.center).sub(tp))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}};const As=new I,ep=new I,tu=new I,sa=new I,np=new I,eu=new I,ip=new I;class mr{constructor(t=new I,e=new I(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,As)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=As.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(As.copy(this.origin).addScaledVector(this.direction,e),As.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ep.copy(t).add(e).multiplyScalar(.5),tu.copy(e).sub(t).normalize(),sa.copy(this.origin).sub(ep);const o=t.distanceTo(e)*.5,l=-this.direction.dot(tu),c=sa.dot(this.direction),h=-sa.dot(tu),f=sa.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=o*p,m>=0)if(g>=-x)if(g<=x){const b=1/p;m*=b,g*=b,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*o+c)),g=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-o,-h),o),v=g*(g+2*h)+f):(m=Math.max(0,-(l*o+c)),g=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f);else g=l>0?-o:o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(ep).addScaledVector(tu,g),v}intersectSphere(t,e){As.subVectors(t.center,this.origin);const n=As.dot(this.direction),i=As.dot(As)-n*n,o=t.radius*t.radius;if(i>o)return null;const l=Math.sqrt(o-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,o,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||o>i||((o>n||isNaN(n))&&(n=o),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,As)!==null}intersectTriangle(t,e,n,i,o){np.subVectors(e,t),eu.subVectors(n,t),ip.crossVectors(np,eu);let l=this.direction.dot(ip),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;sa.subVectors(this.origin,t);const h=c*this.direction.dot(eu.crossVectors(sa,eu));if(h<0)return null;const f=c*this.direction.dot(np.cross(sa));if(f<0||h+f>l)return null;const p=-c*sa.dot(ip);return p<0?null:this.at(p/l,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class fe{constructor(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){fe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S)}set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=i,_[1]=o,_[5]=l,_[9]=c,_[13]=h,_[2]=f,_[6]=p,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=b,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new fe().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/jr.setFromMatrixColumn(t,0).length(),o=1/jr.setFromMatrixColumn(t,1).length(),l=1/jr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,o=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-b*f,e[9]=-c*h,e[2]=b-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g+b*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=b+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g-b*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=b-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+b,e[1]=h*m,e[5]=b*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=b-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-b*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+b,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=b*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(rT,t,oT)}lookAt(t,e,n){const i=this.elements;return _i.subVectors(t,e),_i.lengthSq()===0&&(_i.z=1),_i.normalize(),aa.crossVectors(n,_i),aa.lengthSq()===0&&(Math.abs(n.z)===1?_i.x+=1e-4:_i.z+=1e-4,_i.normalize(),aa.crossVectors(n,_i)),aa.normalize(),nu.crossVectors(_i,aa),i[0]=aa.x,i[4]=nu.x,i[8]=_i.x,i[1]=aa.y,i[5]=nu.y,i[9]=_i.y,i[2]=aa.z,i[6]=nu.z,i[10]=_i.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],b=n[6],S=n[10],_=n[14],E=n[3],A=n[7],T=n[11],U=n[15],R=i[0],P=i[4],B=i[8],C=i[12],w=i[1],z=i[5],Y=i[9],X=i[13],$=i[2],it=i[6],k=i[10],et=i[14],q=i[3],lt=i[7],yt=i[11],St=i[15];return o[0]=l*R+c*w+h*$+f*q,o[4]=l*P+c*z+h*it+f*lt,o[8]=l*B+c*Y+h*k+f*yt,o[12]=l*C+c*X+h*et+f*St,o[1]=p*R+m*w+g*$+v*q,o[5]=p*P+m*z+g*it+v*lt,o[9]=p*B+m*Y+g*k+v*yt,o[13]=p*C+m*X+g*et+v*St,o[2]=x*R+b*w+S*$+_*q,o[6]=x*P+b*z+S*it+_*lt,o[10]=x*B+b*Y+S*k+_*yt,o[14]=x*C+b*X+S*et+_*St,o[3]=E*R+A*w+T*$+U*q,o[7]=E*P+A*z+T*it+U*lt,o[11]=E*B+A*Y+T*k+U*yt,o[15]=E*C+A*X+T*et+U*St,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],o=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],b=t[7],S=t[11],_=t[15];return x*(+o*h*m-i*f*m-o*c*g+n*f*g+i*c*v-n*h*v)+b*(+e*h*v-e*f*g+o*l*g-i*l*v+i*f*p-o*h*p)+S*(+e*f*m-e*c*v-o*l*m+n*l*v+o*c*p-n*f*p)+_*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],b=t[13],S=t[14],_=t[15],E=m*S*f-b*g*f+b*h*v-c*S*v-m*h*_+c*g*_,A=x*g*f-p*S*f-x*h*v+l*S*v+p*h*_-l*g*_,T=p*b*f-x*m*f+x*c*v-l*b*v-p*c*_+l*m*_,U=x*m*h-p*b*h-x*c*g+l*b*g+p*c*S-l*m*S,R=e*E+n*A+i*T+o*U;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/R;return t[0]=E*P,t[1]=(b*g*o-m*S*o-b*i*v+n*S*v+m*i*_-n*g*_)*P,t[2]=(c*S*o-b*h*o+b*i*f-n*S*f-c*i*_+n*h*_)*P,t[3]=(m*h*o-c*g*o-m*i*f+n*g*f+c*i*v-n*h*v)*P,t[4]=A*P,t[5]=(p*S*o-x*g*o+x*i*v-e*S*v-p*i*_+e*g*_)*P,t[6]=(x*h*o-l*S*o-x*i*f+e*S*f+l*i*_-e*h*_)*P,t[7]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*v+e*h*v)*P,t[8]=T*P,t[9]=(x*m*o-p*b*o-x*n*v+e*b*v+p*n*_-e*m*_)*P,t[10]=(l*b*o-x*c*o+x*n*f-e*b*f-l*n*_+e*c*_)*P,t[11]=(p*c*o-l*m*o-p*n*f+e*m*f+l*n*v-e*c*v)*P,t[12]=U*P,t[13]=(p*b*i-x*m*i+x*n*g-e*b*g-p*n*S+e*m*S)*P,t[14]=(x*c*i-l*b*i-x*n*h+e*b*h+l*n*S-e*c*S)*P,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*P,this}scale(t){const e=this.elements,n=t.x,i=t.y,o=t.z;return e[0]*=n,e[4]*=i,e[8]*=o,e[1]*=n,e[5]*=i,e[9]*=o,e[2]*=n,e[6]*=i,e[10]*=o,e[3]*=n,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),o=1-n,l=t.x,c=t.y,h=t.z,f=o*l,p=o*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,o*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,o,l){return this.set(1,n,o,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,f=o+o,p=l+l,m=c+c,g=o*f,v=o*p,x=o*m,b=l*p,S=l*m,_=c*m,E=h*f,A=h*p,T=h*m,U=n.x,R=n.y,P=n.z;return i[0]=(1-(b+_))*U,i[1]=(v+T)*U,i[2]=(x-A)*U,i[3]=0,i[4]=(v-T)*R,i[5]=(1-(g+_))*R,i[6]=(S+E)*R,i[7]=0,i[8]=(x+A)*P,i[9]=(S-E)*P,i[10]=(1-(g+b))*P,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let o=jr.set(i[0],i[1],i[2]).length();const l=jr.set(i[4],i[5],i[6]).length(),c=jr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],Wi.copy(this);const f=1/o,p=1/l,m=1/c;return Wi.elements[0]*=f,Wi.elements[1]*=f,Wi.elements[2]*=f,Wi.elements[4]*=p,Wi.elements[5]*=p,Wi.elements[6]*=p,Wi.elements[8]*=m,Wi.elements[9]*=m,Wi.elements[10]*=m,e.setFromRotationMatrix(Wi),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,i,o,l,c=Si,h=!1){const f=this.elements,p=2*o/(e-t),m=2*o/(n-i),g=(e+t)/(e-t),v=(n+i)/(n-i);let x,b;if(h)x=o/(l-o),b=l*o/(l-o);else if(c===Si)x=-(l+o)/(l-o),b=-2*l*o/(l-o);else if(c===To)x=-l/(l-o),b=-l*o/(l-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=g,f[12]=0,f[1]=0,f[5]=m,f[9]=v,f[13]=0,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=-1,f[15]=0,this}makeOrthographic(t,e,n,i,o,l,c=Si,h=!1){const f=this.elements,p=2/(e-t),m=2/(n-i),g=-(e+t)/(e-t),v=-(n+i)/(n-i);let x,b;if(h)x=1/(l-o),b=l/(l-o);else if(c===Si)x=-2/(l-o),b=-(l+o)/(l-o);else if(c===To)x=-1/(l-o),b=-o/(l-o);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=0,f[12]=g,f[1]=0,f[5]=m,f[9]=0,f[13]=v,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=0,f[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const jr=new I,Wi=new fe,rT=new I(0,0,0),oT=new I(1,1,1),aa=new I,nu=new I,_i=new I,Lv=new fe,Pv=new Hn;class bi{constructor(t=0,e=0,n=0,i=bi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,o=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(he(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-he(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(he(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-he(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(he(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-he(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Lv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Lv,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Pv.setFromEuler(this),this.setFromQuaternion(Pv,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}bi.DEFAULT_ORDER="XYZ";class wo{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let lT=0;const Iv=new I,Kr=new Hn,ws=new fe,iu=new I,ml=new I,cT=new I,uT=new Hn,Ov=new I(1,0,0),Bv=new I(0,1,0),zv=new I(0,0,1),Fv={type:"added"},hT={type:"removed"},Jr={type:"childadded",child:null},sp={type:"childremoved",child:null};class Le extends cs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:lT++}),this.uuid=Mi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Le.DEFAULT_UP.clone();const t=new I,e=new bi,n=new Hn,i=new I(1,1,1);function o(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(o),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new fe},normalMatrix:{value:new ge}}),this.matrix=new fe,this.matrixWorld=new fe,this.matrixAutoUpdate=Le.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new wo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Kr.setFromAxisAngle(t,e),this.quaternion.multiply(Kr),this}rotateOnWorldAxis(t,e){return Kr.setFromAxisAngle(t,e),this.quaternion.premultiply(Kr),this}rotateX(t){return this.rotateOnAxis(Ov,t)}rotateY(t){return this.rotateOnAxis(Bv,t)}rotateZ(t){return this.rotateOnAxis(zv,t)}translateOnAxis(t,e){return Iv.copy(t).applyQuaternion(this.quaternion),this.position.add(Iv.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ov,t)}translateY(t){return this.translateOnAxis(Bv,t)}translateZ(t){return this.translateOnAxis(zv,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(ws.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?iu.copy(t):iu.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ml.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ws.lookAt(ml,iu,this.up):ws.lookAt(iu,ml,this.up),this.quaternion.setFromRotationMatrix(ws),i&&(ws.extractRotation(i.matrixWorld),Kr.setFromRotationMatrix(ws),this.quaternion.premultiply(Kr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Fv),Jr.child=t,this.dispatchEvent(Jr),Jr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(hT),sp.child=t,this.dispatchEvent(sp),sp.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),ws.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),ws.multiply(t.parent.matrixWorld)),t.applyMatrix4(ws),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Fv),Jr.child=t,this.dispatchEvent(Jr),Jr.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ml,t,cT),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ml,uT,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function o(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];o(t.shapes,m)}else o(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(o(t.materials,this.material[h]));i.material=c}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(o(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Le.DEFAULT_UP=new I(0,1,0);Le.DEFAULT_MATRIX_AUTO_UPDATE=!0;Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Xi=new I,Cs=new I,ap=new I,Rs=new I,Qr=new I,$r=new I,Hv=new I,rp=new I,op=new I,lp=new I,cp=new Ne,up=new Ne,hp=new Ne;class si{constructor(t=new I,e=new I,n=new I){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Xi.subVectors(t,e),i.cross(Xi);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,n,i,o){Xi.subVectors(i,e),Cs.subVectors(n,e),ap.subVectors(t,e);const l=Xi.dot(Xi),c=Xi.dot(Cs),h=Xi.dot(ap),f=Cs.dot(Cs),p=Cs.dot(ap),m=l*f-c*c;if(m===0)return o.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return o.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Rs)===null?!1:Rs.x>=0&&Rs.y>=0&&Rs.x+Rs.y<=1}static getInterpolation(t,e,n,i,o,l,c,h){return this.getBarycoord(t,e,n,i,Rs)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,Rs.x),h.addScaledVector(l,Rs.y),h.addScaledVector(c,Rs.z),h)}static getInterpolatedAttribute(t,e,n,i,o,l){return cp.setScalar(0),up.setScalar(0),hp.setScalar(0),cp.fromBufferAttribute(t,e),up.fromBufferAttribute(t,n),hp.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(cp,o.x),l.addScaledVector(up,o.y),l.addScaledVector(hp,o.z),l}static isFrontFacing(t,e,n,i){return Xi.subVectors(n,e),Cs.subVectors(t,e),Xi.cross(Cs).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Xi.subVectors(this.c,this.b),Cs.subVectors(this.a,this.b),Xi.cross(Cs).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return si.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return si.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,o){return si.getInterpolation(t,this.a,this.b,this.c,e,n,i,o)}containsPoint(t){return si.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return si.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,o=this.c;let l,c;Qr.subVectors(i,n),$r.subVectors(o,n),rp.subVectors(t,n);const h=Qr.dot(rp),f=$r.dot(rp);if(h<=0&&f<=0)return e.copy(n);op.subVectors(t,i);const p=Qr.dot(op),m=$r.dot(op);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(Qr,l);lp.subVectors(t,o);const v=Qr.dot(lp),x=$r.dot(lp);if(x>=0&&v<=x)return e.copy(o);const b=v*f-h*x;if(b<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector($r,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return Hv.subVectors(o,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(Hv,c);const _=1/(S+b+g);return l=b*_,c=g*_,e.copy(n).addScaledVector(Qr,l).addScaledVector($r,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const vx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ra={h:0,s:0,l:0},su={h:0,s:0,l:0};function fp(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class Gt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=zn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Re.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Re.workingColorSpace){return this.r=t,this.g=e,this.b=n,Re.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Re.workingColorSpace){if(t=Im(t,1),e=he(e,0,1),n=he(n,0,1),e===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+e):n+e-n*e,l=2*n-o;this.r=fp(l,o,t+1/3),this.g=fp(l,o,t),this.b=fp(l,o,t-1/3)}return Re.colorSpaceToWorking(this,i),this}setStyle(t,e=zn){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],l=o.length;if(l===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=zn){const n=vx[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Is(t.r),this.g=Is(t.g),this.b=Is(t.b),this}copyLinearToSRGB(t){return this.r=xo(t.r),this.g=xo(t.g),this.b=xo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=zn){return Re.workingToColorSpace(On.copy(this),t),Math.round(he(On.r*255,0,255))*65536+Math.round(he(On.g*255,0,255))*256+Math.round(he(On.b*255,0,255))}getHexString(t=zn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Re.workingColorSpace){Re.workingToColorSpace(On.copy(this),e);const n=On.r,i=On.g,o=On.b,l=Math.max(n,i,o),c=Math.min(n,i,o);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-o)/m+(i<o?6:0);break;case i:h=(o-n)/m+2;break;case o:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=Re.workingColorSpace){return Re.workingToColorSpace(On.copy(this),e),t.r=On.r,t.g=On.g,t.b=On.b,t}getStyle(t=zn){Re.workingToColorSpace(On.copy(this),t);const e=On.r,n=On.g,i=On.b;return t!==zn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(ra),this.setHSL(ra.h+t,ra.s+e,ra.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ra),t.getHSL(su);const n=Pl(ra.h,su.h,e),i=Pl(ra.s,su.s,e),o=Pl(ra.l,su.l,e);return this.setHSL(n,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*n+o[6]*i,this.g=o[1]*e+o[4]*n+o[7]*i,this.b=o[2]*e+o[5]*n+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const On=new Gt;Gt.NAMES=vx;let fT=0;class Gn extends cs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:fT++}),this.uuid=Mi(),this.name="",this.type="Material",this.blending=lr,this.side=Os,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Ku,this.blendDst=Ju,this.blendEquation=ua,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Gt(0,0,0),this.blendAlpha=0,this.depthFunc=hr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=am,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=nr,this.stencilZFail=nr,this.stencilZPass=nr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(t).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(t).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==lr&&(n.blending=this.blending),this.side!==Os&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Ku&&(n.blendSrc=this.blendSrc),this.blendDst!==Ju&&(n.blendDst=this.blendDst),this.blendEquation!==ua&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==hr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==am&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==nr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==nr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==nr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}if(e){const o=i(t.textures),l=i(t.images);o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let o=0;o!==i;++o)n[o]=e[o].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class _a extends Gn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Gt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ic,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Ls=dT();function dT(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const o=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,o[h]=f|p}for(let h=1024;h<2048;++h)o[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:o,exponentTable:l,offsetTable:c}}function ni(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=he(s,-65504,65504),Ls.floatView[0]=s;const t=Ls.uint32View[0],e=t>>23&511;return Ls.baseTable[e]+((t&8388607)>>Ls.shiftTable[e])}function Tl(s){const t=s>>10;return Ls.uint32View[0]=Ls.mantissaTable[Ls.offsetTable[t]+(s&1023)]+Ls.exponentTable[t],Ls.floatView[0]}class pT{static toHalfFloat(t){return ni(t)}static fromHalfFloat(t){return Tl(t)}}const hn=new I,au=new ft;let mT=0;class We{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:mT++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Xl,this.updateRanges=[],this.gpuType=ai,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)au.fromBufferAttribute(this,e),au.applyMatrix3(t),this.setXY(e,au.x,au.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)hn.fromBufferAttribute(this,e),hn.applyMatrix3(t),this.setXYZ(e,hn.x,hn.y,hn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)hn.fromBufferAttribute(this,e),hn.applyMatrix4(t),this.setXYZ(e,hn.x,hn.y,hn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)hn.fromBufferAttribute(this,e),hn.applyNormalMatrix(t),this.setXYZ(e,hn.x,hn.y,hn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)hn.fromBufferAttribute(this,e),hn.transformDirection(t),this.setXYZ(e,hn.x,hn.y,hn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=_e(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array),o=_e(o,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Xl&&(t.usage=this.usage),t}}class gT extends We{constructor(t,e,n){super(new Int8Array(t),e,n)}}class vT extends We{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class _T extends We{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class yT extends We{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Bm extends We{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class xT extends We{constructor(t,e,n){super(new Int32Array(t),e,n)}}class zm extends We{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class ST extends We{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Tl(this.array[t*this.itemSize]);return this.normalized&&(e=jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize]=ni(e),this}getY(t){let e=Tl(this.array[t*this.itemSize+1]);return this.normalized&&(e=jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+1]=ni(e),this}getZ(t){let e=Tl(this.array[t*this.itemSize+2]);return this.normalized&&(e=jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+2]=ni(e),this}getW(t){let e=Tl(this.array[t*this.itemSize+3]);return this.normalized&&(e=jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+3]=ni(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array)),this.array[t+0]=ni(e),this.array[t+1]=ni(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array)),this.array[t+0]=ni(e),this.array[t+1]=ni(n),this.array[t+2]=ni(i),this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array),o=_e(o,this.array)),this.array[t+0]=ni(e),this.array[t+1]=ni(n),this.array[t+2]=ni(i),this.array[t+3]=ni(o),this}}class jt extends We{constructor(t,e,n){super(new Float32Array(t),e,n)}}let MT=0;const Li=new fe,dp=new Le,to=new I,yi=new Vn,gl=new Vn,bn=new I;class ye extends cs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:MT++}),this.uuid=Mi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(px(t)?zm:Bm)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new ge().getNormalMatrix(t);n.applyNormalMatrix(o),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Li.makeRotationFromQuaternion(t),this.applyMatrix4(Li),this}rotateX(t){return Li.makeRotationX(t),this.applyMatrix4(Li),this}rotateY(t){return Li.makeRotationY(t),this.applyMatrix4(Li),this}rotateZ(t){return Li.makeRotationZ(t),this.applyMatrix4(Li),this}translate(t,e,n){return Li.makeTranslation(t,e,n),this.applyMatrix4(Li),this}scale(t,e,n){return Li.makeScale(t,e,n),this.applyMatrix4(Li),this}lookAt(t){return dp.lookAt(t),dp.updateMatrix(),this.applyMatrix4(dp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(to).negate(),this.translate(to.x,to.y,to.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,o=t.length;i<o;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new jt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Vn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const o=e[n];yi.setFromBufferAttribute(o),this.morphTargetsRelative?(bn.addVectors(this.boundingBox.min,yi.min),this.boundingBox.expandByPoint(bn),bn.addVectors(this.boundingBox.max,yi.max),this.boundingBox.expandByPoint(bn)):(this.boundingBox.expandByPoint(yi.min),this.boundingBox.expandByPoint(yi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new I,1/0);return}if(t){const n=this.boundingSphere.center;if(yi.setFromBufferAttribute(t),e)for(let o=0,l=e.length;o<l;o++){const c=e[o];gl.setFromBufferAttribute(c),this.morphTargetsRelative?(bn.addVectors(yi.min,gl.min),yi.expandByPoint(bn),bn.addVectors(yi.max,gl.max),yi.expandByPoint(bn)):(yi.expandByPoint(gl.min),yi.expandByPoint(gl.max))}yi.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)bn.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared(bn));if(e)for(let o=0,l=e.length;o<l;o++){const c=e[o],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)bn.fromBufferAttribute(c,f),h&&(to.fromBufferAttribute(t,f),bn.add(to)),i=Math.max(i,n.distanceToSquared(bn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new We(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let B=0;B<n.count;B++)c[B]=new I,h[B]=new I;const f=new I,p=new I,m=new I,g=new ft,v=new ft,x=new ft,b=new I,S=new I;function _(B,C,w){f.fromBufferAttribute(n,B),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(o,B),v.fromBufferAttribute(o,C),x.fromBufferAttribute(o,w),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const z=1/(v.x*x.y-x.x*v.y);isFinite(z)&&(b.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(z),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(z),c[B].add(b),c[C].add(b),c[w].add(b),h[B].add(S),h[C].add(S),h[w].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let B=0,C=E.length;B<C;++B){const w=E[B],z=w.start,Y=w.count;for(let X=z,$=z+Y;X<$;X+=3)_(t.getX(X+0),t.getX(X+1),t.getX(X+2))}const A=new I,T=new I,U=new I,R=new I;function P(B){U.fromBufferAttribute(i,B),R.copy(U);const C=c[B];A.copy(C),A.sub(U.multiplyScalar(U.dot(C))).normalize(),T.crossVectors(R,C);const z=T.dot(h[B])<0?-1:1;l.setXYZW(B,A.x,A.y,A.z,z)}for(let B=0,C=E.length;B<C;++B){const w=E[B],z=w.start,Y=w.count;for(let X=z,$=z+Y;X<$;X+=3)P(t.getX(X+0)),P(t.getX(X+1)),P(t.getX(X+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new We(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new I,o=new I,l=new I,c=new I,h=new I,f=new I,p=new I,m=new I;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),b=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),o.fromBufferAttribute(e,b),l.fromBufferAttribute(e,S),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,b),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(b,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)bn.fromBufferAttribute(t,e),bn.normalize(),t.setXYZ(e,bn.x,bn.y,bn.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let b=0,S=h.length;b<S;b++){c.isInterleavedBufferAttribute?v=h[b]*c.data.stride+c.offset:v=h[b]*p;for(let _=0;_<p;_++)g[x++]=f[v++]}return new We(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ye,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const o=this.morphAttributes;for(const c in o){const h=[],f=o[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const o=t.morphAttributes;for(const f in o){const p=[],m=o[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Vv=new fe,Ga=new mr,ru=new Cn,Gv=new I,ou=new I,lu=new I,cu=new I,pp=new I,uu=new I,kv=new I,hu=new I;class fn extends Le{constructor(t=new ye,e=new _a){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(o&&c){uu.set(0,0,0);for(let h=0,f=o.length;h<f;h++){const p=c[h],m=o[h];p!==0&&(pp.fromBufferAttribute(m,t),l?uu.addScaledVector(pp,p):uu.addScaledVector(pp.sub(e),p))}e.add(uu)}return e}raycast(t,e){const n=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ru.copy(n.boundingSphere),ru.applyMatrix4(o),Ga.copy(t.ray).recast(t.near),!(ru.containsPoint(Ga.origin)===!1&&(Ga.intersectSphere(ru,Gv)===null||Ga.origin.distanceToSquared(Gv)>(t.far-t.near)**2))&&(Vv.copy(o).invert(),Ga.copy(t.ray).applyMatrix4(Vv),!(n.boundingBox!==null&&Ga.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Ga)))}_computeIntersections(t,e,n){let i;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,f=o.attributes.uv,p=o.attributes.uv1,m=o.attributes.normal,g=o.groups,v=o.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const R=c.getX(T),P=c.getX(T+1),B=c.getX(T+2);i=fu(this,_,t,n,f,p,m,R,P,B),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(c.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);i=fu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const R=T,P=T+1,B=T+2;i=fu(this,_,t,n,f,p,m,R,P,B),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(h.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=S,A=S+1,T=S+2;i=fu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function bT(s,t,e,n,i,o,l,c){let h;if(t.side===Kn?h=n.intersectTriangle(l,o,i,!0,c):h=n.intersectTriangle(i,o,l,t.side===Os,c),h===null)return null;hu.copy(c),hu.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(hu);return f<e.near||f>e.far?null:{distance:f,point:hu.clone(),object:s}}function fu(s,t,e,n,i,o,l,c,h,f){s.getVertexPosition(c,ou),s.getVertexPosition(h,lu),s.getVertexPosition(f,cu);const p=bT(s,t,e,n,ou,lu,cu,kv);if(p){const m=new I;si.getBarycoord(kv,ou,lu,cu,m),i&&(p.uv=si.getInterpolatedAttribute(i,c,h,f,m,new ft)),o&&(p.uv1=si.getInterpolatedAttribute(o,c,h,f,m,new ft)),l&&(p.normal=si.getInterpolatedAttribute(l,c,h,f,m,new I),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new I,materialIndex:0};si.getNormal(ou,lu,cu,g.normal),p.face=g,p.barycoord=m}return p}class gr extends ye{constructor(t=1,e=1,n=1,i=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:o,depthSegments:l};const c=this;i=Math.floor(i),o=Math.floor(o),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,o,4),x("x","y","z",-1,-1,t,e,-n,i,o,5),this.setIndex(h),this.setAttribute("position",new jt(f,3)),this.setAttribute("normal",new jt(p,3)),this.setAttribute("uv",new jt(m,2));function x(b,S,_,E,A,T,U,R,P,B,C){const w=T/P,z=U/B,Y=T/2,X=U/2,$=R/2,it=P+1,k=B+1;let et=0,q=0;const lt=new I;for(let yt=0;yt<k;yt++){const St=yt*z-X;for(let It=0;It<it;It++){const Qt=It*w-Y;lt[b]=Qt*E,lt[S]=St*A,lt[_]=$,f.push(lt.x,lt.y,lt.z),lt[b]=0,lt[S]=0,lt[_]=R>0?1:-1,p.push(lt.x,lt.y,lt.z),m.push(It/P),m.push(1-yt/B),et+=1}}for(let yt=0;yt<B;yt++)for(let St=0;St<P;St++){const It=g+St+it*yt,Qt=g+St+it*(yt+1),Kt=g+(St+1)+it*(yt+1),le=g+(St+1)+it*yt;h.push(It,Qt,le),h.push(Qt,Kt,le),q+=6}c.addGroup(v,q,C),v+=q,g+=et}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new gr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Co(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Zn(s){const t={};for(let e=0;e<s.length;e++){const n=Co(s[e]);for(const i in n)t[i]=n[i]}return t}function ET(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function _x(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Re.workingColorSpace}const yx={clone:Co,merge:Zn};var TT=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,AT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ji extends Gn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=TT,this.fragmentShader=AT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Co(t.uniforms),this.uniformsGroups=ET(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class ef extends Le{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new fe,this.projectionMatrix=new fe,this.projectionMatrixInverse=new fe,this.coordinateSystem=Si,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const oa=new I,Wv=new ft,Xv=new ft;class ln extends ef{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Ao*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(cr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Ao*2*Math.atan(Math.tan(cr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){oa.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(oa.x,oa.y).multiplyScalar(-t/oa.z),oa.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(oa.x,oa.y).multiplyScalar(-t/oa.z)}getViewSize(t,e){return this.getViewBounds(t,Wv,Xv),e.subVectors(Xv,Wv)}setViewOffset(t,e,n,i,o,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(cr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,o=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;o+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const eo=-90,no=1;class xx extends Le{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new ln(eo,no,t,e);i.layers=this.layers,this.add(i);const o=new ln(eo,no,t,e);o.layers=this.layers,this.add(o);const l=new ln(eo,no,t,e);l.layers=this.layers,this.add(l);const c=new ln(eo,no,t,e);c.layers=this.layers,this.add(c);const h=new ln(eo,no,t,e);h.layers=this.layers,this.add(h);const f=new ln(eo,no,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,o,l,c,h]=e;for(const f of e)this.remove(f);if(t===Si)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===To)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,o),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=b,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class ac extends rn{constructor(t=[],e=Bs,n,i,o,l,c,h,f,p){super(t,e,n,i,o,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Sx extends ls{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new ac(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new gr(5,5,5),o=new ji({name:"CubemapFromEquirect",uniforms:Co(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Kn,blending:Ps});o.uniforms.tEquirect.value=e;const l=new fn(i,o),c=e.minFilter;return e.minFilter===ss&&(e.minFilter=pn),new xx(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const o=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(o)}}class _o extends Le{constructor(){super(),this.isGroup=!0,this.type="Group"}}const wT={type:"move"};class Yu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new _o,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new _o,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new _o,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,o=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const b of t.hand.values()){const S=e.getJointPose(b,n),_=this._getHandJoint(f,b);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&o!==null&&(i=o),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(wT)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new _o;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class nf{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Gt(t),this.density=e}clone(){return new nf(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class sf{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Gt(t),this.near=e,this.far=n}clone(){return new sf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Fm extends Le{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new bi,this.environmentIntensity=1,this.environmentRotation=new bi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class af{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Xl,this.updateRanges=[],this.version=0,this.uuid=Mi()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,o=this.stride;i<o;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Yn=new I;class fr{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Yn.fromBufferAttribute(this,e),Yn.applyMatrix4(t),this.setXYZ(e,Yn.x,Yn.y,Yn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Yn.fromBufferAttribute(this,e),Yn.applyNormalMatrix(t),this.setXYZ(e,Yn.x,Yn.y,Yn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Yn.fromBufferAttribute(this,e),Yn.transformDirection(t),this.setXYZ(e,Yn.x,Yn.y,Yn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=_e(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=jn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=jn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=jn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=jn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t=t*this.data.stride+this.offset,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array),o=_e(o,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=o,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return new We(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new fr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Hm extends Gn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Gt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let io;const vl=new I,so=new I,ao=new I,ro=new ft,_l=new ft,Mx=new fe,du=new I,yl=new I,pu=new I,qv=new ft,mp=new ft,Yv=new ft;class bx extends Le{constructor(t=new Hm){if(super(),this.isSprite=!0,this.type="Sprite",io===void 0){io=new ye;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new af(e,5);io.setIndex([0,1,2,0,2,3]),io.setAttribute("position",new fr(n,3,0,!1)),io.setAttribute("uv",new fr(n,2,3,!1))}this.geometry=io,this.material=t,this.center=new ft(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),so.setFromMatrixScale(this.matrixWorld),Mx.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ao.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&so.multiplyScalar(-ao.z);const n=this.material.rotation;let i,o;n!==0&&(o=Math.cos(n),i=Math.sin(n));const l=this.center;mu(du.set(-.5,-.5,0),ao,l,so,i,o),mu(yl.set(.5,-.5,0),ao,l,so,i,o),mu(pu.set(.5,.5,0),ao,l,so,i,o),qv.set(0,0),mp.set(1,0),Yv.set(1,1);let c=t.ray.intersectTriangle(du,yl,pu,!1,vl);if(c===null&&(mu(yl.set(-.5,.5,0),ao,l,so,i,o),mp.set(0,1),c=t.ray.intersectTriangle(du,pu,yl,!1,vl),c===null))return;const h=t.ray.origin.distanceTo(vl);h<t.near||h>t.far||e.push({distance:h,point:vl.clone(),uv:si.getInterpolation(vl,du,yl,pu,qv,mp,Yv,new ft),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function mu(s,t,e,n,i,o){ro.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(_l.x=o*ro.x-i*ro.y,_l.y=i*ro.x+o*ro.y):_l.copy(ro),s.copy(t),s.x+=_l.x,s.y+=_l.y,s.applyMatrix4(Mx)}const gu=new I,Zv=new I;class Ex extends Le{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const o=e[n];this.addLevel(o.object.clone(),o.distance,o.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let o;for(o=0;o<i.length&&!(e<i[o].distance);o++);return i.splice(o,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),t<o)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){gu.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(gu);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){gu.setFromMatrixPosition(t.matrixWorld),Zv.setFromMatrixPosition(this.matrixWorld);const n=gu.distanceTo(Zv)/t.zoom;e[0].object.visible=!0;let i,o;for(i=1,o=e.length;i<o;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<o;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,o=n.length;i<o;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const jv=new I,Kv=new Ne,Jv=new Ne,CT=new I,Qv=new fe,vu=new I,gp=new Cn,$v=new fe,vp=new mr;class Tx extends fn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=sm,this.bindMatrix=new fe,this.bindMatrixInverse=new fe,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new Vn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,vu),this.boundingBox.expandByPoint(vu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Cn),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,vu),this.boundingSphere.expandByPoint(vu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),gp.copy(this.boundingSphere),gp.applyMatrix4(i),t.ray.intersectsSphere(gp)!==!1&&($v.copy(i).invert(),vp.copy(t.ray).applyMatrix4($v),!(this.boundingBox!==null&&vp.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,vp)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Ne,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const o=1/t.manhattanLength();o!==1/0?t.multiplyScalar(o):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===sm?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===tx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Kv.fromBufferAttribute(i.attributes.skinIndex,t),Jv.fromBufferAttribute(i.attributes.skinWeight,t),jv.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let o=0;o<4;o++){const l=Jv.getComponent(o);if(l!==0){const c=Kv.getComponent(o);Qv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(CT.copy(jv).applyMatrix4(Qv),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Vm extends Le{constructor(){super(),this.isBone=!0,this.type="Bone"}}class os extends rn{constructor(t=null,e=1,n=1,i,o,l,c,h,f=wn,p=wn,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const t_=new fe,RT=new fe;class rf{constructor(t=[],e=[]){this.uuid=Mi(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new fe)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new fe;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let o=0,l=t.length;o<l;o++){const c=t[o]?t[o].matrixWorld:RT;t_.multiplyMatrices(c,e[o]),t_.toArray(n,o*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new rf(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new os(e,t,t,Fn,ai);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const o=t.bones[n];let l=e[o];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),l=new Vm),this.bones.push(l),this.boneInverses.push(new fe().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,o=e.length;i<o;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class Ro extends We{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const oo=new fe,e_=new fe,_u=[],n_=new Vn,DT=new fe,xl=new fn,Sl=new Cn;class Ax extends fn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Ro(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,DT)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new Vn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,oo),n_.copy(t.boundingBox).applyMatrix4(oo),this.boundingBox.union(n_)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new Cn),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,oo),Sl.copy(t.boundingSphere).applyMatrix4(oo),this.boundingSphere.union(Sl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=n.length+1,l=t*o+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(xl.geometry=this.geometry,xl.material=this.material,xl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Sl.copy(this.boundingSphere),Sl.applyMatrix4(n),t.ray.intersectsSphere(Sl)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,oo),e_.multiplyMatrices(n,oo),xl.matrixWorld=e_,xl.raycast(t,_u);for(let l=0,c=_u.length;l<c;l++){const h=_u[l];h.instanceId=o,h.object=this,e.push(h)}_u.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Ro(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new os(new Float32Array(i*this.count),i,this.count,jh,ai));const o=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;o[h]=c,o.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const _p=new I,UT=new I,NT=new ge;class Us{constructor(t=new I(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=_p.subVectors(n,e).cross(UT.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(_p),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(n,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||NT.getNormalMatrix(t),i=this.coplanarPoint(_p).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ka=new Cn,LT=new ft(.5,.5),yu=new I;class Po{constructor(t=new Us,e=new Us,n=new Us,i=new Us,o=new Us,l=new Us){this.planes=[t,e,n,i,o,l]}set(t,e,n,i,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Si,n=!1){const i=this.planes,o=t.elements,l=o[0],c=o[1],h=o[2],f=o[3],p=o[4],m=o[5],g=o[6],v=o[7],x=o[8],b=o[9],S=o[10],_=o[11],E=o[12],A=o[13],T=o[14],U=o[15];if(i[0].setComponents(f-l,v-p,_-x,U-E).normalize(),i[1].setComponents(f+l,v+p,_+x,U+E).normalize(),i[2].setComponents(f+c,v+m,_+b,U+A).normalize(),i[3].setComponents(f-c,v-m,_-b,U-A).normalize(),n)i[4].setComponents(h,g,S,T).normalize(),i[5].setComponents(f-h,v-g,_-S,U-T).normalize();else if(i[4].setComponents(f-h,v-g,_-S,U-T).normalize(),e===Si)i[5].setComponents(f+h,v+g,_+S,U+T).normalize();else if(e===To)i[5].setComponents(h,g,S,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),ka.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),ka.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(ka)}intersectsSprite(t){ka.center.set(0,0,0);const e=LT.distanceTo(t.center);return ka.radius=.7071067811865476+e,ka.applyMatrix4(t.matrixWorld),this.intersectsSphere(ka)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(yu.x=i.normal.x>0?t.max.x:t.min.x,yu.y=i.normal.y>0?t.max.y:t.min.y,yu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(yu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const es=new fe,ns=new Po;class of{constructor(){this.coordinateSystem=Si}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.containsPoint(t))return!0}return!1}clone(){return new of}}function yp(s,t){return s-t}function PT(s,t){return s.z-t.z}function IT(s,t){return t.z-s.z}class OT{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const o=this.pool,l=this.list;this.index>=o.length&&o.push({start:-1,count:-1,z:-1,index:-1});const c=o[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const ei=new fe,BT=new Gt(1,1,1),i_=new Po,zT=new of,xu=new Vn,Wa=new Cn,Ml=new I,s_=new I,FT=new I,xp=new OT,Bn=new fn,Su=[];function HT(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let o=0;o<i;o++)for(let l=0;l<n;l++)t.setComponent(o+e,l,s.getComponent(o,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function Xa(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class wx extends fn{constructor(t,e,n=e*2,i){super(new ye,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new os(e,t,t,Fn,ai);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new os(e,t,t,sc,zs);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new os(e,t,t,Fn,ai);n.colorSpace=Re.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in t.attributes){const l=t.getAttribute(o),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new We(p,h,f);e.setAttribute(o,m)}if(t.getIndex()!==null){const o=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new We(o,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),o=e.getAttribute(n);if(i.itemSize!==o.itemSize||i.normalized!==o.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Vn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ei),this.getBoundingBoxAt(o,xu).applyMatrix4(ei),t.union(xu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ei),this.getBoundingSphereAt(o,Wa).applyMatrix4(ei),t.union(Wa)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(yp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const o=this._matricesTexture;ei.identity().toArray(o.image.data,i*16),o.needsUpdate=!0;const l=this._colorsTexture;return l&&(BT.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},o=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(yp),h=this._availableGeometryIds.shift(),o[h]=i):(h=this._geometryCount,this._geometryCount++,o.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,o=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);HT(m,g,h);const v=m.itemSize;for(let x=m.count,b=f;x<b;x++){const S=h+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)o.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)o.setX(p+g,h);o.needsUpdate=!0,o.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,o=n.length;i<o;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),o=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(o.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=o.index,x=v.array,b=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+b;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=o.attributes;for(const v in g){const x=g[v],{array:b,itemSize:S}=x;b.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=o.index?f.indexStart:f.vertexStart,this._nextIndexStart=o.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const o=new Vn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),o.expandByPoint(Ml.fromBufferAttribute(c,p))}i.boundingBox=o}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const o=new Cn;this.getBoundingBoxAt(t,xu),xu.getCenter(o.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),Ml.fromBufferAttribute(c,m),h=Math.max(h,o.center.distanceToSquared(Ml))}o.radius=Math.sqrt(h),i.boundingSphere=o}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(yp);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),o=new Int32Array(t);Xa(this._multiDrawCounts,i),Xa(this._multiDrawStarts,o),this._multiDrawCounts=i,this._multiDrawStarts=o,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Xa(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Xa(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),Xa(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const o=this.geometry;o.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new ye,this._initializeGeometry(o));const l=this.geometry;o.index&&Xa(o.index.array,l.index.array);for(const c in o.attributes)Xa(o.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,o=this.matrixWorld,l=this.geometry;Bn.material=this.material,Bn.geometry.index=l.index,Bn.geometry.attributes=l.attributes,Bn.geometry.boundingBox===null&&(Bn.geometry.boundingBox=new Vn),Bn.geometry.boundingSphere===null&&(Bn.geometry.boundingSphere=new Cn);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];Bn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,Bn.matrixWorld).premultiply(o),this.getBoundingBoxAt(f,Bn.geometry.boundingBox),this.getBoundingSphereAt(f,Bn.geometry.boundingSphere),Bn.raycast(t,Su);for(let m=0,g=Su.length;m<g;m++){const v=Su[m];v.object=this,v.batchId=c,e.push(v)}Su.length=0}Bn.material=null,Bn.geometry.index=null,Bn.geometry.attributes={},Bn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,o){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,b=n.isArrayCamera?zT:i_;g&&!n.isArrayCamera&&(ei.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),i_.setFromProjectionMatrix(ei,n.coordinateSystem,n.reversedDepth));let S=0;if(this.sortObjects){ei.copy(this.matrixWorld).invert(),Ml.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ei),s_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ei);for(let A=0,T=h.length;A<T;A++)if(h[A].visible&&h[A].active){const U=h[A].geometryIndex;this.getMatrixAt(A,ei),this.getBoundingSphereAt(U,Wa).applyMatrix4(ei);let R=!1;if(g&&(R=!b.intersectsSphere(Wa,n)),!R){const P=m[U],B=FT.subVectors(Wa.center,Ml).dot(s_);xp.push(P.start,P.count,B,A)}}const _=xp.list,E=this.customSort;E===null?_.sort(o.transparent?IT:PT):E.call(this,_,n);for(let A=0,T=_.length;A<T;A++){const U=_[A];f[S]=U.start*c,p[S]=U.count,x[S]=U.index,S++}xp.reset()}else for(let _=0,E=h.length;_<E;_++)if(h[_].visible&&h[_].active){const A=h[_].geometryIndex;let T=!1;if(g&&(this.getMatrixAt(_,ei),this.getBoundingSphereAt(A,Wa).applyMatrix4(ei),T=!b.intersectsSphere(Wa,n)),!T){const U=m[A];f[S]=U.start*c,p[S]=U.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,o,l){this.onBeforeRender(t,null,i,o,l)}}class Jn extends Gn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Gt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Ph=new I,Ih=new I,a_=new fe,bl=new mr,Mu=new Cn,Sp=new I,r_=new I;class ga extends Le{constructor(t=new ye,e=new Jn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,o=e.count;i<o;i++)Ph.fromBufferAttribute(e,i-1),Ih.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Ph.distanceTo(Ih);t.setAttribute("lineDistance",new jt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mu.copy(n.boundingSphere),Mu.applyMatrix4(i),Mu.radius+=o,t.ray.intersectsSphere(Mu)===!1)return;a_.copy(i).invert(),bl.copy(t.ray).applyMatrix4(a_);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=p.getX(b),E=p.getX(b+1),A=bu(this,t,bl,h,_,E,b);A&&e.push(A)}if(this.isLineLoop){const b=p.getX(x-1),S=p.getX(v),_=bu(this,t,bl,h,b,S,x-1);_&&e.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=bu(this,t,bl,h,b,b+1,b);_&&e.push(_)}if(this.isLineLoop){const b=bu(this,t,bl,h,x-1,v,x-1);b&&e.push(b)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function bu(s,t,e,n,i,o,l){const c=s.geometry.attributes.position;if(Ph.fromBufferAttribute(c,i),Ih.fromBufferAttribute(c,o),e.distanceSqToSegment(Ph,Ih,Sp,r_)>n)return;Sp.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(Sp);if(!(f<t.near||f>t.far))return{distance:f,point:r_.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const o_=new I,l_=new I;class us extends ga{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,o=e.count;i<o;i+=2)o_.fromBufferAttribute(e,i),l_.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+o_.distanceTo(l_);t.setAttribute("lineDistance",new jt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Cx extends ga{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Gm extends Gn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Gt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const c_=new fe,om=new mr,Eu=new Cn,Tu=new I;class Rx extends Le{constructor(t=new ye,e=new Gm){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Eu.copy(n.boundingSphere),Eu.applyMatrix4(i),Eu.radius+=o,t.ray.intersectsSphere(Eu)===!1)return;c_.copy(i).invert(),om.copy(t.ray).applyMatrix4(c_);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,b=v;x<b;x++){const S=f.getX(x);Tu.fromBufferAttribute(m,S),u_(Tu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,b=v;x<b;x++)Tu.fromBufferAttribute(m,x),u_(Tu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function u_(s,t,e,n,i,o,l){const c=om.distanceSqToPoint(s);if(c<e){const h=new I;om.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;o.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class Dx extends rn{constructor(t,e,n,i,o=pn,l=pn,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const p=this;function m(){p.needsUpdate=!0,p._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class VT extends Dx{constructor(t,e,n,i,o,l,c,h){super({},t,e,n,i,o,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class GT extends rn{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=wn,this.minFilter=wn,this.generateMipmaps=!1,this.needsUpdate=!0}}class lf extends rn{constructor(t,e,n,i,o,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class kT extends lf{constructor(t,e,n,i,o,l){super(t,e,n,o,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Pi,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class WT extends lf{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Bs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class XT extends rn{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class km extends rn{constructor(t,e,n=zs,i,o,l,c=wn,h=wn,f,p=bo,m=1){if(p!==bo&&p!==Eo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,i,o,l,c,h,p,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new fa(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class Wm extends rn{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}copy(t){return super.copy(t),this.sourceTexture=t.sourceTexture,this}}class cf extends ye{constructor(t=1,e=1,n=4,i=8,o=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:o},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),o=Math.max(1,Math.floor(o));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+o,b=i+1,S=new I,_=new I;for(let E=0;E<=x;E++){let A=0,T=0,U=0,R=0;if(E<=n){const C=E/n,w=C*Math.PI/2;T=-p-t*Math.cos(w),U=t*Math.sin(w),R=-t*Math.cos(w),A=C*m}else if(E<=n+o){const C=(E-n)/o;T=-p+C*e,U=t,R=0,A=m+C*g}else{const C=(E-n-o)/n,w=C*Math.PI/2;T=p+t*Math.sin(w),U=t*Math.cos(w),R=t*Math.sin(w),A=m+g+C*m}const P=Math.max(0,Math.min(1,A/v));let B=0;E===0?B=.5/i:E===x&&(B=-.5/i);for(let C=0;C<=i;C++){const w=C/i,z=w*Math.PI*2,Y=Math.sin(z),X=Math.cos(z);_.x=-U*X,_.y=T,_.z=U*Y,c.push(_.x,_.y,_.z),S.set(-U*X,R,U*Y),S.normalize(),h.push(S.x,S.y,S.z),f.push(w+B,P)}if(E>0){const C=(E-1)*b;for(let w=0;w<i;w++){const z=C+w,Y=C+w+1,X=E*b+w,$=E*b+w+1;l.push(z,Y,X),l.push(Y,$,X)}}}this.setIndex(l),this.setAttribute("position",new jt(c,3)),this.setAttribute("normal",new jt(h,3)),this.setAttribute("uv",new jt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new cf(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class uf extends ye{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const o=[],l=[],c=[],h=[],f=new I,p=new ft;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new jt(l,3)),this.setAttribute("normal",new jt(c,3)),this.setAttribute("uv",new jt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new uf(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class rc extends ye{constructor(t=1,e=1,n=1,i=32,o=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),o=Math.floor(o);const p=[],m=[],g=[],v=[];let x=0;const b=[],S=n/2;let _=0;E(),l===!1&&(t>0&&A(!0),e>0&&A(!1)),this.setIndex(p),this.setAttribute("position",new jt(m,3)),this.setAttribute("normal",new jt(g,3)),this.setAttribute("uv",new jt(v,2));function E(){const T=new I,U=new I;let R=0;const P=(e-t)/n;for(let B=0;B<=o;B++){const C=[],w=B/o,z=w*(e-t)+t;for(let Y=0;Y<=i;Y++){const X=Y/i,$=X*h+c,it=Math.sin($),k=Math.cos($);U.x=z*it,U.y=-w*n+S,U.z=z*k,m.push(U.x,U.y,U.z),T.set(it,P,k).normalize(),g.push(T.x,T.y,T.z),v.push(X,1-w),C.push(x++)}b.push(C)}for(let B=0;B<i;B++)for(let C=0;C<o;C++){const w=b[C][B],z=b[C+1][B],Y=b[C+1][B+1],X=b[C][B+1];(t>0||C!==0)&&(p.push(w,z,X),R+=3),(e>0||C!==o-1)&&(p.push(z,Y,X),R+=3)}f.addGroup(_,R,0),_+=R}function A(T){const U=x,R=new ft,P=new I;let B=0;const C=T===!0?t:e,w=T===!0?1:-1;for(let Y=1;Y<=i;Y++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const z=x;for(let Y=0;Y<=i;Y++){const $=Y/i*h+c,it=Math.cos($),k=Math.sin($);P.x=C*k,P.y=S*w,P.z=C*it,m.push(P.x,P.y,P.z),g.push(0,w,0),R.x=it*.5+.5,R.y=k*.5*w+.5,v.push(R.x,R.y),x++}for(let Y=0;Y<i;Y++){const X=U+Y,$=z+Y;T===!0?p.push($,$+1,X):p.push($+1,$,X),B+=3}f.addGroup(_,B,T===!0?1:2),_+=B}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new rc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class oc extends rc{constructor(t=1,e=1,n=32,i=1,o=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(t){return new oc(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ya extends ye{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const o=[],l=[];c(i),f(n),p(),this.setAttribute("position",new jt(o,3)),this.setAttribute("normal",new jt(o.slice(),3)),this.setAttribute("uv",new jt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const A=new I,T=new I,U=new I;for(let R=0;R<e.length;R+=3)v(e[R+0],A),v(e[R+1],T),v(e[R+2],U),h(A,T,U,E)}function h(E,A,T,U){const R=U+1,P=[];for(let B=0;B<=R;B++){P[B]=[];const C=E.clone().lerp(T,B/R),w=A.clone().lerp(T,B/R),z=R-B;for(let Y=0;Y<=z;Y++)Y===0&&B===R?P[B][Y]=C:P[B][Y]=C.clone().lerp(w,Y/z)}for(let B=0;B<R;B++)for(let C=0;C<2*(R-B)-1;C++){const w=Math.floor(C/2);C%2===0?(g(P[B][w+1]),g(P[B+1][w]),g(P[B][w])):(g(P[B][w+1]),g(P[B+1][w+1]),g(P[B+1][w]))}}function f(E){const A=new I;for(let T=0;T<o.length;T+=3)A.x=o[T+0],A.y=o[T+1],A.z=o[T+2],A.normalize().multiplyScalar(E),o[T+0]=A.x,o[T+1]=A.y,o[T+2]=A.z}function p(){const E=new I;for(let A=0;A<o.length;A+=3){E.x=o[A+0],E.y=o[A+1],E.z=o[A+2];const T=S(E)/2/Math.PI+.5,U=_(E)/Math.PI+.5;l.push(T,1-U)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const A=l[E+0],T=l[E+2],U=l[E+4],R=Math.max(A,T,U),P=Math.min(A,T,U);R>.9&&P<.1&&(A<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),U<.2&&(l[E+4]+=1))}}function g(E){o.push(E.x,E.y,E.z)}function v(E,A){const T=E*3;A.x=t[T+0],A.y=t[T+1],A.z=t[T+2]}function x(){const E=new I,A=new I,T=new I,U=new I,R=new ft,P=new ft,B=new ft;for(let C=0,w=0;C<o.length;C+=9,w+=6){E.set(o[C+0],o[C+1],o[C+2]),A.set(o[C+3],o[C+4],o[C+5]),T.set(o[C+6],o[C+7],o[C+8]),R.set(l[w+0],l[w+1]),P.set(l[w+2],l[w+3]),B.set(l[w+4],l[w+5]),U.copy(E).add(A).add(T).divideScalar(3);const z=S(U);b(R,w+0,E,z),b(P,w+2,A,z),b(B,w+4,T,z)}}function b(E,A,T,U){U<0&&E.x===1&&(l[A]=E.x-1),T.x===0&&T.z===0&&(l[A]=U/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ya(t.vertices,t.indices,t.radius,t.details)}}class hf extends ya{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(o,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new hf(t.radius,t.detail)}}const Au=new I,wu=new I,Mp=new I,Cu=new si;class Ux extends ye{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),o=Math.cos(cr*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:b,b:S,c:_}=Cu;if(b.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),Cu.getNormal(Mp),m[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const A=(E+1)%3,T=m[E],U=m[A],R=Cu[p[E]],P=Cu[p[A]],B=`${T}_${U}`,C=`${U}_${T}`;C in g&&g[C]?(Mp.dot(g[C].normal)<=o&&(v.push(R.x,R.y,R.z),v.push(P.x,P.y,P.z)),g[C]=null):B in g||(g[B]={index0:f[E],index1:f[A],normal:Mp.clone()})}}for(const x in g)if(g[x]){const{index0:b,index1:S}=g[x];Au.fromBufferAttribute(c,b),wu.fromBufferAttribute(c,S),v.push(Au.x,Au.y,Au.z),v.push(wu.x,wu.y,wu.z)}this.setAttribute("position",new jt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Ki{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),o=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),o+=n.distanceTo(i),e.push(o),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const o=n.length;let l;e?l=e:l=t*n[o-1];let c=0,h=o-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(o-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(o-1)}getTangent(t,e){let i=t-1e-4,o=t+1e-4;i<0&&(i=0),o>1&&(o=1);const l=this.getPoint(i),c=this.getPoint(o),h=e||(l.isVector2?new ft:new I);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new I,i=[],o=[],l=[],c=new I,h=new fe;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new I)}o[0]=new I,l[0]=new I;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),o[0].crossVectors(i[0],c),l[0].crossVectors(i[0],o[0]);for(let v=1;v<=t;v++){if(o[v]=o[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(he(i[v-1].dot(i[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],o[v])}if(e===!0){let v=Math.acos(he(o[0].dot(o[t]),-1,1));v/=t,i[0].dot(c.crossVectors(o[0],o[t]))>0&&(v=-v);for(let x=1;x<=t;x++)o[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],o[x])}return{tangents:i,normals:o,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class ff extends Ki{constructor(t=0,e=0,n=1,i=1,o=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new ft){const n=e,i=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=i;for(;o>i;)o-=i;o<Number.EPSILON&&(l?o=0:o=i),this.aClockwise===!0&&!l&&(o===i?o=-i:o=o-i);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Nx extends ff{constructor(t,e,n,i,o,l){super(t,e,n,n,i,o,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Xm(){let s=0,t=0,e=0,n=0;function i(o,l,c,h){s=o,t=c,e=-3*o+3*l-2*c-h,n=2*o-2*l+c+h}return{initCatmullRom:function(o,l,c,h,f){i(l,c,f*(c-o),f*(h-l))},initNonuniformCatmullRom:function(o,l,c,h,f,p,m){let g=(l-o)/f-(c-o)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(o){const l=o*o,c=l*o;return s+t*o+e*l+n*c}}}const Ru=new I,bp=new Xm,Ep=new Xm,Tp=new Xm;class Lx extends Ki{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new I){const n=e,i=this.points,o=i.length,l=(o-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/o)+1)*o:h===0&&c===o-1&&(c=o-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%o]:(Ru.subVectors(i[0],i[1]).add(i[0]),f=Ru);const m=i[c%o],g=i[(c+1)%o];if(this.closed||c+2<o?p=i[(c+2)%o]:(Ru.subVectors(i[o-1],i[o-2]).add(i[o-1]),p=Ru),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),b=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);b<1e-4&&(b=1),x<1e-4&&(x=b),S<1e-4&&(S=b),bp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,b,S),Ep.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,b,S),Tp.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,b,S)}else this.curveType==="catmullrom"&&(bp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),Ep.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),Tp.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(bp.calc(h),Ep.calc(h),Tp.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new I().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function h_(s,t,e,n,i){const o=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+o+l)*h+(-3*e+3*n-2*o-l)*c+o*s+e}function qT(s,t){const e=1-s;return e*e*t}function YT(s,t){return 2*(1-s)*s*t}function ZT(s,t){return s*s*t}function Il(s,t,e,n){return qT(s,t)+YT(s,e)+ZT(s,n)}function jT(s,t){const e=1-s;return e*e*e*t}function KT(s,t){const e=1-s;return 3*e*e*s*t}function JT(s,t){return 3*(1-s)*s*s*t}function QT(s,t){return s*s*s*t}function Ol(s,t,e,n,i){return jT(s,t)+KT(s,e)+JT(s,n)+QT(s,i)}class qm extends Ki{constructor(t=new ft,e=new ft,n=new ft,i=new ft){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ft){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Ol(t,i.x,o.x,l.x,c.x),Ol(t,i.y,o.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Px extends Ki{constructor(t=new I,e=new I,n=new I,i=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new I){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Ol(t,i.x,o.x,l.x,c.x),Ol(t,i.y,o.y,l.y,c.y),Ol(t,i.z,o.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Ym extends Ki{constructor(t=new ft,e=new ft){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ft){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ft){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ix extends Ki{constructor(t=new I,e=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new I){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Zm extends Ki{constructor(t=new ft,e=new ft,n=new ft){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ft){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Il(t,i.x,o.x,l.x),Il(t,i.y,o.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class jm extends Ki{constructor(t=new I,e=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Il(t,i.x,o.x,l.x),Il(t,i.y,o.y,l.y),Il(t,i.z,o.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Km extends Ki{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ft){const n=e,i=this.points,o=(i.length-1)*t,l=Math.floor(o),c=o-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(h_(c,h.x,f.x,p.x,m.x),h_(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new ft().fromArray(i))}return this}}var Oh=Object.freeze({__proto__:null,ArcCurve:Nx,CatmullRomCurve3:Lx,CubicBezierCurve:qm,CubicBezierCurve3:Px,EllipseCurve:ff,LineCurve:Ym,LineCurve3:Ix,QuadraticBezierCurve:Zm,QuadraticBezierCurve3:jm,SplineCurve:Km});class Ox extends Ki{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Oh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let o=0;for(;o<i.length;){if(i[o]>=n){const l=i[o]-n,c=this.curves[o],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,o=this.curves;i<o.length;i++){const l=o[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Oh[i.type]().fromJSON(i))}return this}}class Bh extends Ox{constructor(t){super(),this.type="Path",this.currentPoint=new ft,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Ym(this.currentPoint.clone(),new ft(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const o=new Zm(this.currentPoint.clone(),new ft(t,e),new ft(n,i));return this.curves.push(o),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,o,l){const c=new qm(this.currentPoint.clone(),new ft(t,e),new ft(n,i),new ft(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Km(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,o,l),this}absarc(t,e,n,i,o,l){return this.absellipse(t,e,n,n,i,o,l),this}ellipse(t,e,n,i,o,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,o,l,c,h),this}absellipse(t,e,n,i,o,l,c,h){const f=new ff(t,e,n,i,o,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ur extends Bh{constructor(t){super(t),this.uuid=Mi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Bh().fromJSON(i))}return this}}function $T(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let o=Bx(s,0,i,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,f;if(n&&(o=s1(s,t,o,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return Zl(o,l,e,c,h,f,0),l}function Bx(s,t,e,n,i){let o;if(i===m1(s,t,e,n)>0)for(let l=t;l<e;l+=n)o=f_(l/n|0,s[l],s[l+1],o);else for(let l=e-n;l>=t;l-=n)o=f_(l/n|0,s[l],s[l+1],o);return o&&Do(o,o.next)&&(Kl(o),o=o.next),o}function dr(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Do(e,e.next)||tn(e.prev,e,e.next)===0)){if(Kl(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Zl(s,t,e,n,i,o,l){if(!s)return;!l&&o&&c1(s,n,i,o);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(o?e1(s,n,i,o):t1(s)){t.push(h.i,s.i,f.i),Kl(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=n1(dr(s),t),Zl(s,t,e,n,i,o,2)):l===2&&i1(s,t,e,n,i,o):Zl(dr(s),t,e,n,i,o,1);break}}}function t1(s){const t=s.prev,e=s,n=s.next;if(tn(t,e,n)>=0)return!1;const i=t.x,o=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,o,l),m=Math.min(c,h,f),g=Math.max(i,o,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&Al(i,c,o,h,l,f,x.x,x.y)&&tn(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function e1(s,t,e,n){const i=s.prev,o=s,l=s.next;if(tn(i,o,l)>=0)return!1;const c=i.x,h=o.x,f=l.x,p=i.y,m=o.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),b=Math.max(c,h,f),S=Math.max(p,m,g),_=lm(v,x,t,e,n),E=lm(b,S,t,e,n);let A=s.prevZ,T=s.nextZ;for(;A&&A.z>=_&&T&&T.z<=E;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Al(c,p,h,m,f,g,A.x,A.y)&&tn(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Al(c,p,h,m,f,g,T.x,T.y)&&tn(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=_;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Al(c,p,h,m,f,g,A.x,A.y)&&tn(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Al(c,p,h,m,f,g,T.x,T.y)&&tn(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function n1(s,t){let e=s;do{const n=e.prev,i=e.next.next;!Do(n,i)&&Fx(n,e,e.next,i)&&jl(n,i)&&jl(i,n)&&(t.push(n.i,e.i,i.i),Kl(e),Kl(e.next),e=s=i),e=e.next}while(e!==s);return dr(e)}function i1(s,t,e,n,i,o){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&f1(l,c)){let h=Hx(l,c);l=dr(l,l.next),h=dr(h,h.next),Zl(l,t,e,n,i,o,0),Zl(h,t,e,n,i,o,0);return}c=c.next}l=l.next}while(l!==s)}function s1(s,t,e,n){const i=[];for(let o=0,l=t.length;o<l;o++){const c=t[o]*n,h=o<l-1?t[o+1]*n:s.length,f=Bx(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(h1(f))}i.sort(a1);for(let o=0;o<i.length;o++)e=r1(i[o],e);return e}function a1(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function r1(s,t){const e=o1(s,t);if(!e)return t;const n=Hx(e,s);return dr(n,n.next),dr(e,e.next)}function o1(s,t){let e=t;const n=s.x,i=s.y;let o=-1/0,l;if(Do(s,e))return e;do{if(Do(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>o&&(o=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&zx(i<f?n:o,i,h,f,i<f?o:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);jl(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&l1(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function l1(s,t){return tn(s.prev,s,t.prev)<0&&tn(t.next,s,s.next)<0}function c1(s,t,e,n){let i=s;do i.z===0&&(i.z=lm(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,u1(i)}function u1(s){let t,e=1;do{let n=s,i;s=null;let o=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),o?o.nextZ=i:s=i,i.prevZ=o,o=i;n=l}o.nextZ=null,e*=2}while(t>1);return s}function lm(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function h1(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function zx(s,t,e,n,i,o,l,c){return(i-l)*(t-c)>=(s-l)*(o-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(o-c)>=(i-l)*(n-c)}function Al(s,t,e,n,i,o,l,c){return!(s===l&&t===c)&&zx(s,t,e,n,i,o,l,c)}function f1(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!d1(s,t)&&(jl(s,t)&&jl(t,s)&&p1(s,t)&&(tn(s.prev,s,t.prev)||tn(s,t.prev,t))||Do(s,t)&&tn(s.prev,s,s.next)>0&&tn(t.prev,t,t.next)>0)}function tn(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Do(s,t){return s.x===t.x&&s.y===t.y}function Fx(s,t,e,n){const i=Uu(tn(s,t,e)),o=Uu(tn(s,t,n)),l=Uu(tn(e,n,s)),c=Uu(tn(e,n,t));return!!(i!==o&&l!==c||i===0&&Du(s,e,t)||o===0&&Du(s,n,t)||l===0&&Du(e,s,n)||c===0&&Du(e,t,n))}function Du(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Uu(s){return s>0?1:s<0?-1:0}function d1(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&Fx(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function jl(s,t){return tn(s.prev,s,s.next)<0?tn(s,t,s.next)>=0&&tn(s,s.prev,t)>=0:tn(s,t,s.prev)<0||tn(s,s.next,t)<0}function p1(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,o=(s.y+t.y)/2;do e.y>o!=e.next.y>o&&e.next.y!==e.y&&i<(e.next.x-e.x)*(o-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function Hx(s,t){const e=cm(s.i,s.x,s.y),n=cm(t.i,t.x,t.y),i=s.next,o=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,o.next=n,n.prev=o,n}function f_(s,t,e,n){const i=cm(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Kl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function cm(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function m1(s,t,e,n){let i=0;for(let o=t,l=e-n;o<e;o+=n)i+=(s[l]-s[o])*(s[o+1]+s[l+1]),l=o;return i}class g1{static triangulate(t,e,n=2){return $T(t,e,n)}}class Zi{static area(t){const e=t.length;let n=0;for(let i=e-1,o=0;o<e;i=o++)n+=t[i].x*t[o].y-t[o].x*t[i].y;return n*.5}static isClockWise(t){return Zi.area(t)<0}static triangulateShape(t,e){const n=[],i=[],o=[];d_(t),p_(n,t);let l=t.length;e.forEach(d_);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,p_(n,e[h]);const c=g1.triangulate(n,i);for(let h=0;h<c.length;h+=3)o.push(c.slice(h,h+3));return o}}function d_(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function p_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class df extends ye{constructor(t=new ur([new ft(.5,.5),new ft(-.5,.5),new ft(-.5,-.5),new ft(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],o=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new jt(i,3)),this.setAttribute("uv",new jt(o,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,b=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:v1;let A,T=!1,U,R,P,B;_&&(A=_.getSpacedPoints(p),T=!0,g=!1,U=_.computeFrenetFrames(p,!1),R=new I,P=new I,B=new I),g||(S=0,v=0,x=0,b=0);const C=c.extractPoints(f);let w=C.shape;const z=C.holes;if(!Zi.isClockWise(w)){w=w.reverse();for(let vt=0,pt=z.length;vt<pt;vt++){const dt=z[vt];Zi.isClockWise(dt)&&(z[vt]=dt.reverse())}}function X(vt){const dt=10000000000000001e-36;let ct=vt[0];for(let Nt=1;Nt<=vt.length;Nt++){const bt=Nt%vt.length,Ct=vt[bt],re=Ct.x-ct.x,ce=Ct.y-ct.y,O=re*re+ce*ce,D=Math.max(Math.abs(Ct.x),Math.abs(Ct.y),Math.abs(ct.x),Math.abs(ct.y)),J=dt*D*D;if(O<=J){vt.splice(bt,1),Nt--;continue}ct=Ct}}X(w),z.forEach(X);const $=z.length,it=w;for(let vt=0;vt<$;vt++){const pt=z[vt];w=w.concat(pt)}function k(vt,pt,dt){return pt||console.error("THREE.ExtrudeGeometry: vec does not exist"),vt.clone().addScaledVector(pt,dt)}const et=w.length;function q(vt,pt,dt){let ct,Nt,bt;const Ct=vt.x-pt.x,re=vt.y-pt.y,ce=dt.x-vt.x,O=dt.y-vt.y,D=Ct*Ct+re*re,J=Ct*O-re*ce;if(Math.abs(J)>Number.EPSILON){const rt=Math.sqrt(D),_t=Math.sqrt(ce*ce+O*O),ot=pt.x-re/rt,Zt=pt.y+Ct/rt,Dt=dt.x-O/_t,Wt=dt.y+ce/_t,Xt=((Dt-ot)*O-(Wt-Zt)*ce)/(Ct*O-re*ce);ct=ot+Ct*Xt-vt.x,Nt=Zt+re*Xt-vt.y;const Mt=ct*ct+Nt*Nt;if(Mt<=2)return new ft(ct,Nt);bt=Math.sqrt(Mt/2)}else{let rt=!1;Ct>Number.EPSILON?ce>Number.EPSILON&&(rt=!0):Ct<-Number.EPSILON?ce<-Number.EPSILON&&(rt=!0):Math.sign(re)===Math.sign(O)&&(rt=!0),rt?(ct=-re,Nt=Ct,bt=Math.sqrt(D)):(ct=Ct,Nt=re,bt=Math.sqrt(D/2))}return new ft(ct/bt,Nt/bt)}const lt=[];for(let vt=0,pt=it.length,dt=pt-1,ct=vt+1;vt<pt;vt++,dt++,ct++)dt===pt&&(dt=0),ct===pt&&(ct=0),lt[vt]=q(it[vt],it[dt],it[ct]);const yt=[];let St,It=lt.concat();for(let vt=0,pt=$;vt<pt;vt++){const dt=z[vt];St=[];for(let ct=0,Nt=dt.length,bt=Nt-1,Ct=ct+1;ct<Nt;ct++,bt++,Ct++)bt===Nt&&(bt=0),Ct===Nt&&(Ct=0),St[ct]=q(dt[ct],dt[bt],dt[Ct]);yt.push(St),It=It.concat(St)}let Qt;if(S===0)Qt=Zi.triangulateShape(it,z);else{const vt=[],pt=[];for(let dt=0;dt<S;dt++){const ct=dt/S,Nt=v*Math.cos(ct*Math.PI/2),bt=x*Math.sin(ct*Math.PI/2)+b;for(let Ct=0,re=it.length;Ct<re;Ct++){const ce=k(it[Ct],lt[Ct],bt);Jt(ce.x,ce.y,-Nt),ct===0&&vt.push(ce)}for(let Ct=0,re=$;Ct<re;Ct++){const ce=z[Ct];St=yt[Ct];const O=[];for(let D=0,J=ce.length;D<J;D++){const rt=k(ce[D],St[D],bt);Jt(rt.x,rt.y,-Nt),ct===0&&O.push(rt)}ct===0&&pt.push(O)}}Qt=Zi.triangulateShape(vt,pt)}const Kt=Qt.length,le=x+b;for(let vt=0;vt<et;vt++){const pt=g?k(w[vt],It[vt],le):w[vt];T?(P.copy(U.normals[0]).multiplyScalar(pt.x),R.copy(U.binormals[0]).multiplyScalar(pt.y),B.copy(A[0]).add(P).add(R),Jt(B.x,B.y,B.z)):Jt(pt.x,pt.y,0)}for(let vt=1;vt<=p;vt++)for(let pt=0;pt<et;pt++){const dt=g?k(w[pt],It[pt],le):w[pt];T?(P.copy(U.normals[vt]).multiplyScalar(dt.x),R.copy(U.binormals[vt]).multiplyScalar(dt.y),B.copy(A[vt]).add(P).add(R),Jt(B.x,B.y,B.z)):Jt(dt.x,dt.y,m/p*vt)}for(let vt=S-1;vt>=0;vt--){const pt=vt/S,dt=v*Math.cos(pt*Math.PI/2),ct=x*Math.sin(pt*Math.PI/2)+b;for(let Nt=0,bt=it.length;Nt<bt;Nt++){const Ct=k(it[Nt],lt[Nt],ct);Jt(Ct.x,Ct.y,m+dt)}for(let Nt=0,bt=z.length;Nt<bt;Nt++){const Ct=z[Nt];St=yt[Nt];for(let re=0,ce=Ct.length;re<ce;re++){const O=k(Ct[re],St[re],ct);T?Jt(O.x,O.y+A[p-1].y,A[p-1].x+dt):Jt(O.x,O.y,m+dt)}}}ut(),xt();function ut(){const vt=i.length/3;if(g){let pt=0,dt=et*pt;for(let ct=0;ct<Kt;ct++){const Nt=Qt[ct];Yt(Nt[2]+dt,Nt[1]+dt,Nt[0]+dt)}pt=p+S*2,dt=et*pt;for(let ct=0;ct<Kt;ct++){const Nt=Qt[ct];Yt(Nt[0]+dt,Nt[1]+dt,Nt[2]+dt)}}else{for(let pt=0;pt<Kt;pt++){const dt=Qt[pt];Yt(dt[2],dt[1],dt[0])}for(let pt=0;pt<Kt;pt++){const dt=Qt[pt];Yt(dt[0]+et*p,dt[1]+et*p,dt[2]+et*p)}}n.addGroup(vt,i.length/3-vt,0)}function xt(){const vt=i.length/3;let pt=0;zt(it,pt),pt+=it.length;for(let dt=0,ct=z.length;dt<ct;dt++){const Nt=z[dt];zt(Nt,pt),pt+=Nt.length}n.addGroup(vt,i.length/3-vt,1)}function zt(vt,pt){let dt=vt.length;for(;--dt>=0;){const ct=dt;let Nt=dt-1;Nt<0&&(Nt=vt.length-1);for(let bt=0,Ct=p+S*2;bt<Ct;bt++){const re=et*bt,ce=et*(bt+1),O=pt+ct+re,D=pt+Nt+re,J=pt+Nt+ce,rt=pt+ct+ce;me(O,D,J,rt)}}}function Jt(vt,pt,dt){h.push(vt),h.push(pt),h.push(dt)}function Yt(vt,pt,dt){we(vt),we(pt),we(dt);const ct=i.length/3,Nt=E.generateTopUV(n,i,ct-3,ct-2,ct-1);F(Nt[0]),F(Nt[1]),F(Nt[2])}function me(vt,pt,dt,ct){we(vt),we(pt),we(ct),we(pt),we(dt),we(ct);const Nt=i.length/3,bt=E.generateSideWallUV(n,i,Nt-6,Nt-3,Nt-2,Nt-1);F(bt[0]),F(bt[1]),F(bt[3]),F(bt[1]),F(bt[2]),F(bt[3])}function we(vt){i.push(h[vt*3+0]),i.push(h[vt*3+1]),i.push(h[vt*3+2])}function F(vt){o.push(vt.x),o.push(vt.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return _1(e,n,t)}static fromJSON(t,e){const n=[];for(let o=0,l=t.shapes.length;o<l;o++){const c=e[t.shapes[o]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Oh[i.type]().fromJSON(i)),new df(n,t.options)}}const v1={generateTopUV:function(s,t,e,n,i){const o=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new ft(o,l),new ft(c,h),new ft(f,p)]},generateSideWallUV:function(s,t,e,n,i,o){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],b=t[o*3],S=t[o*3+1],_=t[o*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new ft(l,1-h),new ft(f,1-m),new ft(g,1-x),new ft(b,1-_)]:[new ft(c,1-h),new ft(p,1-m),new ft(v,1-x),new ft(S,1-_)]}};function _1(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const o=s[n];e.shapes.push(o.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class pf extends ya{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,o,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new pf(t.radius,t.detail)}}class mf extends ye{constructor(t=[new ft(0,-.5),new ft(.5,0),new ft(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=he(i,0,Math.PI*2);const o=[],l=[],c=[],h=[],f=[],p=1/e,m=new I,g=new ft,v=new I,x=new I,b=new I;let S=0,_=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,b.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(b.x,b.y,b.z);break;default:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=b.x,v.y+=b.y,v.z+=b.z,v.normalize(),h.push(v.x,v.y,v.z),b.copy(x)}for(let E=0;E<=e;E++){const A=n+E*p*i,T=Math.sin(A),U=Math.cos(A);for(let R=0;R<=t.length-1;R++){m.x=t[R].x*T,m.y=t[R].y,m.z=t[R].x*U,l.push(m.x,m.y,m.z),g.x=E/e,g.y=R/(t.length-1),c.push(g.x,g.y);const P=h[3*R+0]*T,B=h[3*R+1],C=h[3*R+0]*U;f.push(P,B,C)}}for(let E=0;E<e;E++)for(let A=0;A<t.length-1;A++){const T=A+E*t.length,U=T,R=T+t.length,P=T+t.length+1,B=T+1;o.push(U,R,B),o.push(P,B,R)}this.setIndex(o),this.setAttribute("position",new jt(l,3)),this.setAttribute("uv",new jt(c,2)),this.setAttribute("normal",new jt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new mf(t.points,t.segments,t.phiStart,t.phiLength)}}class lc extends ya{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new lc(t.radius,t.detail)}}class Io extends ye{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],b=[],S=[];for(let _=0;_<p;_++){const E=_*g-l;for(let A=0;A<f;A++){const T=A*m-o;x.push(T,-E,0),b.push(0,0,1),S.push(A/c),S.push(1-_/h)}}for(let _=0;_<h;_++)for(let E=0;E<c;E++){const A=E+f*_,T=E+f*(_+1),U=E+1+f*(_+1),R=E+1+f*_;v.push(A,T,R),v.push(T,U,R)}this.setIndex(v),this.setAttribute("position",new jt(x,3)),this.setAttribute("normal",new jt(b,3)),this.setAttribute("uv",new jt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Io(t.width,t.height,t.widthSegments,t.heightSegments)}}class gf extends ye{constructor(t=.5,e=1,n=32,i=1,o=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:o,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new I,x=new ft;for(let b=0;b<=i;b++){for(let S=0;S<=n;S++){const _=o+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let b=0;b<i;b++){const S=b*(n+1);for(let _=0;_<n;_++){const E=_+S,A=E,T=E+n+1,U=E+n+2,R=E+1;c.push(A,T,R),c.push(T,U,R)}}this.setIndex(c),this.setAttribute("position",new jt(h,3)),this.setAttribute("normal",new jt(f,3)),this.setAttribute("uv",new jt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new gf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class vf extends ye{constructor(t=new ur([new ft(0,.5),new ft(-.5,-.5),new ft(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],o=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new jt(i,3)),this.setAttribute("normal",new jt(o,3)),this.setAttribute("uv",new jt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;Zi.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const E=x[S];Zi.isClockWise(E)===!0&&(x[S]=E.reverse())}const b=Zi.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const E=x[S];v=v.concat(E)}for(let S=0,_=v.length;S<_;S++){const E=v[S];i.push(E.x,E.y,0),o.push(0,0,1),l.push(E.x,E.y)}for(let S=0,_=b.length;S<_;S++){const E=b[S],A=E[0]+m,T=E[1]+m,U=E[2]+m;n.push(A,T,U),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return y1(e,t)}static fromJSON(t,e){const n=[];for(let i=0,o=t.shapes.length;i<o;i++){const l=e[t.shapes[i]];n.push(l)}return new vf(n,t.curveSegments)}}function y1(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class cc extends ye{constructor(t=1,e=32,n=16,i=0,o=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new I,g=new I,v=[],x=[],b=[],S=[];for(let _=0;_<=n;_++){const E=[],A=_/n;let T=0;_===0&&l===0?T=.5/e:_===n&&h===Math.PI&&(T=-.5/e);for(let U=0;U<=e;U++){const R=U/e;m.x=-t*Math.cos(i+R*o)*Math.sin(l+A*c),m.y=t*Math.cos(l+A*c),m.z=t*Math.sin(i+R*o)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),b.push(g.x,g.y,g.z),S.push(R+T,1-A),E.push(f++)}p.push(E)}for(let _=0;_<n;_++)for(let E=0;E<e;E++){const A=p[_][E+1],T=p[_][E],U=p[_+1][E],R=p[_+1][E+1];(_!==0||l>0)&&v.push(A,T,R),(_!==n-1||h<Math.PI)&&v.push(T,U,R)}this.setIndex(v),this.setAttribute("position",new jt(x,3)),this.setAttribute("normal",new jt(b,3)),this.setAttribute("uv",new jt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new cc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class _f extends ya{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new _f(t.radius,t.detail)}}class yf extends ye{constructor(t=1,e=.4,n=12,i=48,o=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:o},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new I,m=new I,g=new I;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const b=x/i*o,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(b),m.y=(t+e*Math.cos(S))*Math.sin(b),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(b),p.y=t*Math.sin(b),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const b=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(b,S,E),l.push(S,_,E)}this.setIndex(l),this.setAttribute("position",new jt(c,3)),this.setAttribute("normal",new jt(h,3)),this.setAttribute("uv",new jt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class xf extends ye{constructor(t=1,e=.4,n=64,i=8,o=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:o,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new I,g=new I,v=new I,x=new I,b=new I,S=new I,_=new I;for(let A=0;A<=n;++A){const T=A/n*o*Math.PI*2;E(T,o,l,t,v),E(T+.01,o,l,t,x),S.subVectors(x,v),_.addVectors(x,v),b.crossVectors(S,_),_.crossVectors(b,S),b.normalize(),_.normalize();for(let U=0;U<=i;++U){const R=U/i*Math.PI*2,P=-e*Math.cos(R),B=e*Math.sin(R);m.x=v.x+(P*_.x+B*b.x),m.y=v.y+(P*_.y+B*b.y),m.z=v.z+(P*_.z+B*b.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(A/n),p.push(U/i)}}for(let A=1;A<=n;A++)for(let T=1;T<=i;T++){const U=(i+1)*(A-1)+(T-1),R=(i+1)*A+(T-1),P=(i+1)*A+T,B=(i+1)*(A-1)+T;c.push(U,R,B),c.push(R,P,B)}this.setIndex(c),this.setAttribute("position",new jt(h,3)),this.setAttribute("normal",new jt(f,3)),this.setAttribute("uv",new jt(p,2));function E(A,T,U,R,P){const B=Math.cos(A),C=Math.sin(A),w=U/T*A,z=Math.cos(w);P.x=R*(2+z)*.5*B,P.y=R*(2+z)*C*.5,P.z=R*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Sf extends ye{constructor(t=new jm(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),e=64,n=1,i=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:o};const l=t.computeFrenetFrames(e,o);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new I,h=new I,f=new ft;let p=new I;const m=[],g=[],v=[],x=[];b(),this.setIndex(x),this.setAttribute("position",new jt(m,3)),this.setAttribute("normal",new jt(g,3)),this.setAttribute("uv",new jt(v,2));function b(){for(let A=0;A<e;A++)S(A);S(o===!1?e:0),E(),_()}function S(A){p=t.getPointAt(A/e,p);const T=l.normals[A],U=l.binormals[A];for(let R=0;R<=i;R++){const P=R/i*Math.PI*2,B=Math.sin(P),C=-Math.cos(P);h.x=C*T.x+B*U.x,h.y=C*T.y+B*U.y,h.z=C*T.z+B*U.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function _(){for(let A=1;A<=e;A++)for(let T=1;T<=i;T++){const U=(i+1)*(A-1)+(T-1),R=(i+1)*A+(T-1),P=(i+1)*A+T,B=(i+1)*(A-1)+T;x.push(U,R,B),x.push(R,P,B)}}function E(){for(let A=0;A<=e;A++)for(let T=0;T<=i;T++)f.x=A/e,f.y=T/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Sf(new Oh[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Vx extends ye{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new I,o=new I;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,b=g+v;x<b;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),o.fromBufferAttribute(l,E),m_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),o.fromBufferAttribute(l,m),m_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new jt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function m_(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var g_=Object.freeze({__proto__:null,BoxGeometry:gr,CapsuleGeometry:cf,CircleGeometry:uf,ConeGeometry:oc,CylinderGeometry:rc,DodecahedronGeometry:hf,EdgesGeometry:Ux,ExtrudeGeometry:df,IcosahedronGeometry:pf,LatheGeometry:mf,OctahedronGeometry:lc,PlaneGeometry:Io,PolyhedronGeometry:ya,RingGeometry:gf,ShapeGeometry:vf,SphereGeometry:cc,TetrahedronGeometry:_f,TorusGeometry:yf,TorusKnotGeometry:xf,TubeGeometry:Sf,WireframeGeometry:Vx});class Gx extends Gn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Gt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class kx extends ji{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Jm extends Gn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Gt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Wx extends Jm{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ft(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return he(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Gt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Gt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Gt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Xx extends Gn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Gt(16777215),this.specular=new Gt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ic,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class qx extends Gn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Gt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Yx extends Gn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Zx extends Gn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Gt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ic,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Qm extends Gn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=sx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class $m extends Gn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class jx extends Gn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Gt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Kx extends Jn{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function or(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function Jx(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Qx(s){function t(i,o){return s[i]-s[o]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function um(s,t,e){const n=s.length,i=new s.constructor(n);for(let o=0,l=0;l!==n;++o){const c=e[o]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function tg(s,t,e,n){let i=1,o=s[0];for(;o!==void 0&&o[n]===void 0;)o=s[i++];if(o===void 0)return;let l=o[n];if(l!==void 0)if(Array.isArray(l))do l=o[n],l!==void 0&&(t.push(o.time),e.push(...l)),o=s[i++];while(o!==void 0);else if(l.toArray!==void 0)do l=o[n],l!==void 0&&(t.push(o.time),l.toArray(e,e.length)),o=s[i++];while(o!==void 0);else do l=o[n],l!==void 0&&(t.push(o.time),e.push(l)),o=s[i++];while(o!==void 0)}function x1(s,t,e,n,i=30){const o=s.clone();o.name=t;const l=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let b=0;b<p;++b)g.push(f.values[v*p+b])}}m.length!==0&&(f.times=or(m,f.times.constructor),f.values=or(g,f.values.constructor),l.push(f))}o.tracks=l;let c=1/0;for(let h=0;h<o.tracks.length;++h)c>o.tracks[h].times[0]&&(c=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*c);return o.resetDuration(),o}function S1(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,o=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let b;if(o<=c.times[0]){const _=p,E=m-p;b=c.values.slice(_,E)}else if(o>=c.times[x]){const _=x*m+p,E=_+m-p;b=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=p,A=m-p;_.evaluate(o),b=_.resultBuffer.slice(E,A)}h==="quaternion"&&new Hn().fromArray(b).normalize().conjugate().toArray(b);const S=f.times.length;for(let _=0;_<S;++_){const E=_*v+g;if(h==="quaternion")Hn.multiplyQuaternionsFlat(f.values,E,b,0,f.values,E);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[E+T]-=b[T]}}}return s.blendMode=Lm,s}class M1{static convertArray(t,e){return or(t,e)}static isTypedArray(t){return Jx(t)}static getKeyframeOrder(t){return Qx(t)}static sortedArray(t,e,n){return um(t,e,n)}static flattenJSON(t,e,n,i){tg(t,e,n,i)}static subclip(t,e,n,i,o=30){return x1(t,e,n,i,o)}static makeClipAdditive(t,e=0,n=t,i=30){return S1(t,e,n,i)}}class uc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(o=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=o)){const c=e[1];t<c&&(n=2,o=c);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=o,o=e[--n-1],t>=o)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],o=e[n-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,o,i)}return this.interpolate_(n,o,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,o=t*i;for(let l=0;l!==i;++l)e[l]=n[o+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class $x extends uc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ar,endingEnd:ar}}intervalChanged_(t,e,n){const i=this.parameterPositions;let o=t-2,l=t+1,c=i[o],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case rr:o=t,c=2*e-n;break;case kl:o=i.length-2,c=e+i[o]-i[o+1];break;default:o=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case rr:l=t,h=2*n-e;break;case kl:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=o*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),b=x*x,S=b*x,_=-g*S+2*g*b-g*x,E=(1+g)*S+(-1.5-2*g)*b+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*b+.5*x,T=v*S-v*b;for(let U=0;U!==c;++U)o[U]=_*l[p+U]+E*l[f+U]+A*l[h+U]+T*l[m+U];return o}}class eg extends uc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)o[g]=l[f+g]*m+l[h+g]*p;return o}}class tS extends uc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Oi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=or(e,this.TimeBufferType),this.values=or(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:or(t.times,Array),values:or(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new tS(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new eg(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new $x(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Gl:e=this.InterpolantFactoryMethodDiscrete;break;case Lh:e=this.InterpolantFactoryMethodLinear;break;case qu:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Gl;case this.InterpolantFactoryMethodLinear:return Lh;case this.InterpolantFactoryMethodSmooth:return qu}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let o=0,l=i-1;for(;o!==i&&n[o]<t;)++o;for(;l!==-1&&n[l]>e;)--l;if(++l,o!==0||l!==i){o>=l&&(l=Math.max(l,1),o=l-1);const c=this.getValueSize();this.times=n.slice(o,l),this.values=this.values.slice(o*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==o;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&Jx(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===qu,o=t.length-1;let l=1;for(let c=1;c<o;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const b=e[m+x];if(b!==e[g+x]||b!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(o>0){t[l]=t[o];for(let c=o*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Oi.prototype.ValueTypeName="";Oi.prototype.TimeBufferType=Float32Array;Oi.prototype.ValueBufferType=Float32Array;Oi.prototype.DefaultInterpolation=Lh;class vr extends Oi{constructor(t,e,n){super(t,e,n)}}vr.prototype.ValueTypeName="bool";vr.prototype.ValueBufferType=Array;vr.prototype.DefaultInterpolation=Gl;vr.prototype.InterpolantFactoryMethodLinear=void 0;vr.prototype.InterpolantFactoryMethodSmooth=void 0;class ng extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}ng.prototype.ValueTypeName="color";class Jl extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}Jl.prototype.ValueTypeName="number";class eS extends uc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)Hn.slerpFlat(o,0,l,f-c,l,f,h);return o}}class hc extends Oi{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new eS(this.times,this.values,this.getValueSize(),t)}}hc.prototype.ValueTypeName="quaternion";hc.prototype.InterpolantFactoryMethodSmooth=void 0;class _r extends Oi{constructor(t,e,n){super(t,e,n)}}_r.prototype.ValueTypeName="string";_r.prototype.ValueBufferType=Array;_r.prototype.DefaultInterpolation=Gl;_r.prototype.InterpolantFactoryMethodLinear=void 0;_r.prototype.InterpolantFactoryMethodSmooth=void 0;class Ql extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}Ql.prototype.ValueTypeName="vector";class $l{constructor(t="",e=-1,n=[],i=Qh){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Mi(),this.userData={},this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(E1(n[l]).scale(i));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o.userData=JSON.parse(t.userData||"{}"),o}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode,userData:JSON.stringify(t.userData)};for(let o=0,l=n.length;o!==l;++o)e.push(Oi.toJSON(n[o]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const o=e.length,l=[];for(let c=0;c<o;c++){let h=[],f=[];h.push((c+o-1)%o,c,(c+1)%o),f.push(0,1,0);const p=Qx(h);h=um(h,1,p),f=um(f,1,p),!i&&h[0]===0&&(h.push(o),f.push(f[0])),l.push(new Jl(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},o=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(o);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,b){if(v.length!==0){const S=[],_=[];tg(v,S,_,x),S.length!==0&&b.push(new m(g,S,_))}},i=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let b=0;b<g[x].morphTargets.length;b++)v[g[x].morphTargets[b]]=-1;for(const b in v){const S=[],_=[];for(let E=0;E!==g[x].morphTargets.length;++E){const A=g[x];S.push(A.time),_.push(A.morphTarget===b?1:0)}i.push(new Jl(".morphTargetInfluence["+b+"]",S,_))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(Ql,v+".position",g,"pos",i),n(hc,v+".quaternion",g,"rot",i),n(Ql,v+".scale",g,"scl",i)}}return i.length===0?null:new this(o,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const o=this.tracks[n];e=Math.max(e,o.times[o.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let n=0;n<this.tracks.length;n++)t.push(this.tracks[n].clone());const e=new this.constructor(this.name,this.duration,t,this.blendMode);return e.userData=JSON.parse(JSON.stringify(this.userData)),e}toJSON(){return this.constructor.toJSON(this)}}function b1(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Jl;case"vector":case"vector2":case"vector3":case"vector4":return Ql;case"color":return ng;case"quaternion":return hc;case"bool":case"boolean":return vr;case"string":return _r}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function E1(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=b1(s.type);if(s.times===void 0){const e=[],n=[];tg(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const as={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class ig{constructor(t,e,n){const i=this;let o=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(p){c++,o===!1&&i.onStart!==void 0&&i.onStart(p,l,c),o=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const nS=new ig;class ri{constructor(t){this.manager=t!==void 0?t:nS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,o){n.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}ri.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ds={};class T1 extends Error{constructor(t,e){super(t),this.response=e}}class Fs extends ri{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=as.get(`file:${t}`);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(Ds[t]!==void 0){Ds[t].push({onLoad:e,onProgress:n,onError:i});return}Ds[t]=[],Ds[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=Ds[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let b=0;const S=new ReadableStream({start(_){E();function E(){m.read().then(({done:A,value:T})=>{if(A)_.close();else{b+=T.byteLength;const U=new ProgressEvent("progress",{lengthComputable:x,loaded:b,total:v});for(let R=0,P=p.length;R<P;R++){const B=p[R];B.onProgress&&B.onProgress(U)}_.enqueue(T),E()}},A=>{_.error(A)})}}});return new Response(S)}else throw new T1(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{as.add(`file:${t}`,f);const p=Ds[t];delete Ds[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=Ds[t];if(p===void 0)throw this.manager.itemError(t),f;delete Ds[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class A1 extends ri{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Fs(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=$l.parse(t[n]);e.push(i)}return e}}class w1 extends ri{constructor(t){super(t)}load(t,e,n,i){const o=this,l=[],c=new lf,h=new Fs(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=o.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=pn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=o.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let b=0;b<g.mipmapCount;b++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+b]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=pn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}const lo=new WeakMap;class tc extends ri{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=as.get(`image:${t}`);if(l!==void 0){if(l.complete===!0)o.manager.itemStart(t),setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0);else{let m=lo.get(l);m===void 0&&(m=[],lo.set(l,m)),m.push({onLoad:e,onError:i})}return l}const c=ql("img");function h(){p(),e&&e(this);const m=lo.get(this)||[];for(let g=0;g<m.length;g++){const v=m[g];v.onLoad&&v.onLoad(this)}lo.delete(this),o.manager.itemEnd(t)}function f(m){p(),i&&i(m),as.remove(`image:${t}`);const g=lo.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(m)}lo.delete(this),o.manager.itemError(t),o.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),as.add(`image:${t}`,c),o.manager.itemStart(t),c.src=t,c}}class C1 extends ri{constructor(t){super(t)}load(t,e,n,i){const o=new ac;o.colorSpace=zn;const l=new tc(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){o.images[f]=p,c++,c===6&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return o}}class R1 extends ri{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new os,c=new Fs(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,function(h){let f;try{f=o.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Pi,l.wrapT=f.wrapT!==void 0?f.wrapT:Pi,l.magFilter=f.magFilter!==void 0?f.magFilter:pn,l.minFilter=f.minFilter!==void 0?f.minFilter:pn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=ss),f.mipmapCount===1&&(l.minFilter=pn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class D1 extends ri{constructor(t){super(t)}load(t,e,n,i){const o=new rn,l=new tc(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){o.image=c,o.needsUpdate=!0,e!==void 0&&e(o)},n,i),o}}class xa extends Le{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Gt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class iS extends xa{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Gt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Ap=new fe,v_=new I,__=new I;class sg{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ft(512,512),this.mapType=Ii,this.map=null,this.mapPass=null,this.matrix=new fe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Po,this._frameExtents=new ft(1,1),this._viewportCount=1,this._viewports=[new Ne(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;v_.setFromMatrixPosition(t.matrixWorld),e.position.copy(v_),__.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(__),e.updateMatrixWorld(),Ap.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ap,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Ap)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class U1 extends sg{constructor(){super(new ln(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=Ao*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,o=t.distance||e.far;(n!==e.fov||i!==e.aspect||o!==e.far)&&(e.fov=n,e.aspect=i,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class sS extends xa{constructor(t,e,n=0,i=Math.PI/3,o=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.distance=n,this.angle=i,this.penumbra=o,this.decay=l,this.map=null,this.shadow=new U1}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const y_=new fe,El=new I,wp=new I;class N1 extends sg{constructor(){super(new ln(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ft(4,2),this._viewportCount=6,this._viewports=[new Ne(2,1,1,1),new Ne(0,1,1,1),new Ne(3,1,1,1),new Ne(1,1,1,1),new Ne(3,0,1,1),new Ne(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),El.setFromMatrixPosition(t.matrixWorld),n.position.copy(El),wp.copy(n.position),wp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(wp),n.updateMatrixWorld(),i.makeTranslation(-El.x,-El.y,-El.z),y_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(y_,n.coordinateSystem,n.reversedDepth)}}class aS extends xa{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new N1}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class da extends ef{constructor(t=-1,e=1,n=1,i=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,o,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,l=o+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class L1 extends sg{constructor(){super(new da(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class rS extends xa{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.shadow=new L1}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class oS extends xa{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class lS extends xa{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class cS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new I)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*o)),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],1.092548*(n*o)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*o),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],2*.429043*n*o),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,o=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-i*i)}}class uS extends xa{constructor(t=new cS,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Mf extends ri{constructor(t){super(t),this.textures={}}load(t,e,n,i){const o=this,l=new Fs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(o){return e[o]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",o),e[o]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new Gt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const o in t.uniforms){const l=t.uniforms[o];switch(i.uniforms[o]={},l.type){case"t":i.uniforms[o].value=n(l.value);break;case"c":i.uniforms[o].value=new Gt().setHex(l.value);break;case"v2":i.uniforms[o].value=new ft().fromArray(l.value);break;case"v3":i.uniforms[o].value=new I().fromArray(l.value);break;case"v4":i.uniforms[o].value=new Ne().fromArray(l.value);break;case"m3":i.uniforms[o].value=new ge().fromArray(l.value);break;case"m4":i.uniforms[o].value=new fe().fromArray(l.value);break;default:i.uniforms[o].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const o in t.extensions)i.extensions[o]=t.extensions[o];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new ft().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ft().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return Mf.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:Gx,SpriteMaterial:Hm,RawShaderMaterial:kx,ShaderMaterial:ji,PointsMaterial:Gm,MeshPhysicalMaterial:Wx,MeshStandardMaterial:Jm,MeshPhongMaterial:Xx,MeshToonMaterial:qx,MeshNormalMaterial:Yx,MeshLambertMaterial:Zx,MeshDepthMaterial:Qm,MeshDistanceMaterial:$m,MeshBasicMaterial:_a,MeshMatcapMaterial:jx,LineDashedMaterial:Kx,LineBasicMaterial:Jn,Material:Gn};return new e[t]}}class hm{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class hS extends ye{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class fS extends ri{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Fs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],_=o(v,S.buffer),E=vo(S.type,_),A=new af(E,S.stride);return A.uuid=S.uuid,e[x]=A,A}function o(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=t.isInstancedBufferGeometry?new hS:new ye,c=t.data.index;if(c!==void 0){const v=vo(c.type,c.array);l.setIndex(new We(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let b;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);b=new fr(S,x.itemSize,x.offset,x.normalized)}else{const S=vo(x.type,x.array),_=x.isInstancedBufferAttribute?Ro:We;b=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),x.usage!==void 0&&b.setUsage(x.usage),l.setAttribute(v,b)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],b=[];for(let S=0,_=x.length;S<_;S++){const E=x[S];let A;if(E.isInterleavedBufferAttribute){const T=i(t.data,E.data);A=new fr(T,E.itemSize,E.offset,E.normalized)}else{const T=vo(E.type,E.array);A=new We(T,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),b.push(A)}l.morphAttributes[v]=b}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const b=m[v];l.addGroup(b.start,b.count,b.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new Cn().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class P1 extends ri{constructor(t){super(t)}load(t,e,n,i){const o=this,l=this.path===""?hm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Fs(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}o.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?hm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const o=new Fs(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials);const l=await o.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,o,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const o=new ur().fromJSON(t[n]);e[o.uuid]=o}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(o){o.isBone&&(i[o.uuid]=o)}),t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=new rf().fromJSON(t[o],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new fS;for(let o=0,l=t.length;o<l;o++){let c;const h=t[o];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in g_?c=g_[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const o=new Mf;o.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=o.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],o=$l.parse(i);e[o.uuid]=o}return e}parseImages(t,e){const n=this,i={};let o;function l(h){return n.manager.itemStart(h),o.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:vo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new ig(e);o=new tc(h),o.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new os(_.data,_.width,_.height)))}i[m.uuid]=new fa(v)}else{const v=c(m.url);i[m.uuid]=new fa(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:vo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new tc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await o(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new os(x.data,x.width,x.height)))}n[h.uuid]=new fa(p)}else{const p=await o(h.url);n[h.uuid]=new fa(p)}}}return n}parseTextures(t,e){function n(o,l){return typeof o=="number"?o:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",o),l[o])}const i={};if(t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=t[o];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new ac,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new os:p=new rn,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,I1)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],x_),p.wrapT=n(c.wrap[1],x_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,S_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,S_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,o){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Fm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new Gt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new sf(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new nf(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new ln(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new da(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new oS(t.color,t.intensity);break;case"DirectionalLight":l=new rS(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new aS(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new lS(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new sS(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new iS(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new uS().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new Tx(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new fn(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new Ax(p,m,g),l.instanceMatrix=new Ro(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new Ro(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new wx(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(b=>{let S=null,_=null;return b.boundingBox!==void 0&&(S=new Vn().fromJSON(b.boundingBox)),b.boundingSphere!==void 0&&(_=new Cn().fromJSON(b.boundingSphere)),{...b,boundingBox:S,boundingSphere:_}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new Cn().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new Vn().fromJSON(t.boundingBox));break;case"LOD":l=new Ex;break;case"Line":l=new ga(c(t.geometry),h(t.material));break;case"LineLoop":l=new Cx(c(t.geometry),h(t.material));break;case"LineSegments":l=new us(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new Rx(c(t.geometry),h(t.material));break;case"Sprite":l=new bx(h(t.material));break;case"Group":l=new _o;break;case"Bone":l=new Vm;break;default:l=new Le}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,o))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(o[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],b=l.getObjectByProperty("uuid",x.object);b!==void 0&&l.addLevel(b,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Le}})}}const I1={UVMapping:Xh,CubeReflectionMapping:Bs,CubeRefractionMapping:pa,EquirectangularReflectionMapping:zl,EquirectangularRefractionMapping:Fl,CubeUVReflectionMapping:No},x_={RepeatWrapping:Hl,ClampToEdgeWrapping:Pi,MirroredRepeatWrapping:Vl},S_={NearestFilter:wn,NearestMipmapNearestFilter:Tm,NearestMipmapLinearFilter:go,LinearFilter:pn,LinearMipmapNearestFilter:Rl,LinearMipmapLinearFilter:ss},Cp=new WeakMap;class O1 extends ri{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=as.get(`image-bitmap:${t}`);if(l!==void 0){if(o.manager.itemStart(t),l.then){l.then(f=>{if(Cp.has(l)===!0)i&&i(Cp.get(l)),o.manager.itemError(t),o.manager.itemEnd(t);else return e&&e(f),o.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,c.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(f){return as.add(`image-bitmap:${t}`,f),e&&e(f),o.manager.itemEnd(t),f}).catch(function(f){i&&i(f),Cp.set(h,f),as.remove(`image-bitmap:${t}`),o.manager.itemError(t),o.manager.itemEnd(t)});as.add(`image-bitmap:${t}`,h),o.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let Nu;class ag{static getContext(){return Nu===void 0&&(Nu=new(window.AudioContext||window.webkitAudioContext)),Nu}static setContext(t){Nu=t}}class B1 extends ri{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Fs(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);ag.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),o.manager.itemError(t)}}}const M_=new fe,b_=new fe,qa=new fe;class z1{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ln,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ln,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,qa.copy(t.projectionMatrix);const i=e.eyeSep/2,o=i*e.near/e.focus,l=e.near*Math.tan(cr*e.fov*.5)/e.zoom;let c,h;b_.elements[12]=-i,M_.elements[12]=i,c=-l*e.aspect+o,h=l*e.aspect+o,qa.elements[0]=2*e.near/(h-c),qa.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(qa),c=-l*e.aspect-o,h=l*e.aspect-o,qa.elements[0]=2*e.near/(h-c),qa.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(qa)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(b_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(M_)}}class dS extends ln{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class rg{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const Ya=new I,Rp=new Hn,F1=new I,Za=new I,ja=new I;class H1 extends Le{constructor(){super(),this.type="AudioListener",this.context=ag.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new rg}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ya,Rp,F1),Za.set(0,0,-1).applyQuaternion(Rp),ja.set(0,1,0).applyQuaternion(Rp),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Ya.x,n),e.positionY.linearRampToValueAtTime(Ya.y,n),e.positionZ.linearRampToValueAtTime(Ya.z,n),e.forwardX.linearRampToValueAtTime(Za.x,n),e.forwardY.linearRampToValueAtTime(Za.y,n),e.forwardZ.linearRampToValueAtTime(Za.z,n),e.upX.linearRampToValueAtTime(ja.x,n),e.upY.linearRampToValueAtTime(ja.y,n),e.upZ.linearRampToValueAtTime(ja.z,n)}else e.setPosition(Ya.x,Ya.y,Ya.z),e.setOrientation(Za.x,Za.y,Za.z,ja.x,ja.y,ja.z)}}class pS extends Le{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Ka=new I,E_=new Hn,V1=new I,Ja=new I;class G1 extends pS{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ka,E_,V1),Ja.set(0,0,1).applyQuaternion(E_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Ka.x,n),e.positionY.linearRampToValueAtTime(Ka.y,n),e.positionZ.linearRampToValueAtTime(Ka.z,n),e.orientationX.linearRampToValueAtTime(Ja.x,n),e.orientationY.linearRampToValueAtTime(Ja.y,n),e.orientationZ.linearRampToValueAtTime(Ja.z,n)}else e.setPosition(Ka.x,Ka.y,Ka.z),e.setOrientation(Ja.x,Ja.y,Ja.z)}}class k1{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class mS{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,o,l;switch(e){case"quaternion":i=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,o=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[o+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,o,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let o=n,l=i;o!==l;++o)e[o]=e[i+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,o){if(i>=.5)for(let l=0;l!==o;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){Hn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,o){const l=this._workIndex*o;Hn.multiplyQuaternionsFlat(t,l,t,e,t,n),Hn.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,o){const l=1-i;for(let c=0;c!==o;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,o){for(let l=0;l!==o;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const og="\\[\\]\\.:\\/",W1=new RegExp("["+og+"]","g"),lg="[^"+og+"]",X1="[^"+og.replace("\\.","")+"]",q1=/((?:WC+[\/:])*)/.source.replace("WC",lg),Y1=/(WCOD+)?/.source.replace("WCOD",X1),Z1=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",lg),j1=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",lg),K1=new RegExp("^"+q1+Y1+Z1+j1+"$"),J1=["material","materials","bones","map"];class Q1{constructor(t,e,n){const i=n||Ue.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,o=n.length;i!==o;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ue{constructor(t,e,n){this.path=e,this.parsedPath=n||Ue.parseTrackName(e),this.node=Ue.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ue.Composite(t,e,n):new Ue(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(W1,"")}static parseTrackName(t){const e=K1.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const o=n.nodeName.substring(i+1);J1.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(o){for(let l=0;l<o.length;l++){const c=o[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let o=e.propertyIndex;if(t||(t=Ue.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ue.Composite=Q1;Ue.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ue.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ue.prototype.GetterByBindingType=[Ue.prototype._getValue_direct,Ue.prototype._getValue_array,Ue.prototype._getValue_arrayElement,Ue.prototype._getValue_toArray];Ue.prototype.SetterByBindingTypeAndVersioning=[[Ue.prototype._setValue_direct,Ue.prototype._setValue_direct_setNeedsUpdate,Ue.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_array,Ue.prototype._setValue_array_setNeedsUpdate,Ue.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_arrayElement,Ue.prototype._setValue_arrayElement_setNeedsUpdate,Ue.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_fromArray,Ue.prototype._setValue_fromArray_setNeedsUpdate,Ue.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class $1{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Mi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let b=0,S=l;b!==S;++b)o[b].push(new Ue(g,n[b],i[b]))}else if(x<f){c=t[x];const b=--f,S=t[b];e[S.uuid]=x,t[x]=S,e[v]=b,t[b]=g;for(let _=0,E=l;_!==E;++_){const A=o[_],T=A[b];let U=A[x];A[x]=T,U===void 0&&(U=new Ue(g,n[_],i[_])),A[b]=U}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=o){const m=o++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const b=n[v],S=b[m],_=b[p];b[p]=S,b[m]=_}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<o){const g=--o,v=t[g],x=--l,b=t[x];e[v.uuid]=m,t[m]=v,e[b.uuid]=g,t[g]=b,t.pop();for(let S=0,_=i;S!==_;++S){const E=n[S],A=E[g],T=E[x];E[m]=A,E[g]=T,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,b=i;x!==b;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=o}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const o=this._bindings;if(i!==void 0)return o[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=o.length,n[t]=i,l.push(t),c.push(e),o.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new Ue(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),o[n]=o[c],o.pop(),i[n]=i[c],i.pop()}}}class gS{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:ar,endingEnd:ar};for(let f=0;f!==l;++f){const p=o[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=nx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,o=t._clip.duration,l=o/i,c=i/o;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,o=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=o,h[1]=o+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const o=this._startTime;if(o!==null){const h=(t-o)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case Lm:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case Qh:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,o=this._loopCount;const l=n===ix;if(t===0)return o===-1?i:l&&(o&1)===1?e-i:i;if(n===ex){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(o===-1&&(t>=0?(o=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,o+=Math.abs(c);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=o,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(o&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=rr,i.endingEnd=rr):(t?i.endingStart=this.zeroSlopeAtStart?rr:ar:i.endingStart=kl,e?i.endingEnd=this.zeroSlopeAtEnd?rr:ar:i.endingEnd=kl)}_scheduleFading(t,e,n){const i=this._mixer,o=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}const tA=new Float32Array(1);class eA extends cs{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,o=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==o;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const b=e&&e._propertyBindings[m].binding.parsedPath;x=new mS(Ue.create(n,v,b),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,o=this._actionsByClip[i];this._bindAction(t,o&&o.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,o=this._actionsByClip;let l=o[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,o=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[o],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new eg(new Float32Array(2),new Float32Array(2),1,tA),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,o=e[i];t.__cacheIndex=i,e[i]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const i=e||this._root,o=i.uuid;let l=typeof t=="string"?$l.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Qh),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new gS(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,o),p}existingAction(t,e){const n=e||this._root,i=n.uuid,o=typeof t=="string"?$l.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,o=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,o,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,o=i[n];if(o!==void 0){const l=o.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,o=i[e];if(o!==void 0)for(const l in o){const c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class nA extends Om{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new tf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class cg{constructor(t){this.value=t}clone(){return new cg(this.value.clone===void 0?this.value:this.value.clone())}}let iA=0;class sA extends cs{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:iA++}),this.name="",this.usage=Xl,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const o=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<o.length;l++)this.uniforms.push(o[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class aA extends af{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class rA{constructor(t,e,n,i,o,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=o,this.normalized=l,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const T_=new fe;class vS{constructor(t,e,n=0,i=1/0){this.ray=new mr(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new wo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return T_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(T_),this}intersectObject(t,e=!0,n=[]){return fm(t,this,n,e),n.sort(A_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,o=t.length;i<o;i++)fm(t[i],this,n,e);return n.sort(A_),n}}function A_(s,t){return s.distance-t.distance}function fm(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const o=s.children;for(let l=0,c=o.length;l<c;l++)fm(o[l],t,e,!0)}}class oA{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,t.hidden!==void 0&&(this._pageVisibilityHandler=lA.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(t!==void 0?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function lA(){this._document.hidden===!1&&this.reset()}class dm{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=he(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(he(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class cA{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class ug{constructor(t,e,n,i){ug.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const o=this.elements;return o[0]=t,o[2]=e,o[1]=n,o[3]=i,this}}const w_=new ft;class uA{constructor(t=new ft(1/0,1/0),e=new ft(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=w_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,w_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const C_=new I,Lu=new I,co=new I,uo=new I,Dp=new I,hA=new I,fA=new I;class dA{constructor(t=new I,e=new I){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){C_.subVectors(t,this.start),Lu.subVectors(this.end,this.start);const n=Lu.dot(Lu);let o=Lu.dot(C_)/n;return e&&(o=he(o,0,1)),o}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(t,e=hA,n=fA){const i=10000000000000001e-32;let o,l;const c=this.start,h=t.start,f=this.end,p=t.end;co.subVectors(f,c),uo.subVectors(p,h),Dp.subVectors(c,h);const m=co.dot(co),g=uo.dot(uo),v=uo.dot(Dp);if(m<=i&&g<=i)return e.copy(c),n.copy(h),e.sub(n),e.dot(e);if(m<=i)o=0,l=v/g,l=he(l,0,1);else{const x=co.dot(Dp);if(g<=i)l=0,o=he(-x/m,0,1);else{const b=co.dot(uo),S=m*g-b*b;S!==0?o=he((b*v-x*g)/S,0,1):o=0,l=(b*o+v)/g,l<0?(l=0,o=he(-x/m,0,1)):l>1&&(l=1,o=he((b-x)/m,0,1))}}return e.copy(c).add(co.multiplyScalar(o)),n.copy(h).add(uo.multiplyScalar(l)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const R_=new I;class pA extends Le{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new ye,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new jt(i,3));const o=new Jn({fog:!1,toneMapped:!1});this.cone=new us(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),R_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(R_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const la=new I,Pu=new fe,Up=new fe;class mA extends us{constructor(t){const e=_S(t),n=new ye,i=[],o=[];for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),o.push(0,0,0),o.push(0,0,0))}n.setAttribute("position",new jt(i,3)),n.setAttribute("color",new jt(o,3));const l=new Jn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const c=new Gt(255),h=new Gt(65280);this.setColors(c,h)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Up.copy(this.root.matrixWorld).invert();for(let o=0,l=0;o<e.length;o++){const c=e[o];c.parent&&c.parent.isBone&&(Pu.multiplyMatrices(Up,c.matrixWorld),la.setFromMatrixPosition(Pu),i.setXYZ(l,la.x,la.y,la.z),Pu.multiplyMatrices(Up,c.parent.matrixWorld),la.setFromMatrixPosition(Pu),i.setXYZ(l+1,la.x,la.y,la.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const i=this.geometry.getAttribute("color");for(let o=0;o<i.count;o+=2)i.setXYZ(o,t.r,t.g,t.b),i.setXYZ(o+1,e.r,e.g,e.b);return i.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function _S(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(..._S(s.children[e]));return t}class gA extends fn{constructor(t,e,n){const i=new cc(e,4,2),o=new _a({wireframe:!0,fog:!1,toneMapped:!1});super(i,o),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const vA=new I,D_=new Gt,U_=new Gt;class _A extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new lc(e);i.rotateY(Math.PI*.5),this.material=new _a({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const o=i.getAttribute("position"),l=new Float32Array(o.count*3);i.setAttribute("color",new We(l,3)),this.add(new fn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");D_.copy(this.light.color),U_.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const o=n<i/2?D_:U_;e.setXYZ(n,o.r,o.g,o.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(vA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class yA extends us{constructor(t=10,e=10,n=4473924,i=8947848){n=new Gt(n),i=new Gt(i);const o=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const b=g===o?n:i;b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3}const p=new ye;p.setAttribute("position",new jt(h,3)),p.setAttribute("color",new jt(f,3));const m=new Jn({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class xA extends us{constructor(t=10,e=16,n=8,i=64,o=4473924,l=8947848){o=new Gt(o),l=new Gt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const b=m&1?o:l;h.push(b.r,b.g,b.b),h.push(b.r,b.g,b.b)}for(let m=0;m<n;m++){const g=m&1?o:l,v=t-t/n*m;for(let x=0;x<i;x++){let b=x/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v;c.push(S,0,_),h.push(g.r,g.g,g.b),b=(x+1)/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v,c.push(S,0,_),h.push(g.r,g.g,g.b)}}const f=new ye;f.setAttribute("position",new jt(c,3)),f.setAttribute("color",new jt(h,3));const p=new Jn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const N_=new I,Iu=new I,L_=new I;class SA extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new ye;i.setAttribute("position",new jt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new Jn({fog:!1,toneMapped:!1});this.lightPlane=new ga(i,o),this.add(this.lightPlane),i=new ye,i.setAttribute("position",new jt([0,0,0,0,0,1],3)),this.targetLine=new ga(i,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),N_.setFromMatrixPosition(this.light.matrixWorld),Iu.setFromMatrixPosition(this.light.target.matrixWorld),L_.subVectors(Iu,N_),this.lightPlane.lookAt(Iu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Iu),this.targetLine.scale.z=L_.length()}}const Ou=new I,an=new ef;class MA extends us{constructor(t){const e=new ye,n=new Jn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],o=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,b){h(x),h(b)}function h(x){i.push(0,0,0),o.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new jt(i,3)),e.setAttribute("color",new jt(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Gt(16755200),p=new Gt(16711680),m=new Gt(43775),g=new Gt(16777215),v=new Gt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,o){const c=this.geometry.getAttribute("color");return c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,o.r,o.g,o.b),c.setXYZ(41,o.r,o.g,o.b),c.setXYZ(42,o.r,o.g,o.b),c.setXYZ(43,o.r,o.g,o.b),c.setXYZ(44,o.r,o.g,o.b),c.setXYZ(45,o.r,o.g,o.b),c.setXYZ(46,o.r,o.g,o.b),c.setXYZ(47,o.r,o.g,o.b),c.setXYZ(48,o.r,o.g,o.b),c.setXYZ(49,o.r,o.g,o.b),c.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;let o,l;if(an.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)o=1,l=0;else if(this.camera.coordinateSystem===Si)o=-1,l=1;else if(this.camera.coordinateSystem===To)o=0,l=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);on("c",e,t,an,0,0,o),on("t",e,t,an,0,0,l),on("n1",e,t,an,-n,-i,o),on("n2",e,t,an,n,-i,o),on("n3",e,t,an,-n,i,o),on("n4",e,t,an,n,i,o),on("f1",e,t,an,-n,-i,l),on("f2",e,t,an,n,-i,l),on("f3",e,t,an,-n,i,l),on("f4",e,t,an,n,i,l),on("u1",e,t,an,n*.7,i*1.1,o),on("u2",e,t,an,-n*.7,i*1.1,o),on("u3",e,t,an,0,i*2,o),on("cf1",e,t,an,-n,0,l),on("cf2",e,t,an,n,0,l),on("cf3",e,t,an,0,-i,l),on("cf4",e,t,an,0,i,l),on("cn1",e,t,an,-n,0,o),on("cn2",e,t,an,n,0,o),on("cn3",e,t,an,0,-i,o),on("cn4",e,t,an,0,i,o),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function on(s,t,e,n,i,o,l){Ou.set(i,o,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Ou.x,Ou.y,Ou.z)}}const Bu=new Vn;class bA extends us{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),o=new ye;o.setIndex(new We(n,1)),o.setAttribute("position",new We(i,3)),super(o,new Jn({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Bu.setFromObject(this.object),Bu.isEmpty())return;const t=Bu.min,e=Bu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class EA extends us{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],o=new ye;o.setIndex(new We(n,1)),o.setAttribute("position",new jt(i,3)),super(o,new Jn({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class TA extends ga{constructor(t,e=1,n=16776960){const i=n,o=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new ye;l.setAttribute("position",new jt(o,3)),l.computeBoundingSphere(),super(l,new Jn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new ye;h.setAttribute("position",new jt(c,3)),h.computeBoundingSphere(),this.add(new fn(h,new _a({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const P_=new I;let zu,Np;class AA extends Le{constructor(t=new I(0,0,1),e=new I(0,0,0),n=1,i=16776960,o=n*.2,l=o*.2){super(),this.type="ArrowHelper",zu===void 0&&(zu=new ye,zu.setAttribute("position",new jt([0,0,0,0,1,0],3)),Np=new oc(.5,1,5,1),Np.translate(0,-.5,0)),this.position.copy(e),this.line=new ga(zu,new Jn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new fn(Np,new _a({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{P_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(P_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class wA extends us{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ye;i.setAttribute("position",new jt(e,3)),i.setAttribute("color",new jt(n,3));const o=new Jn({vertexColors:!0,toneMapped:!1});super(i,o),this.type="AxesHelper"}setColors(t,e,n){const i=new Gt,o=this.geometry.attributes.color.array;return i.set(t),i.toArray(o,0),i.toArray(o,3),i.set(e),i.toArray(o,6),i.toArray(o,9),i.set(n),i.toArray(o,12),i.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class CA{constructor(){this.type="ShapePath",this.color=new Gt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Bh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,o,l){return this.currentPath.bezierCurveTo(t,e,n,i,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const E=[];for(let A=0,T=_.length;A<T;A++){const U=_[A],R=new ur;R.curves=U.curves,E.push(R)}return E}function n(_,E){const A=E.length;let T=!1;for(let U=A-1,R=0;R<A;U=R++){let P=E[U],B=E[R],C=B.x-P.x,w=B.y-P.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(P=E[R],C=-C,B=E[U],w=-w),_.y<P.y||_.y>B.y)continue;if(_.y===P.y){if(_.x===P.x)return!0}else{const z=w*(_.x-P.x)-C*(_.y-P.y);if(z===0)return!0;if(z<0)continue;T=!T}}else{if(_.y!==P.y)continue;if(B.x<=_.x&&_.x<=P.x||P.x<=_.x&&_.x<=B.x)return!0}}return T}const i=Zi.isClockWise,o=this.subPaths;if(o.length===0)return[];let l,c,h;const f=[];if(o.length===1)return c=o[0],h=new ur,h.curves=c.curves,f.push(h),f;let p=!i(o[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,b;g[x]=void 0,v[x]=[];for(let _=0,E=o.length;_<E;_++)c=o[_],b=c.getPoints(),l=i(b),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new ur,p:b},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:b[0]});if(!g[0])return e(o);if(g.length>1){let _=!1,E=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const U=v[A];for(let R=0;R<U.length;R++){const P=U[R];let B=!0;for(let C=0;C<g.length;C++)n(P.p,g[C].p)&&(A!==C&&E++,B?(B=!1,m[C].push(P)):_=!0);B&&m[A].push(P)}}E>0&&_===!1&&(v=m)}let S;for(let _=0,E=g.length;_<E;_++){h=g[_].s,f.push(h),S=v[_];for(let A=0,T=S.length;A<T;A++)h.holes.push(S[A].h)}return f}}class RA extends cs{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function DA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function UA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function NA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function pm(s,t,e,n){const i=LA(n);switch(e){case Dm:return s*t;case jh:return s*t/i.components*i.byteLength;case sc:return s*t/i.components*i.byteLength;case Nm:return s*t*2/i.components*i.byteLength;case Kh:return s*t*2/i.components*i.byteLength;case Um:return s*t*3/i.components*i.byteLength;case Fn:return s*t*4/i.components*i.byteLength;case Jh:return s*t*4/i.components*i.byteLength;case Dl:case Ul:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Nl:case Ll:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case rh:case lh:return Math.max(s,16)*Math.max(t,8)/4;case ah:case oh:return Math.max(s,8)*Math.max(t,8)/2;case ch:case uh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case hh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case fh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case dh:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case ph:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case mh:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case gh:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case vh:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case _h:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case yh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case xh:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case Sh:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case Mh:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case bh:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case Eh:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case Th:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case Ah:case wh:case Ch:return Math.ceil(s/4)*Math.ceil(t/4)*16;case Rh:case Dh:return Math.ceil(s/4)*Math.ceil(t/4)*8;case Uh:case Nh:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function LA(s){switch(s){case Ii:case Am:return{byteLength:1,components:1};case So:case wm:case Lo:return{byteLength:2,components:1};case Yh:case Zh:return{byteLength:2,components:4};case zs:case qh:case ai:return{byteLength:4,components:1};case Cm:case Rm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class PA{static contain(t,e){return DA(t,e)}static cover(t,e){return UA(t,e)}static fill(t){return NA(t)}static getByteLength(t,e,n,i){return pm(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:kh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=kh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function yS(){let s=null,t=!1,e=null,n=null;function i(o,l){e(o,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){s=o}}}function IA(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=s.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],b=m[v];b.start<=x.start+x.count+1?x.count=Math.max(x.count,b.start+b.count-x.start):(++g,m[g]=b)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const b=m[v];s.bufferSubData(f,b.start*p.BYTES_PER_ELEMENT,p,b.start,b.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:o,update:l}}var OA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,BA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,zA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,FA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,HA=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,VA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,GA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,kA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,WA=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,XA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,qA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,YA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,ZA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,jA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,KA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,JA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,QA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,$A=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,tw=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,ew=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,nw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,iw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,sw=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,aw=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,rw=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ow=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,lw=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,cw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,uw=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,hw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,fw="gl_FragColor = linearToOutputTexel( gl_FragColor );",dw=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,pw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,mw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,gw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,vw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,_w=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,yw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,xw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Sw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Mw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,bw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Ew=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Tw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Aw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,ww=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Cw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Rw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Dw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Uw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Nw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Lw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Pw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Iw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Ow=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Bw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,zw=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Fw=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Hw=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Vw=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Gw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,kw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Ww=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Xw=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Yw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Zw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,jw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Kw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Jw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Qw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,$w=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,tC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,eC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,iC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,sC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,aC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,rC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,oC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,lC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,cC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,uC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,hC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,fC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,pC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,mC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,gC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,vC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,_C=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,yC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,xC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,SC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,MC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,bC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,EC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,TC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,AC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,wC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,CC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,RC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,DC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,UC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,NC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,LC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,PC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const IC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,OC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,BC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,zC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,FC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,HC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,VC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,GC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,kC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,WC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,XC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,qC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,YC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ZC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,jC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,KC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,QC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$C=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,tR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,nR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,iR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,rR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,uR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,hR=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,dR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,pR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Se={alphahash_fragment:OA,alphahash_pars_fragment:BA,alphamap_fragment:zA,alphamap_pars_fragment:FA,alphatest_fragment:HA,alphatest_pars_fragment:VA,aomap_fragment:GA,aomap_pars_fragment:kA,batching_pars_vertex:WA,batching_vertex:XA,begin_vertex:qA,beginnormal_vertex:YA,bsdfs:ZA,iridescence_fragment:jA,bumpmap_pars_fragment:KA,clipping_planes_fragment:JA,clipping_planes_pars_fragment:QA,clipping_planes_pars_vertex:$A,clipping_planes_vertex:tw,color_fragment:ew,color_pars_fragment:nw,color_pars_vertex:iw,color_vertex:sw,common:aw,cube_uv_reflection_fragment:rw,defaultnormal_vertex:ow,displacementmap_pars_vertex:lw,displacementmap_vertex:cw,emissivemap_fragment:uw,emissivemap_pars_fragment:hw,colorspace_fragment:fw,colorspace_pars_fragment:dw,envmap_fragment:pw,envmap_common_pars_fragment:mw,envmap_pars_fragment:gw,envmap_pars_vertex:vw,envmap_physical_pars_fragment:Cw,envmap_vertex:_w,fog_vertex:yw,fog_pars_vertex:xw,fog_fragment:Sw,fog_pars_fragment:Mw,gradientmap_pars_fragment:bw,lightmap_pars_fragment:Ew,lights_lambert_fragment:Tw,lights_lambert_pars_fragment:Aw,lights_pars_begin:ww,lights_toon_fragment:Rw,lights_toon_pars_fragment:Dw,lights_phong_fragment:Uw,lights_phong_pars_fragment:Nw,lights_physical_fragment:Lw,lights_physical_pars_fragment:Pw,lights_fragment_begin:Iw,lights_fragment_maps:Ow,lights_fragment_end:Bw,logdepthbuf_fragment:zw,logdepthbuf_pars_fragment:Fw,logdepthbuf_pars_vertex:Hw,logdepthbuf_vertex:Vw,map_fragment:Gw,map_pars_fragment:kw,map_particle_fragment:Ww,map_particle_pars_fragment:Xw,metalnessmap_fragment:qw,metalnessmap_pars_fragment:Yw,morphinstance_vertex:Zw,morphcolor_vertex:jw,morphnormal_vertex:Kw,morphtarget_pars_vertex:Jw,morphtarget_vertex:Qw,normal_fragment_begin:$w,normal_fragment_maps:tC,normal_pars_fragment:eC,normal_pars_vertex:nC,normal_vertex:iC,normalmap_pars_fragment:sC,clearcoat_normal_fragment_begin:aC,clearcoat_normal_fragment_maps:rC,clearcoat_pars_fragment:oC,iridescence_pars_fragment:lC,opaque_fragment:cC,packing:uC,premultiplied_alpha_fragment:hC,project_vertex:fC,dithering_fragment:dC,dithering_pars_fragment:pC,roughnessmap_fragment:mC,roughnessmap_pars_fragment:gC,shadowmap_pars_fragment:vC,shadowmap_pars_vertex:_C,shadowmap_vertex:yC,shadowmask_pars_fragment:xC,skinbase_vertex:SC,skinning_pars_vertex:MC,skinning_vertex:bC,skinnormal_vertex:EC,specularmap_fragment:TC,specularmap_pars_fragment:AC,tonemapping_fragment:wC,tonemapping_pars_fragment:CC,transmission_fragment:RC,transmission_pars_fragment:DC,uv_pars_fragment:UC,uv_pars_vertex:NC,uv_vertex:LC,worldpos_vertex:PC,background_vert:IC,background_frag:OC,backgroundCube_vert:BC,backgroundCube_frag:zC,cube_vert:FC,cube_frag:HC,depth_vert:VC,depth_frag:GC,distanceRGBA_vert:kC,distanceRGBA_frag:WC,equirect_vert:XC,equirect_frag:qC,linedashed_vert:YC,linedashed_frag:ZC,meshbasic_vert:jC,meshbasic_frag:KC,meshlambert_vert:JC,meshlambert_frag:QC,meshmatcap_vert:$C,meshmatcap_frag:tR,meshnormal_vert:eR,meshnormal_frag:nR,meshphong_vert:iR,meshphong_frag:sR,meshphysical_vert:aR,meshphysical_frag:rR,meshtoon_vert:oR,meshtoon_frag:lR,points_vert:cR,points_frag:uR,shadow_vert:hR,shadow_frag:fR,sprite_vert:dR,sprite_frag:pR},Ot={common:{diffuse:{value:new Gt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ge},alphaMap:{value:null},alphaMapTransform:{value:new ge},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ge}},envmap:{envMap:{value:null},envMapRotation:{value:new ge},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ge}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ge}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ge},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ge},normalScale:{value:new ft(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ge},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ge}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ge}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ge}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Gt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Gt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ge},alphaTest:{value:0},uvTransform:{value:new ge}},sprite:{diffuse:{value:new Gt(16777215)},opacity:{value:1},center:{value:new ft(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ge},alphaMap:{value:null},alphaMapTransform:{value:new ge},alphaTest:{value:0}}},Yi={basic:{uniforms:Zn([Ot.common,Ot.specularmap,Ot.envmap,Ot.aomap,Ot.lightmap,Ot.fog]),vertexShader:Se.meshbasic_vert,fragmentShader:Se.meshbasic_frag},lambert:{uniforms:Zn([Ot.common,Ot.specularmap,Ot.envmap,Ot.aomap,Ot.lightmap,Ot.emissivemap,Ot.bumpmap,Ot.normalmap,Ot.displacementmap,Ot.fog,Ot.lights,{emissive:{value:new Gt(0)}}]),vertexShader:Se.meshlambert_vert,fragmentShader:Se.meshlambert_frag},phong:{uniforms:Zn([Ot.common,Ot.specularmap,Ot.envmap,Ot.aomap,Ot.lightmap,Ot.emissivemap,Ot.bumpmap,Ot.normalmap,Ot.displacementmap,Ot.fog,Ot.lights,{emissive:{value:new Gt(0)},specular:{value:new Gt(1118481)},shininess:{value:30}}]),vertexShader:Se.meshphong_vert,fragmentShader:Se.meshphong_frag},standard:{uniforms:Zn([Ot.common,Ot.envmap,Ot.aomap,Ot.lightmap,Ot.emissivemap,Ot.bumpmap,Ot.normalmap,Ot.displacementmap,Ot.roughnessmap,Ot.metalnessmap,Ot.fog,Ot.lights,{emissive:{value:new Gt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Se.meshphysical_vert,fragmentShader:Se.meshphysical_frag},toon:{uniforms:Zn([Ot.common,Ot.aomap,Ot.lightmap,Ot.emissivemap,Ot.bumpmap,Ot.normalmap,Ot.displacementmap,Ot.gradientmap,Ot.fog,Ot.lights,{emissive:{value:new Gt(0)}}]),vertexShader:Se.meshtoon_vert,fragmentShader:Se.meshtoon_frag},matcap:{uniforms:Zn([Ot.common,Ot.bumpmap,Ot.normalmap,Ot.displacementmap,Ot.fog,{matcap:{value:null}}]),vertexShader:Se.meshmatcap_vert,fragmentShader:Se.meshmatcap_frag},points:{uniforms:Zn([Ot.points,Ot.fog]),vertexShader:Se.points_vert,fragmentShader:Se.points_frag},dashed:{uniforms:Zn([Ot.common,Ot.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Se.linedashed_vert,fragmentShader:Se.linedashed_frag},depth:{uniforms:Zn([Ot.common,Ot.displacementmap]),vertexShader:Se.depth_vert,fragmentShader:Se.depth_frag},normal:{uniforms:Zn([Ot.common,Ot.bumpmap,Ot.normalmap,Ot.displacementmap,{opacity:{value:1}}]),vertexShader:Se.meshnormal_vert,fragmentShader:Se.meshnormal_frag},sprite:{uniforms:Zn([Ot.sprite,Ot.fog]),vertexShader:Se.sprite_vert,fragmentShader:Se.sprite_frag},background:{uniforms:{uvTransform:{value:new ge},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Se.background_vert,fragmentShader:Se.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ge}},vertexShader:Se.backgroundCube_vert,fragmentShader:Se.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Se.cube_vert,fragmentShader:Se.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Se.equirect_vert,fragmentShader:Se.equirect_frag},distanceRGBA:{uniforms:Zn([Ot.common,Ot.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Se.distanceRGBA_vert,fragmentShader:Se.distanceRGBA_frag},shadow:{uniforms:Zn([Ot.lights,Ot.fog,{color:{value:new Gt(0)},opacity:{value:1}}]),vertexShader:Se.shadow_vert,fragmentShader:Se.shadow_frag}};Yi.physical={uniforms:Zn([Yi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ge},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ge},clearcoatNormalScale:{value:new ft(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ge},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ge},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ge},sheen:{value:0},sheenColor:{value:new Gt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ge},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ge},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ge},transmissionSamplerSize:{value:new ft},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ge},attenuationDistance:{value:0},attenuationColor:{value:new Gt(0)},specularColor:{value:new Gt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ge},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ge},anisotropyVector:{value:new ft},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ge}}]),vertexShader:Se.meshphysical_vert,fragmentShader:Se.meshphysical_frag};const Fu={r:0,b:0,g:0},Qa=new bi,mR=new fe;function gR(s,t,e,n,i,o,l){const c=new Gt(0);let h=o===!0?0:1,f,p,m=null,g=0,v=null;function x(A){let T=A.isScene===!0?A.background:null;return T&&T.isTexture&&(T=(A.backgroundBlurriness>0?e:t).get(T)),T}function b(A){let T=!1;const U=x(A);U===null?_(c,h):U&&U.isColor&&(_(U,1),T=!0);const R=s.xr.getEnvironmentBlendMode();R==="additive"?n.buffers.color.setClear(0,0,0,1,l):R==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(A,T){const U=x(T);U&&(U.isCubeTexture||U.mapping===No)?(p===void 0&&(p=new fn(new gr(1,1,1),new ji({name:"BackgroundCubeMaterial",uniforms:Co(Yi.backgroundCube.uniforms),vertexShader:Yi.backgroundCube.vertexShader,fragmentShader:Yi.backgroundCube.fragmentShader,side:Kn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(R,P,B){this.matrixWorld.copyPosition(B.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),Qa.copy(T.backgroundRotation),Qa.x*=-1,Qa.y*=-1,Qa.z*=-1,U.isCubeTexture&&U.isRenderTargetTexture===!1&&(Qa.y*=-1,Qa.z*=-1),p.material.uniforms.envMap.value=U,p.material.uniforms.flipEnvMap.value=U.isCubeTexture&&U.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(mR.makeRotationFromEuler(Qa)),p.material.toneMapped=Re.getTransfer(U.colorSpace)!==He,(m!==U||g!==U.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=U,g=U.version,v=s.toneMapping),p.layers.enableAll(),A.unshift(p,p.geometry,p.material,0,0,null)):U&&U.isTexture&&(f===void 0&&(f=new fn(new Io(2,2),new ji({name:"BackgroundMaterial",uniforms:Co(Yi.background.uniforms),vertexShader:Yi.background.vertexShader,fragmentShader:Yi.background.fragmentShader,side:Os,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=U,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=Re.getTransfer(U.colorSpace)!==He,U.matrixAutoUpdate===!0&&U.updateMatrix(),f.material.uniforms.uvTransform.value.copy(U.matrix),(m!==U||g!==U.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=U,g=U.version,v=s.toneMapping),f.layers.enableAll(),A.unshift(f,f.geometry,f.material,0,0,null))}function _(A,T){A.getRGB(Fu,_x(s)),n.buffers.color.setClear(Fu.r,Fu.g,Fu.b,T,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(A,T=1){c.set(A),h=T,_(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(A){h=A,_(c,h)},render:b,addToRenderList:S,dispose:E}}function vR(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let o=i,l=!1;function c(w,z,Y,X,$){let it=!1;const k=m(X,Y,z);o!==k&&(o=k,f(o.object)),it=v(w,X,Y,$),it&&x(w,X,Y,$),$!==null&&t.update($,s.ELEMENT_ARRAY_BUFFER),(it||l)&&(l=!1,T(w,z,Y,X),$!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get($).buffer))}function h(){return s.createVertexArray()}function f(w){return s.bindVertexArray(w)}function p(w){return s.deleteVertexArray(w)}function m(w,z,Y){const X=Y.wireframe===!0;let $=n[w.id];$===void 0&&($={},n[w.id]=$);let it=$[z.id];it===void 0&&(it={},$[z.id]=it);let k=it[X];return k===void 0&&(k=g(h()),it[X]=k),k}function g(w){const z=[],Y=[],X=[];for(let $=0;$<e;$++)z[$]=0,Y[$]=0,X[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:Y,attributeDivisors:X,object:w,attributes:{},index:null}}function v(w,z,Y,X){const $=o.attributes,it=z.attributes;let k=0;const et=Y.getAttributes();for(const q in et)if(et[q].location>=0){const yt=$[q];let St=it[q];if(St===void 0&&(q==="instanceMatrix"&&w.instanceMatrix&&(St=w.instanceMatrix),q==="instanceColor"&&w.instanceColor&&(St=w.instanceColor)),yt===void 0||yt.attribute!==St||St&&yt.data!==St.data)return!0;k++}return o.attributesNum!==k||o.index!==X}function x(w,z,Y,X){const $={},it=z.attributes;let k=0;const et=Y.getAttributes();for(const q in et)if(et[q].location>=0){let yt=it[q];yt===void 0&&(q==="instanceMatrix"&&w.instanceMatrix&&(yt=w.instanceMatrix),q==="instanceColor"&&w.instanceColor&&(yt=w.instanceColor));const St={};St.attribute=yt,yt&&yt.data&&(St.data=yt.data),$[q]=St,k++}o.attributes=$,o.attributesNum=k,o.index=X}function b(){const w=o.newAttributes;for(let z=0,Y=w.length;z<Y;z++)w[z]=0}function S(w){_(w,0)}function _(w,z){const Y=o.newAttributes,X=o.enabledAttributes,$=o.attributeDivisors;Y[w]=1,X[w]===0&&(s.enableVertexAttribArray(w),X[w]=1),$[w]!==z&&(s.vertexAttribDivisor(w,z),$[w]=z)}function E(){const w=o.newAttributes,z=o.enabledAttributes;for(let Y=0,X=z.length;Y<X;Y++)z[Y]!==w[Y]&&(s.disableVertexAttribArray(Y),z[Y]=0)}function A(w,z,Y,X,$,it,k){k===!0?s.vertexAttribIPointer(w,z,Y,$,it):s.vertexAttribPointer(w,z,Y,X,$,it)}function T(w,z,Y,X){b();const $=X.attributes,it=Y.getAttributes(),k=z.defaultAttributeValues;for(const et in it){const q=it[et];if(q.location>=0){let lt=$[et];if(lt===void 0&&(et==="instanceMatrix"&&w.instanceMatrix&&(lt=w.instanceMatrix),et==="instanceColor"&&w.instanceColor&&(lt=w.instanceColor)),lt!==void 0){const yt=lt.normalized,St=lt.itemSize,It=t.get(lt);if(It===void 0)continue;const Qt=It.buffer,Kt=It.type,le=It.bytesPerElement,ut=Kt===s.INT||Kt===s.UNSIGNED_INT||lt.gpuType===qh;if(lt.isInterleavedBufferAttribute){const xt=lt.data,zt=xt.stride,Jt=lt.offset;if(xt.isInstancedInterleavedBuffer){for(let Yt=0;Yt<q.locationSize;Yt++)_(q.location+Yt,xt.meshPerAttribute);w.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=xt.meshPerAttribute*xt.count)}else for(let Yt=0;Yt<q.locationSize;Yt++)S(q.location+Yt);s.bindBuffer(s.ARRAY_BUFFER,Qt);for(let Yt=0;Yt<q.locationSize;Yt++)A(q.location+Yt,St/q.locationSize,Kt,yt,zt*le,(Jt+St/q.locationSize*Yt)*le,ut)}else{if(lt.isInstancedBufferAttribute){for(let xt=0;xt<q.locationSize;xt++)_(q.location+xt,lt.meshPerAttribute);w.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=lt.meshPerAttribute*lt.count)}else for(let xt=0;xt<q.locationSize;xt++)S(q.location+xt);s.bindBuffer(s.ARRAY_BUFFER,Qt);for(let xt=0;xt<q.locationSize;xt++)A(q.location+xt,St/q.locationSize,Kt,yt,St*le,St/q.locationSize*xt*le,ut)}}else if(k!==void 0){const yt=k[et];if(yt!==void 0)switch(yt.length){case 2:s.vertexAttrib2fv(q.location,yt);break;case 3:s.vertexAttrib3fv(q.location,yt);break;case 4:s.vertexAttrib4fv(q.location,yt);break;default:s.vertexAttrib1fv(q.location,yt)}}}}E()}function U(){B();for(const w in n){const z=n[w];for(const Y in z){const X=z[Y];for(const $ in X)p(X[$].object),delete X[$];delete z[Y]}delete n[w]}}function R(w){if(n[w.id]===void 0)return;const z=n[w.id];for(const Y in z){const X=z[Y];for(const $ in X)p(X[$].object),delete X[$];delete z[Y]}delete n[w.id]}function P(w){for(const z in n){const Y=n[z];if(Y[w.id]===void 0)continue;const X=Y[w.id];for(const $ in X)p(X[$].object),delete X[$];delete Y[w.id]}}function B(){C(),l=!0,o!==i&&(o=i,f(o.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:B,resetDefaultState:C,dispose:U,releaseStatesOfGeometry:R,releaseStatesOfProgram:P,initAttributes:b,enableAttribute:S,disableUnusedAttributes:E}}function _R(s,t,e){let n;function i(f){n=f}function o(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let b=0;b<m;b++)x+=p[b]*g[b];e.update(x,n,1)}}this.setMode=i,this.render=o,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function yR(s,t,e,n){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const P=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(P){return!(P!==Fn&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const B=P===Lo&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(P!==Ii&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==ai&&!B)}function h(P){if(P==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reversedDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),E=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),A=s.getParameter(s.MAX_VARYING_VECTORS),T=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),U=x>0,R=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reversedDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:b,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:E,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:U,maxSamples:R}}function xR(s){const t=this;let e=null,n=0,i=!1,o=!1;const l=new Us,c=new ge,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,b=m.clipIntersection,S=m.clipShadows,_=s.get(m);if(!i||x===null||x.length===0||o&&!S)o?p(null):f();else{const E=o?0:n,A=E*4;let T=_.clippingState||null;h.value=T,T=p(x,g,A,v);for(let U=0;U!==A;++U)T[U]=e[U];_.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const b=m!==null?m.length:0;let S=null;if(b!==0){if(S=h.value,x!==!0||S===null){const _=v+b*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<_)&&(S=new Float32Array(_));for(let A=0,T=v;A!==b;++A,T+=4)l.copy(m[A]).applyMatrix4(E,c),l.normal.toArray(S,T),S[T+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=b,t.numIntersection=0,S}}function SR(s){let t=new WeakMap;function e(l,c){return c===zl?l.mapping=Bs:c===Fl&&(l.mapping=pa),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===zl||c===Fl)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new Sx(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function o(){t=new WeakMap}return{get:n,dispose:o}}const yo=4,I_=[.125,.215,.35,.446,.526,.582],sr=20,Lp=new da,O_=new Gt;let Pp=null,Ip=0,Op=0,Bp=!1;const ir=(1+Math.sqrt(5))/2,ho=1/ir,B_=[new I(-ir,ho,0),new I(ir,ho,0),new I(-ho,0,ir),new I(ho,0,ir),new I(0,ir,-ho),new I(0,ir,ho),new I(-1,1,-1),new I(1,1,-1),new I(-1,1,1),new I(1,1,1)],MR=new I;class mm{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,o={}){const{size:l=256,position:c=MR}=o;Pp=this._renderer.getRenderTarget(),Ip=this._renderer.getActiveCubeFace(),Op=this._renderer.getActiveMipmapLevel(),Bp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=H_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=F_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Pp,Ip,Op),this._renderer.xr.enabled=Bp,t.scissorTest=!1,Hu(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Bs||t.mapping===pa?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Pp=this._renderer.getRenderTarget(),Ip=this._renderer.getActiveCubeFace(),Op=this._renderer.getActiveMipmapLevel(),Bp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:pn,minFilter:pn,generateMipmaps:!1,type:Lo,format:Fn,colorSpace:ma,depthBuffer:!1},i=z_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=z_(t,e,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=bR(o)),this._blurMaterial=ER(o,t,e)}return i}_compileMaterial(t){const e=new fn(this._lodPlanes[0],t);this._renderer.compile(e,Lp)}_sceneToCubeUV(t,e,n,i,o){const h=new ln(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(O_),m.toneMapping=rs,m.autoClear=!1,m.state.buffers.depth.getReversed()&&(m.setRenderTarget(i),m.clearDepth(),m.setRenderTarget(null));const b=new _a({name:"PMREM.Background",side:Kn,depthWrite:!1,depthTest:!1}),S=new fn(new gr,b);let _=!1;const E=t.background;E?E.isColor&&(b.color.copy(E),t.background=null,_=!0):(b.color.copy(O_),_=!0);for(let A=0;A<6;A++){const T=A%3;T===0?(h.up.set(0,f[A],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x+p[A],o.y,o.z)):T===1?(h.up.set(0,0,f[A]),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y+p[A],o.z)):(h.up.set(0,f[A],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y,o.z+p[A]));const U=this._cubeSize;Hu(i,T*U,A>2?U:0,U,U),m.setRenderTarget(i),_&&m.render(S,h),m.render(t,h)}S.geometry.dispose(),S.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=E}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Bs||t.mapping===pa;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=H_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=F_());const o=i?this._cubemapMaterial:this._equirectMaterial,l=new fn(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;const h=this._cubeSize;Hu(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,Lp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const l=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),c=B_[(i-o-1)%B_.length];this._blur(t,o-1,o,l,c)}e.autoClear=n}_blur(t,e,n,i,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",o),this._halfBlur(l,t,n,n,i,"longitudinal",o)}_halfBlur(t,e,n,i,o,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new fn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*sr-1),b=o/x,S=isFinite(o)?1+Math.floor(p*b):sr;S>sr&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${sr}`);const _=[];let E=0;for(let P=0;P<sr;++P){const B=P/b,C=Math.exp(-B*B/2);_.push(C),P===0?E+=C:P<S&&(E+=2*C)}for(let P=0;P<_.length;P++)_[P]=_[P]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[i],U=3*T*(i>A-yo?i-A+yo:0),R=4*(this._cubeSize-T);Hu(e,U,R,3*T,2*T),h.setRenderTarget(e),h.render(m,Lp)}}function bR(s){const t=[],e=[],n=[];let i=s;const o=s-yo+1+I_.length;for(let l=0;l<o;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-yo?h=I_[l-s+yo-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,b=3,S=2,_=1,E=new Float32Array(b*x*v),A=new Float32Array(S*x*v),T=new Float32Array(_*x*v);for(let R=0;R<v;R++){const P=R%3*2/3-1,B=R>2?0:-1,C=[P,B,0,P+2/3,B,0,P+2/3,B+1,0,P,B,0,P+2/3,B+1,0,P,B+1,0];E.set(C,b*x*R),A.set(g,S*x*R);const w=[R,R,R,R,R,R];T.set(w,_*x*R)}const U=new ye;U.setAttribute("position",new We(E,b)),U.setAttribute("uv",new We(A,S)),U.setAttribute("faceIndex",new We(T,_)),t.push(U),i>yo&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function z_(s,t,e){const n=new ls(s,t,e);return n.texture.mapping=No,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Hu(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function ER(s,t,e){const n=new Float32Array(sr),i=new I(0,1,0);return new ji({name:"SphericalGaussianBlur",defines:{n:sr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ps,depthTest:!1,depthWrite:!1})}function F_(){return new ji({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ps,depthTest:!1,depthWrite:!1})}function H_(){return new ji({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ps,depthTest:!1,depthWrite:!1})}function hg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function TR(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===zl||h===Fl,p=h===Bs||h===pa;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new mm(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new mm(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",o),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function o(c){const h=c.target;h.removeEventListener("dispose",o);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function AR(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&Yl("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function wR(s,t,e,n){const i={},o=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=o.get(g);v&&(t.remove(v),o.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let b=0;if(v!==null){const E=v.array;b=v.version;for(let A=0,T=E.length;A<T;A+=3){const U=E[A+0],R=E[A+1],P=E[A+2];g.push(U,R,R,P,P,U)}}else if(x!==void 0){const E=x.array;b=x.version;for(let A=0,T=E.length/3-1;A<T;A+=3){const U=A+0,R=A+1,P=A+2;g.push(U,R,R,P,P,U)}}else return;const S=new(px(g)?zm:Bm)(g,1);S.version=b;const _=o.get(m);_&&t.remove(_),o.set(m,S)}function p(m){const g=o.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function CR(s,t,e){let n;function i(g){n=g}let o,l;function c(g){o=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,o,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,o,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,o,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];e.update(S,n,1)}function m(g,v,x,b){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],b[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,o,g,0,b,0,x);let _=0;for(let E=0;E<x;E++)_+=v[E]*b[E];e.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function RR(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(o/3);break;case s.LINES:e.lines+=c*(o/2);break;case s.LINE_STRIP:e.lines+=c*(o-1);break;case s.LINE_LOOP:e.lines+=c*o;break;case s.POINTS:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function DR(s,t,e){const n=new WeakMap,i=new Ne;function o(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){P.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,b=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),b===!0&&(A=3);let T=c.attributes.position.count*A,U=1;T>t.maxTextureSize&&(U=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const R=new Float32Array(T*U*4*m),P=new $h(R,T,U,m);P.type=ai,P.needsUpdate=!0;const B=A*4;for(let w=0;w<m;w++){const z=S[w],Y=_[w],X=E[w],$=T*U*4*w;for(let it=0;it<z.count;it++){const k=it*B;v===!0&&(i.fromBufferAttribute(z,it),R[$+k+0]=i.x,R[$+k+1]=i.y,R[$+k+2]=i.z,R[$+k+3]=0),x===!0&&(i.fromBufferAttribute(Y,it),R[$+k+4]=i.x,R[$+k+5]=i.y,R[$+k+6]=i.z,R[$+k+7]=0),b===!0&&(i.fromBufferAttribute(X,it),R[$+k+8]=i.x,R[$+k+9]=i.y,R[$+k+10]=i.z,R[$+k+11]=X.itemSize===4?i.w:1)}}g={count:m,texture:P,size:new ft(T,U)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let b=0;b<f.length;b++)v+=f[b];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:o}}function UR(s,t,e,n){let i=new WeakMap;function o(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:l}}const xS=new rn,V_=new km(1,1),SS=new $h,MS=new tf,bS=new ac,G_=[],k_=[],W_=new Float32Array(16),X_=new Float32Array(9),q_=new Float32Array(4);function Oo(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let o=G_[i];if(o===void 0&&(o=new Float32Array(i),G_[i]=o),t!==0){n.toArray(o,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(o,c)}return o}function mn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function gn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function bf(s,t){let e=k_[t];e===void 0&&(e=new Int32Array(t),k_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function NR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function LR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(mn(e,t))return;s.uniform2fv(this.addr,t),gn(e,t)}}function PR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(mn(e,t))return;s.uniform3fv(this.addr,t),gn(e,t)}}function IR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(mn(e,t))return;s.uniform4fv(this.addr,t),gn(e,t)}}function OR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(mn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),gn(e,t)}else{if(mn(e,n))return;q_.set(n),s.uniformMatrix2fv(this.addr,!1,q_),gn(e,n)}}function BR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(mn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),gn(e,t)}else{if(mn(e,n))return;X_.set(n),s.uniformMatrix3fv(this.addr,!1,X_),gn(e,n)}}function zR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(mn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),gn(e,t)}else{if(mn(e,n))return;W_.set(n),s.uniformMatrix4fv(this.addr,!1,W_),gn(e,n)}}function FR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function HR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(mn(e,t))return;s.uniform2iv(this.addr,t),gn(e,t)}}function VR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(mn(e,t))return;s.uniform3iv(this.addr,t),gn(e,t)}}function GR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(mn(e,t))return;s.uniform4iv(this.addr,t),gn(e,t)}}function kR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function WR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(mn(e,t))return;s.uniform2uiv(this.addr,t),gn(e,t)}}function XR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(mn(e,t))return;s.uniform3uiv(this.addr,t),gn(e,t)}}function qR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(mn(e,t))return;s.uniform4uiv(this.addr,t),gn(e,t)}}function YR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let o;this.type===s.SAMPLER_2D_SHADOW?(V_.compareFunction=Pm,o=V_):o=xS,e.setTexture2D(t||o,i)}function ZR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||MS,i)}function jR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||bS,i)}function KR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||SS,i)}function JR(s){switch(s){case 5126:return NR;case 35664:return LR;case 35665:return PR;case 35666:return IR;case 35674:return OR;case 35675:return BR;case 35676:return zR;case 5124:case 35670:return FR;case 35667:case 35671:return HR;case 35668:case 35672:return VR;case 35669:case 35673:return GR;case 5125:return kR;case 36294:return WR;case 36295:return XR;case 36296:return qR;case 35678:case 36198:case 36298:case 36306:case 35682:return YR;case 35679:case 36299:case 36307:return ZR;case 35680:case 36300:case 36308:case 36293:return jR;case 36289:case 36303:case 36311:case 36292:return KR}}function QR(s,t){s.uniform1fv(this.addr,t)}function $R(s,t){const e=Oo(t,this.size,2);s.uniform2fv(this.addr,e)}function t2(s,t){const e=Oo(t,this.size,3);s.uniform3fv(this.addr,e)}function e2(s,t){const e=Oo(t,this.size,4);s.uniform4fv(this.addr,e)}function n2(s,t){const e=Oo(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function i2(s,t){const e=Oo(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function s2(s,t){const e=Oo(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function a2(s,t){s.uniform1iv(this.addr,t)}function r2(s,t){s.uniform2iv(this.addr,t)}function o2(s,t){s.uniform3iv(this.addr,t)}function l2(s,t){s.uniform4iv(this.addr,t)}function c2(s,t){s.uniform1uiv(this.addr,t)}function u2(s,t){s.uniform2uiv(this.addr,t)}function h2(s,t){s.uniform3uiv(this.addr,t)}function f2(s,t){s.uniform4uiv(this.addr,t)}function d2(s,t,e){const n=this.cache,i=t.length,o=bf(e,i);mn(n,o)||(s.uniform1iv(this.addr,o),gn(n,o));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||xS,o[l])}function p2(s,t,e){const n=this.cache,i=t.length,o=bf(e,i);mn(n,o)||(s.uniform1iv(this.addr,o),gn(n,o));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||MS,o[l])}function m2(s,t,e){const n=this.cache,i=t.length,o=bf(e,i);mn(n,o)||(s.uniform1iv(this.addr,o),gn(n,o));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||bS,o[l])}function g2(s,t,e){const n=this.cache,i=t.length,o=bf(e,i);mn(n,o)||(s.uniform1iv(this.addr,o),gn(n,o));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||SS,o[l])}function v2(s){switch(s){case 5126:return QR;case 35664:return $R;case 35665:return t2;case 35666:return e2;case 35674:return n2;case 35675:return i2;case 35676:return s2;case 5124:case 35670:return a2;case 35667:case 35671:return r2;case 35668:case 35672:return o2;case 35669:case 35673:return l2;case 5125:return c2;case 36294:return u2;case 36295:return h2;case 36296:return f2;case 35678:case 36198:case 36298:case 36306:case 35682:return d2;case 35679:case 36299:case 36307:return p2;case 35680:case 36300:case 36308:case 36293:return m2;case 36289:case 36303:case 36311:case 36292:return g2}}class _2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=JR(e.type)}}class y2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=v2(e.type)}}class x2{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let o=0,l=i.length;o!==l;++o){const c=i[o];c.setValue(t,e[c.id],n)}}}const zp=/(\w+)(\])?(\[|\.)?/g;function Y_(s,t){s.seq.push(t),s.map[t.id]=t}function S2(s,t,e){const n=s.name,i=n.length;for(zp.lastIndex=0;;){const o=zp.exec(n),l=zp.lastIndex;let c=o[1];const h=o[2]==="]",f=o[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){Y_(e,f===void 0?new _2(c,s,t):new y2(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new x2(c),Y_(e,m)),e=m}}}class Zu{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const o=t.getActiveUniform(e,i),l=t.getUniformLocation(e,o.name);S2(o,l,this)}}setValue(t,e,n,i){const o=this.map[e];o!==void 0&&o.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let o=0,l=e.length;o!==l;++o){const c=e[o],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,o=t.length;i!==o;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function Z_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const M2=37297;let b2=0;function E2(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let l=i;l<o;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const j_=new ge;function T2(s){Re._getMatrix(j_,Re.workingColorSpace,s);const t=`mat3( ${j_.elements.map(e=>e.toFixed(4))} )`;switch(Re.getTransfer(s)){case Wl:return[t,"LinearTransferOETF"];case He:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function K_(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),o=(s.getShaderInfoLog(t)||"").trim();if(n&&o==="")return"";const l=/ERROR: 0:(\d+)/.exec(o);if(l){const c=parseInt(l[1]);return e.toUpperCase()+`

`+o+`

`+E2(s.getShaderSource(t),c)}else return o}function A2(s,t){const e=T2(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function w2(s,t){let e;switch(t){case Zy:e="Linear";break;case jy:e="Reinhard";break;case Ky:e="Cineon";break;case Em:e="ACESFilmic";break;case Qy:e="AgX";break;case $y:e="Neutral";break;case Jy:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Vu=new I;function C2(){Re.getLuminanceCoefficients(Vu);const s=Vu.x.toFixed(4),t=Vu.y.toFixed(4),e=Vu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function R2(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(wl).join(`
`)}function D2(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function U2(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const o=s.getActiveAttrib(t,i),l=o.name;let c=1;o.type===s.FLOAT_MAT2&&(c=2),o.type===s.FLOAT_MAT3&&(c=3),o.type===s.FLOAT_MAT4&&(c=4),e[l]={type:o.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function wl(s){return s!==""}function J_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Q_(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const N2=/^[ \t]*#include +<([\w\d./]+)>/gm;function gm(s){return s.replace(N2,P2)}const L2=new Map;function P2(s,t){let e=Se[t];if(e===void 0){const n=L2.get(t);if(n!==void 0)e=Se[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return gm(e)}const I2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function $_(s){return s.replace(I2,O2)}function O2(s,t,e,n){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function ty(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function B2(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Wh?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===Cl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===qi&&(t="SHADOWMAP_TYPE_VSM"),t}function z2(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Bs:case pa:t="ENVMAP_TYPE_CUBE";break;case No:t="ENVMAP_TYPE_CUBE_UV";break}return t}function F2(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case pa:t="ENVMAP_MODE_REFRACTION";break}return t}function H2(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case ic:t="ENVMAP_BLENDING_MULTIPLY";break;case qy:t="ENVMAP_BLENDING_MIX";break;case Yy:t="ENVMAP_BLENDING_ADD";break}return t}function V2(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}function G2(s,t,e,n){const i=s.getContext(),o=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=B2(e),f=z2(e),p=F2(e),m=H2(e),g=V2(e),v=R2(e),x=D2(o),b=i.createProgram();let S,_,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(wl).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(wl).join(`
`),_.length>0&&(_+=`
`)):(S=[ty(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(wl).join(`
`),_=[ty(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==rs?"#define TONE_MAPPING":"",e.toneMapping!==rs?Se.tonemapping_pars_fragment:"",e.toneMapping!==rs?w2("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Se.colorspace_pars_fragment,A2("linearToOutputTexel",e.outputColorSpace),C2(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(wl).join(`
`)),l=gm(l),l=J_(l,e),l=Q_(l,e),c=gm(c),c=J_(c,e),c=Q_(c,e),l=$_(l),c=$_(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",e.glslVersion===rm?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===rm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const A=E+S+l,T=E+_+c,U=Z_(i,i.VERTEX_SHADER,A),R=Z_(i,i.FRAGMENT_SHADER,T);i.attachShader(b,U),i.attachShader(b,R),e.index0AttributeName!==void 0?i.bindAttribLocation(b,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b);function P(z){if(s.debug.checkShaderErrors){const Y=i.getProgramInfoLog(b)||"",X=i.getShaderInfoLog(U)||"",$=i.getShaderInfoLog(R)||"",it=Y.trim(),k=X.trim(),et=$.trim();let q=!0,lt=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(q=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,b,U,R);else{const yt=K_(i,U,"vertex"),St=K_(i,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Material Name: `+z.name+`
Material Type: `+z.type+`

Program Info Log: `+it+`
`+yt+`
`+St)}else it!==""?console.warn("THREE.WebGLProgram: Program Info Log:",it):(k===""||et==="")&&(lt=!1);lt&&(z.diagnostics={runnable:q,programLog:it,vertexShader:{log:k,prefix:S},fragmentShader:{log:et,prefix:_}})}i.deleteShader(U),i.deleteShader(R),B=new Zu(i,b),C=U2(i,b)}let B;this.getUniforms=function(){return B===void 0&&P(this),B};let C;this.getAttributes=function(){return C===void 0&&P(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(b,M2)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=b2++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=U,this.fragmentShader=R,this}let k2=0;class W2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(o)===!1&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new X2(t),e.set(t,n)),n}}class X2{constructor(t){this.id=k2++,this.code=t,this.usedTimes=0}}function q2(s,t,e,n,i,o,l){const c=new wo,h=new W2,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,z,Y,X){const $=Y.fog,it=X.geometry,k=C.isMeshStandardMaterial?Y.environment:null,et=(C.isMeshStandardMaterial?e:t).get(C.envMap||k),q=et&&et.mapping===No?et.image.height:null,lt=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const yt=it.morphAttributes.position||it.morphAttributes.normal||it.morphAttributes.color,St=yt!==void 0?yt.length:0;let It=0;it.morphAttributes.position!==void 0&&(It=1),it.morphAttributes.normal!==void 0&&(It=2),it.morphAttributes.color!==void 0&&(It=3);let Qt,Kt,le,ut;if(lt){const xe=Yi[lt];Qt=xe.vertexShader,Kt=xe.fragmentShader}else Qt=C.vertexShader,Kt=C.fragmentShader,h.update(C),le=h.getVertexShaderID(C),ut=h.getFragmentShaderID(C);const xt=s.getRenderTarget(),zt=s.state.buffers.depth.getReversed(),Jt=X.isInstancedMesh===!0,Yt=X.isBatchedMesh===!0,me=!!C.map,we=!!C.matcap,F=!!et,vt=!!C.aoMap,pt=!!C.lightMap,dt=!!C.bumpMap,ct=!!C.normalMap,Nt=!!C.displacementMap,bt=!!C.emissiveMap,Ct=!!C.metalnessMap,re=!!C.roughnessMap,ce=C.anisotropy>0,O=C.clearcoat>0,D=C.dispersion>0,J=C.iridescence>0,rt=C.sheen>0,_t=C.transmission>0,ot=ce&&!!C.anisotropyMap,Zt=O&&!!C.clearcoatMap,Dt=O&&!!C.clearcoatNormalMap,Wt=O&&!!C.clearcoatRoughnessMap,Xt=J&&!!C.iridescenceMap,Mt=J&&!!C.iridescenceThicknessMap,Lt=rt&&!!C.sheenColorMap,$t=rt&&!!C.sheenRoughnessMap,H=!!C.specularMap,tt=!!C.specularColorMap,Tt=!!C.specularIntensityMap,V=_t&&!!C.transmissionMap,gt=_t&&!!C.thicknessMap,At=!!C.gradientMap,Bt=!!C.alphaMap,Et=C.alphaTest>0,mt=!!C.alphaHash,Ft=!!C.extensions;let te=rs;C.toneMapped&&(xt===null||xt.isXRRenderTarget===!0)&&(te=s.toneMapping);const Ee={shaderID:lt,shaderType:C.type,shaderName:C.name,vertexShader:Qt,fragmentShader:Kt,defines:C.defines,customVertexShaderID:le,customFragmentShaderID:ut,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:Yt,batchingColor:Yt&&X._colorsTexture!==null,instancing:Jt,instancingColor:Jt&&X.instanceColor!==null,instancingMorph:Jt&&X.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:xt===null?s.outputColorSpace:xt.isXRRenderTarget===!0?xt.texture.colorSpace:ma,alphaToCoverage:!!C.alphaToCoverage,map:me,matcap:we,envMap:F,envMapMode:F&&et.mapping,envMapCubeUVHeight:q,aoMap:vt,lightMap:pt,bumpMap:dt,normalMap:ct,displacementMap:g&&Nt,emissiveMap:bt,normalMapObjectSpace:ct&&C.normalMapType===rx,normalMapTangentSpace:ct&&C.normalMapType===va,metalnessMap:Ct,roughnessMap:re,anisotropy:ce,anisotropyMap:ot,clearcoat:O,clearcoatMap:Zt,clearcoatNormalMap:Dt,clearcoatRoughnessMap:Wt,dispersion:D,iridescence:J,iridescenceMap:Xt,iridescenceThicknessMap:Mt,sheen:rt,sheenColorMap:Lt,sheenRoughnessMap:$t,specularMap:H,specularColorMap:tt,specularIntensityMap:Tt,transmission:_t,transmissionMap:V,thicknessMap:gt,gradientMap:At,opaque:C.transparent===!1&&C.blending===lr&&C.alphaToCoverage===!1,alphaMap:Bt,alphaTest:Et,alphaHash:mt,combine:C.combine,mapUv:me&&b(C.map.channel),aoMapUv:vt&&b(C.aoMap.channel),lightMapUv:pt&&b(C.lightMap.channel),bumpMapUv:dt&&b(C.bumpMap.channel),normalMapUv:ct&&b(C.normalMap.channel),displacementMapUv:Nt&&b(C.displacementMap.channel),emissiveMapUv:bt&&b(C.emissiveMap.channel),metalnessMapUv:Ct&&b(C.metalnessMap.channel),roughnessMapUv:re&&b(C.roughnessMap.channel),anisotropyMapUv:ot&&b(C.anisotropyMap.channel),clearcoatMapUv:Zt&&b(C.clearcoatMap.channel),clearcoatNormalMapUv:Dt&&b(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Wt&&b(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Xt&&b(C.iridescenceMap.channel),iridescenceThicknessMapUv:Mt&&b(C.iridescenceThicknessMap.channel),sheenColorMapUv:Lt&&b(C.sheenColorMap.channel),sheenRoughnessMapUv:$t&&b(C.sheenRoughnessMap.channel),specularMapUv:H&&b(C.specularMap.channel),specularColorMapUv:tt&&b(C.specularColorMap.channel),specularIntensityMapUv:Tt&&b(C.specularIntensityMap.channel),transmissionMapUv:V&&b(C.transmissionMap.channel),thicknessMapUv:gt&&b(C.thicknessMap.channel),alphaMapUv:Bt&&b(C.alphaMap.channel),vertexTangents:!!it.attributes.tangent&&(ct||ce),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!it.attributes.color&&it.attributes.color.itemSize===4,pointsUvs:X.isPoints===!0&&!!it.attributes.uv&&(me||Bt),fog:!!$,useFog:C.fog===!0,fogExp2:!!$&&$.isFogExp2,flatShading:C.flatShading===!0&&C.wireframe===!1,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reversedDepthBuffer:zt,skinning:X.isSkinnedMesh===!0,morphTargets:it.morphAttributes.position!==void 0,morphNormals:it.morphAttributes.normal!==void 0,morphColors:it.morphAttributes.color!==void 0,morphTargetsCount:St,morphTextureStride:It,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&z.length>0,shadowMapType:s.shadowMap.type,toneMapping:te,decodeVideoTexture:me&&C.map.isVideoTexture===!0&&Re.getTransfer(C.map.colorSpace)===He,decodeVideoTextureEmissive:bt&&C.emissiveMap.isVideoTexture===!0&&Re.getTransfer(C.emissiveMap.colorSpace)===He,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===is,flipSided:C.side===Kn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Ft&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ft&&C.extensions.multiDraw===!0||Yt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return Ee.vertexUv1s=f.has(1),Ee.vertexUv2s=f.has(2),Ee.vertexUv3s=f.has(3),f.clear(),Ee}function _(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const z in C.defines)w.push(z),w.push(C.defines[z]);return C.isRawShaderMaterial===!1&&(E(w,C),A(w,C),w.push(s.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function E(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function A(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),w.gradientMap&&c.enable(22),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reversedDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function T(C){const w=x[C.type];let z;if(w){const Y=Yi[w];z=yx.clone(Y.uniforms)}else z=C.uniforms;return z}function U(C,w){let z;for(let Y=0,X=p.length;Y<X;Y++){const $=p[Y];if($.cacheKey===w){z=$,++z.usedTimes;break}}return z===void 0&&(z=new G2(s,w,C,o),p.push(z)),z}function R(C){if(--C.usedTimes===0){const w=p.indexOf(C);p[w]=p[p.length-1],p.pop(),C.destroy()}}function P(C){h.remove(C)}function B(){h.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:T,acquireProgram:U,releaseProgram:R,releaseShaderCache:P,programs:p,dispose:B}}function Y2(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function o(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:o}}function Z2(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function ey(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function ny(){const s=[];let t=0;const e=[],n=[],i=[];function o(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,b,S){let _=s[t];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:b,group:S},s[t]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=b,_.group=S),t++,_}function c(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):e.push(_)}function h(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):e.unshift(_)}function f(m,g){e.length>1&&e.sort(m||Z2),n.length>1&&n.sort(g||ey),i.length>1&&i.sort(g||ey)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:o,push:c,unshift:h,finish:p,sort:f}}function j2(){let s=new WeakMap;function t(n,i){const o=s.get(n);let l;return o===void 0?(l=new ny,s.set(n,[l])):i>=o.length?(l=new ny,o.push(l)):l=o[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function K2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new I,color:new Gt};break;case"SpotLight":e={position:new I,direction:new I,color:new Gt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new I,color:new Gt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new I,skyColor:new Gt,groundColor:new Gt};break;case"RectAreaLight":e={color:new Gt,position:new I,halfWidth:new I,halfHeight:new I};break}return s[t.id]=e,e}}}function J2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ft};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ft};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ft,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let Q2=0;function $2(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function t3(s){const t=new K2,e=J2(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new I);const i=new I,o=new fe,l=new fe;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,b=0,S=0,_=0,E=0,A=0,T=0,U=0,R=0,P=0;f.sort($2);for(let C=0,w=f.length;C<w;C++){const z=f[C],Y=z.color,X=z.intensity,$=z.distance,it=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)p+=Y.r*X,m+=Y.g*X,g+=Y.b*X;else if(z.isLightProbe){for(let k=0;k<9;k++)n.probe[k].addScaledVector(z.sh.coefficients[k],X);P++}else if(z.isDirectionalLight){const k=t.get(z);if(k.color.copy(z.color).multiplyScalar(z.intensity),z.castShadow){const et=z.shadow,q=e.get(z);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,n.directionalShadow[v]=q,n.directionalShadowMap[v]=it,n.directionalShadowMatrix[v]=z.shadow.matrix,E++}n.directional[v]=k,v++}else if(z.isSpotLight){const k=t.get(z);k.position.setFromMatrixPosition(z.matrixWorld),k.color.copy(Y).multiplyScalar(X),k.distance=$,k.coneCos=Math.cos(z.angle),k.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),k.decay=z.decay,n.spot[b]=k;const et=z.shadow;if(z.map&&(n.spotLightMap[U]=z.map,U++,et.updateMatrices(z),z.castShadow&&R++),n.spotLightMatrix[b]=et.matrix,z.castShadow){const q=e.get(z);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,n.spotShadow[b]=q,n.spotShadowMap[b]=it,T++}b++}else if(z.isRectAreaLight){const k=t.get(z);k.color.copy(Y).multiplyScalar(X),k.halfWidth.set(z.width*.5,0,0),k.halfHeight.set(0,z.height*.5,0),n.rectArea[S]=k,S++}else if(z.isPointLight){const k=t.get(z);if(k.color.copy(z.color).multiplyScalar(z.intensity),k.distance=z.distance,k.decay=z.decay,z.castShadow){const et=z.shadow,q=e.get(z);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,q.shadowCameraNear=et.camera.near,q.shadowCameraFar=et.camera.far,n.pointShadow[x]=q,n.pointShadowMap[x]=it,n.pointShadowMatrix[x]=z.shadow.matrix,A++}n.point[x]=k,x++}else if(z.isHemisphereLight){const k=t.get(z);k.skyColor.copy(z.color).multiplyScalar(X),k.groundColor.copy(z.groundColor).multiplyScalar(X),n.hemi[_]=k,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ot.LTC_FLOAT_1,n.rectAreaLTC2=Ot.LTC_FLOAT_2):(n.rectAreaLTC1=Ot.LTC_HALF_1,n.rectAreaLTC2=Ot.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const B=n.hash;(B.directionalLength!==v||B.pointLength!==x||B.spotLength!==b||B.rectAreaLength!==S||B.hemiLength!==_||B.numDirectionalShadows!==E||B.numPointShadows!==A||B.numSpotShadows!==T||B.numSpotMaps!==U||B.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=b,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+U-R,n.spotLightMap.length=U,n.numSpotLightShadowsWithMaps=R,n.numLightProbes=P,B.directionalLength=v,B.pointLength=x,B.spotLength=b,B.rectAreaLength=S,B.hemiLength=_,B.numDirectionalShadows=E,B.numPointShadows=A,B.numSpotShadows=T,B.numSpotMaps=U,B.numLightProbes=P,n.version=Q2++)}function h(f,p){let m=0,g=0,v=0,x=0,b=0;const S=p.matrixWorldInverse;for(let _=0,E=f.length;_<E;_++){const A=f[_];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),o.copy(A.matrixWorld),o.premultiply(S),l.extractRotation(o),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[b];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),b++}}}return{setup:c,setupView:h,state:n}}function iy(s){const t=new t3(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function o(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:o,pushShadow:l}}function e3(s){let t=new WeakMap;function e(i,o=0){const l=t.get(i);let c;return l===void 0?(c=new iy(s),t.set(i,[c])):o>=l.length?(c=new iy(s),l.push(c)):c=l[o],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const n3=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,i3=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function s3(s,t,e){let n=new Po;const i=new ft,o=new ft,l=new Ne,c=new Qm({depthPacking:ax}),h=new $m,f={},p=e.maxTextureSize,m={[Os]:Kn,[Kn]:Os,[is]:is},g=new ji({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ft},radius:{value:4}},vertexShader:n3,fragmentShader:i3}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new ye;x.setAttribute("position",new We(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new fn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Wh;let _=this.type;this.render=function(R,P,B){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||R.length===0)return;const C=s.getRenderTarget(),w=s.getActiveCubeFace(),z=s.getActiveMipmapLevel(),Y=s.state;Y.setBlending(Ps),Y.buffers.depth.getReversed()===!0?Y.buffers.color.setClear(0,0,0,0):Y.buffers.color.setClear(1,1,1,1),Y.buffers.depth.setTest(!0),Y.setScissorTest(!1);const X=_!==qi&&this.type===qi,$=_===qi&&this.type!==qi;for(let it=0,k=R.length;it<k;it++){const et=R[it],q=et.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",et,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;i.copy(q.mapSize);const lt=q.getFrameExtents();if(i.multiply(lt),o.copy(q.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/lt.x),i.x=o.x*lt.x,q.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/lt.y),i.y=o.y*lt.y,q.mapSize.y=o.y)),q.map===null||X===!0||$===!0){const St=this.type!==qi?{minFilter:wn,magFilter:wn}:{};q.map!==null&&q.map.dispose(),q.map=new ls(i.x,i.y,St),q.map.texture.name=et.name+".shadowMap",q.camera.updateProjectionMatrix()}s.setRenderTarget(q.map),s.clear();const yt=q.getViewportCount();for(let St=0;St<yt;St++){const It=q.getViewport(St);l.set(o.x*It.x,o.y*It.y,o.x*It.z,o.y*It.w),Y.viewport(l),q.updateMatrices(et,St),n=q.getFrustum(),T(P,B,q.camera,et,this.type)}q.isPointLightShadow!==!0&&this.type===qi&&E(q,B),q.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(C,w,z)};function E(R,P){const B=t.update(b);g.defines.VSM_SAMPLES!==R.blurSamples&&(g.defines.VSM_SAMPLES=R.blurSamples,v.defines.VSM_SAMPLES=R.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new ls(i.x,i.y)),g.uniforms.shadow_pass.value=R.map.texture,g.uniforms.resolution.value=R.mapSize,g.uniforms.radius.value=R.radius,s.setRenderTarget(R.mapPass),s.clear(),s.renderBufferDirect(P,null,B,g,b,null),v.uniforms.shadow_pass.value=R.mapPass.texture,v.uniforms.resolution.value=R.mapSize,v.uniforms.radius.value=R.radius,s.setRenderTarget(R.map),s.clear(),s.renderBufferDirect(P,null,B,v,b,null)}function A(R,P,B,C){let w=null;const z=B.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(z!==void 0)w=z;else if(w=B.isPointLight===!0?h:c,s.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const Y=w.uuid,X=P.uuid;let $=f[Y];$===void 0&&($={},f[Y]=$);let it=$[X];it===void 0&&(it=w.clone(),$[X]=it,P.addEventListener("dispose",U)),w=it}if(w.visible=P.visible,w.wireframe=P.wireframe,C===qi?w.side=P.shadowSide!==null?P.shadowSide:P.side:w.side=P.shadowSide!==null?P.shadowSide:m[P.side],w.alphaMap=P.alphaMap,w.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,w.map=P.map,w.clipShadows=P.clipShadows,w.clippingPlanes=P.clippingPlanes,w.clipIntersection=P.clipIntersection,w.displacementMap=P.displacementMap,w.displacementScale=P.displacementScale,w.displacementBias=P.displacementBias,w.wireframeLinewidth=P.wireframeLinewidth,w.linewidth=P.linewidth,B.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const Y=s.properties.get(w);Y.light=B}return w}function T(R,P,B,C,w){if(R.visible===!1)return;if(R.layers.test(P.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&w===qi)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,R.matrixWorld);const X=t.update(R),$=R.material;if(Array.isArray($)){const it=X.groups;for(let k=0,et=it.length;k<et;k++){const q=it[k],lt=$[q.materialIndex];if(lt&&lt.visible){const yt=A(R,lt,C,w);R.onBeforeShadow(s,R,P,B,X,yt,q),s.renderBufferDirect(B,null,X,yt,R,q),R.onAfterShadow(s,R,P,B,X,yt,q)}}}else if($.visible){const it=A(R,$,C,w);R.onBeforeShadow(s,R,P,B,X,it,null),s.renderBufferDirect(B,null,X,it,R,null),R.onAfterShadow(s,R,P,B,X,it,null)}}const Y=R.children;for(let X=0,$=Y.length;X<$;X++)T(Y[X],P,B,C,w)}function U(R){R.target.removeEventListener("dispose",U);for(const B in f){const C=f[B],w=R.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const a3={[Qu]:$u,[th]:ih,[eh]:sh,[hr]:nh,[$u]:Qu,[ih]:th,[sh]:eh,[nh]:hr};function r3(s,t){function e(){let V=!1;const gt=new Ne;let At=null;const Bt=new Ne(0,0,0,0);return{setMask:function(Et){At!==Et&&!V&&(s.colorMask(Et,Et,Et,Et),At=Et)},setLocked:function(Et){V=Et},setClear:function(Et,mt,Ft,te,Ee){Ee===!0&&(Et*=te,mt*=te,Ft*=te),gt.set(Et,mt,Ft,te),Bt.equals(gt)===!1&&(s.clearColor(Et,mt,Ft,te),Bt.copy(gt))},reset:function(){V=!1,At=null,Bt.set(-1,0,0,0)}}}function n(){let V=!1,gt=!1,At=null,Bt=null,Et=null;return{setReversed:function(mt){if(gt!==mt){const Ft=t.get("EXT_clip_control");mt?Ft.clipControlEXT(Ft.LOWER_LEFT_EXT,Ft.ZERO_TO_ONE_EXT):Ft.clipControlEXT(Ft.LOWER_LEFT_EXT,Ft.NEGATIVE_ONE_TO_ONE_EXT),gt=mt;const te=Et;Et=null,this.setClear(te)}},getReversed:function(){return gt},setTest:function(mt){mt?xt(s.DEPTH_TEST):zt(s.DEPTH_TEST)},setMask:function(mt){At!==mt&&!V&&(s.depthMask(mt),At=mt)},setFunc:function(mt){if(gt&&(mt=a3[mt]),Bt!==mt){switch(mt){case Qu:s.depthFunc(s.NEVER);break;case $u:s.depthFunc(s.ALWAYS);break;case th:s.depthFunc(s.LESS);break;case hr:s.depthFunc(s.LEQUAL);break;case eh:s.depthFunc(s.EQUAL);break;case nh:s.depthFunc(s.GEQUAL);break;case ih:s.depthFunc(s.GREATER);break;case sh:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Bt=mt}},setLocked:function(mt){V=mt},setClear:function(mt){Et!==mt&&(gt&&(mt=1-mt),s.clearDepth(mt),Et=mt)},reset:function(){V=!1,At=null,Bt=null,Et=null,gt=!1}}}function i(){let V=!1,gt=null,At=null,Bt=null,Et=null,mt=null,Ft=null,te=null,Ee=null;return{setTest:function(xe){V||(xe?xt(s.STENCIL_TEST):zt(s.STENCIL_TEST))},setMask:function(xe){gt!==xe&&!V&&(s.stencilMask(xe),gt=xe)},setFunc:function(xe,vn,_n){(At!==xe||Bt!==vn||Et!==_n)&&(s.stencilFunc(xe,vn,_n),At=xe,Bt=vn,Et=_n)},setOp:function(xe,vn,_n){(mt!==xe||Ft!==vn||te!==_n)&&(s.stencilOp(xe,vn,_n),mt=xe,Ft=vn,te=_n)},setLocked:function(xe){V=xe},setClear:function(xe){Ee!==xe&&(s.clearStencil(xe),Ee=xe)},reset:function(){V=!1,gt=null,At=null,Bt=null,Et=null,mt=null,Ft=null,te=null,Ee=null}}}const o=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,U=null,R=null,P=new Gt(0,0,0),B=0,C=!1,w=null,z=null,Y=null,X=null,$=null;const it=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let k=!1,et=0;const q=s.getParameter(s.VERSION);q.indexOf("WebGL")!==-1?(et=parseFloat(/^WebGL (\d)/.exec(q)[1]),k=et>=1):q.indexOf("OpenGL ES")!==-1&&(et=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),k=et>=2);let lt=null,yt={};const St=s.getParameter(s.SCISSOR_BOX),It=s.getParameter(s.VIEWPORT),Qt=new Ne().fromArray(St),Kt=new Ne().fromArray(It);function le(V,gt,At,Bt){const Et=new Uint8Array(4),mt=s.createTexture();s.bindTexture(V,mt),s.texParameteri(V,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(V,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Ft=0;Ft<At;Ft++)V===s.TEXTURE_3D||V===s.TEXTURE_2D_ARRAY?s.texImage3D(gt,0,s.RGBA,1,1,Bt,0,s.RGBA,s.UNSIGNED_BYTE,Et):s.texImage2D(gt+Ft,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Et);return mt}const ut={};ut[s.TEXTURE_2D]=le(s.TEXTURE_2D,s.TEXTURE_2D,1),ut[s.TEXTURE_CUBE_MAP]=le(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),ut[s.TEXTURE_2D_ARRAY]=le(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),ut[s.TEXTURE_3D]=le(s.TEXTURE_3D,s.TEXTURE_3D,1,1),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),xt(s.DEPTH_TEST),l.setFunc(hr),dt(!1),ct(tm),xt(s.CULL_FACE),vt(Ps);function xt(V){p[V]!==!0&&(s.enable(V),p[V]=!0)}function zt(V){p[V]!==!1&&(s.disable(V),p[V]=!1)}function Jt(V,gt){return m[V]!==gt?(s.bindFramebuffer(V,gt),m[V]=gt,V===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=gt),V===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=gt),!0):!1}function Yt(V,gt){let At=v,Bt=!1;if(V){At=g.get(gt),At===void 0&&(At=[],g.set(gt,At));const Et=V.textures;if(At.length!==Et.length||At[0]!==s.COLOR_ATTACHMENT0){for(let mt=0,Ft=Et.length;mt<Ft;mt++)At[mt]=s.COLOR_ATTACHMENT0+mt;At.length=Et.length,Bt=!0}}else At[0]!==s.BACK&&(At[0]=s.BACK,Bt=!0);Bt&&s.drawBuffers(At)}function me(V){return x!==V?(s.useProgram(V),x=V,!0):!1}const we={[ua]:s.FUNC_ADD,[Ry]:s.FUNC_SUBTRACT,[Dy]:s.FUNC_REVERSE_SUBTRACT};we[Uy]=s.MIN,we[Ny]=s.MAX;const F={[Ly]:s.ZERO,[Py]:s.ONE,[Iy]:s.SRC_COLOR,[Ku]:s.SRC_ALPHA,[Vy]:s.SRC_ALPHA_SATURATE,[Fy]:s.DST_COLOR,[By]:s.DST_ALPHA,[Oy]:s.ONE_MINUS_SRC_COLOR,[Ju]:s.ONE_MINUS_SRC_ALPHA,[Hy]:s.ONE_MINUS_DST_COLOR,[zy]:s.ONE_MINUS_DST_ALPHA,[Gy]:s.CONSTANT_COLOR,[ky]:s.ONE_MINUS_CONSTANT_COLOR,[Wy]:s.CONSTANT_ALPHA,[Xy]:s.ONE_MINUS_CONSTANT_ALPHA};function vt(V,gt,At,Bt,Et,mt,Ft,te,Ee,xe){if(V===Ps){b===!0&&(zt(s.BLEND),b=!1);return}if(b===!1&&(xt(s.BLEND),b=!0),V!==Cy){if(V!==S||xe!==C){if((_!==ua||T!==ua)&&(s.blendEquation(s.FUNC_ADD),_=ua,T=ua),xe)switch(V){case lr:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case em:s.blendFunc(s.ONE,s.ONE);break;case nm:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case im:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case lr:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case em:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case nm:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case im:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}E=null,A=null,U=null,R=null,P.set(0,0,0),B=0,S=V,C=xe}return}Et=Et||gt,mt=mt||At,Ft=Ft||Bt,(gt!==_||Et!==T)&&(s.blendEquationSeparate(we[gt],we[Et]),_=gt,T=Et),(At!==E||Bt!==A||mt!==U||Ft!==R)&&(s.blendFuncSeparate(F[At],F[Bt],F[mt],F[Ft]),E=At,A=Bt,U=mt,R=Ft),(te.equals(P)===!1||Ee!==B)&&(s.blendColor(te.r,te.g,te.b,Ee),P.copy(te),B=Ee),S=V,C=!1}function pt(V,gt){V.side===is?zt(s.CULL_FACE):xt(s.CULL_FACE);let At=V.side===Kn;gt&&(At=!At),dt(At),V.blending===lr&&V.transparent===!1?vt(Ps):vt(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),l.setFunc(V.depthFunc),l.setTest(V.depthTest),l.setMask(V.depthWrite),o.setMask(V.colorWrite);const Bt=V.stencilWrite;c.setTest(Bt),Bt&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),bt(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?xt(s.SAMPLE_ALPHA_TO_COVERAGE):zt(s.SAMPLE_ALPHA_TO_COVERAGE)}function dt(V){w!==V&&(V?s.frontFace(s.CW):s.frontFace(s.CCW),w=V)}function ct(V){V!==Ty?(xt(s.CULL_FACE),V!==z&&(V===tm?s.cullFace(s.BACK):V===Ay?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):zt(s.CULL_FACE),z=V}function Nt(V){V!==Y&&(k&&s.lineWidth(V),Y=V)}function bt(V,gt,At){V?(xt(s.POLYGON_OFFSET_FILL),(X!==gt||$!==At)&&(s.polygonOffset(gt,At),X=gt,$=At)):zt(s.POLYGON_OFFSET_FILL)}function Ct(V){V?xt(s.SCISSOR_TEST):zt(s.SCISSOR_TEST)}function re(V){V===void 0&&(V=s.TEXTURE0+it-1),lt!==V&&(s.activeTexture(V),lt=V)}function ce(V,gt,At){At===void 0&&(lt===null?At=s.TEXTURE0+it-1:At=lt);let Bt=yt[At];Bt===void 0&&(Bt={type:void 0,texture:void 0},yt[At]=Bt),(Bt.type!==V||Bt.texture!==gt)&&(lt!==At&&(s.activeTexture(At),lt=At),s.bindTexture(V,gt||ut[V]),Bt.type=V,Bt.texture=gt)}function O(){const V=yt[lt];V!==void 0&&V.type!==void 0&&(s.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function D(){try{s.compressedTexImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function J(){try{s.compressedTexImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function rt(){try{s.texSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function _t(){try{s.texSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ot(){try{s.compressedTexSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Zt(){try{s.compressedTexSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Dt(){try{s.texStorage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Wt(){try{s.texStorage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Xt(){try{s.texImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Mt(){try{s.texImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Lt(V){Qt.equals(V)===!1&&(s.scissor(V.x,V.y,V.z,V.w),Qt.copy(V))}function $t(V){Kt.equals(V)===!1&&(s.viewport(V.x,V.y,V.z,V.w),Kt.copy(V))}function H(V,gt){let At=f.get(gt);At===void 0&&(At=new WeakMap,f.set(gt,At));let Bt=At.get(V);Bt===void 0&&(Bt=s.getUniformBlockIndex(gt,V.name),At.set(V,Bt))}function tt(V,gt){const Bt=f.get(gt).get(V);h.get(gt)!==Bt&&(s.uniformBlockBinding(gt,Bt,V.__bindingPointIndex),h.set(gt,Bt))}function Tt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},lt=null,yt={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,U=null,R=null,P=new Gt(0,0,0),B=0,C=!1,w=null,z=null,Y=null,X=null,$=null,Qt.set(0,0,s.canvas.width,s.canvas.height),Kt.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:xt,disable:zt,bindFramebuffer:Jt,drawBuffers:Yt,useProgram:me,setBlending:vt,setMaterial:pt,setFlipSided:dt,setCullFace:ct,setLineWidth:Nt,setPolygonOffset:bt,setScissorTest:Ct,activeTexture:re,bindTexture:ce,unbindTexture:O,compressedTexImage2D:D,compressedTexImage3D:J,texImage2D:Xt,texImage3D:Mt,updateUBOMapping:H,uniformBlockBinding:tt,texStorage2D:Dt,texStorage3D:Wt,texSubImage2D:rt,texSubImage3D:_t,compressedTexSubImage2D:ot,compressedTexSubImage3D:Zt,scissor:Lt,viewport:$t,reset:Tt}}function o3(s,t,e,n,i,o,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new ft,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(O,D){return v?new OffscreenCanvas(O,D):ql("canvas")}function b(O,D,J){let rt=1;const _t=ce(O);if((_t.width>J||_t.height>J)&&(rt=J/Math.max(_t.width,_t.height)),rt<1)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap||typeof VideoFrame<"u"&&O instanceof VideoFrame){const ot=Math.floor(rt*_t.width),Zt=Math.floor(rt*_t.height);m===void 0&&(m=x(ot,Zt));const Dt=D?x(ot,Zt):m;return Dt.width=ot,Dt.height=Zt,Dt.getContext("2d").drawImage(O,0,0,ot,Zt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+_t.width+"x"+_t.height+") to ("+ot+"x"+Zt+")."),Dt}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+_t.width+"x"+_t.height+")."),O;return O}function S(O){return O.generateMipmaps}function _(O){s.generateMipmap(O)}function E(O){return O.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:O.isWebGL3DRenderTarget?s.TEXTURE_3D:O.isWebGLArrayRenderTarget||O.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function A(O,D,J,rt,_t=!1){if(O!==null){if(s[O]!==void 0)return s[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let ot=D;if(D===s.RED&&(J===s.FLOAT&&(ot=s.R32F),J===s.HALF_FLOAT&&(ot=s.R16F),J===s.UNSIGNED_BYTE&&(ot=s.R8)),D===s.RED_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.R8UI),J===s.UNSIGNED_SHORT&&(ot=s.R16UI),J===s.UNSIGNED_INT&&(ot=s.R32UI),J===s.BYTE&&(ot=s.R8I),J===s.SHORT&&(ot=s.R16I),J===s.INT&&(ot=s.R32I)),D===s.RG&&(J===s.FLOAT&&(ot=s.RG32F),J===s.HALF_FLOAT&&(ot=s.RG16F),J===s.UNSIGNED_BYTE&&(ot=s.RG8)),D===s.RG_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.RG8UI),J===s.UNSIGNED_SHORT&&(ot=s.RG16UI),J===s.UNSIGNED_INT&&(ot=s.RG32UI),J===s.BYTE&&(ot=s.RG8I),J===s.SHORT&&(ot=s.RG16I),J===s.INT&&(ot=s.RG32I)),D===s.RGB_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.RGB8UI),J===s.UNSIGNED_SHORT&&(ot=s.RGB16UI),J===s.UNSIGNED_INT&&(ot=s.RGB32UI),J===s.BYTE&&(ot=s.RGB8I),J===s.SHORT&&(ot=s.RGB16I),J===s.INT&&(ot=s.RGB32I)),D===s.RGBA_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.RGBA8UI),J===s.UNSIGNED_SHORT&&(ot=s.RGBA16UI),J===s.UNSIGNED_INT&&(ot=s.RGBA32UI),J===s.BYTE&&(ot=s.RGBA8I),J===s.SHORT&&(ot=s.RGBA16I),J===s.INT&&(ot=s.RGBA32I)),D===s.RGB&&(J===s.UNSIGNED_INT_5_9_9_9_REV&&(ot=s.RGB9_E5),J===s.UNSIGNED_INT_10F_11F_11F_REV&&(ot=s.R11F_G11F_B10F)),D===s.RGBA){const Zt=_t?Wl:Re.getTransfer(rt);J===s.FLOAT&&(ot=s.RGBA32F),J===s.HALF_FLOAT&&(ot=s.RGBA16F),J===s.UNSIGNED_BYTE&&(ot=Zt===He?s.SRGB8_ALPHA8:s.RGBA8),J===s.UNSIGNED_SHORT_4_4_4_4&&(ot=s.RGBA4),J===s.UNSIGNED_SHORT_5_5_5_1&&(ot=s.RGB5_A1)}return(ot===s.R16F||ot===s.R32F||ot===s.RG16F||ot===s.RG32F||ot===s.RGBA16F||ot===s.RGBA32F)&&t.get("EXT_color_buffer_float"),ot}function T(O,D){let J;return O?D===null||D===zs||D===Mo?J=s.DEPTH24_STENCIL8:D===ai?J=s.DEPTH32F_STENCIL8:D===So&&(J=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):D===null||D===zs||D===Mo?J=s.DEPTH_COMPONENT24:D===ai?J=s.DEPTH_COMPONENT32F:D===So&&(J=s.DEPTH_COMPONENT16),J}function U(O,D){return S(O)===!0||O.isFramebufferTexture&&O.minFilter!==wn&&O.minFilter!==pn?Math.log2(Math.max(D.width,D.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?D.mipmaps.length:1}function R(O){const D=O.target;D.removeEventListener("dispose",R),B(D),D.isVideoTexture&&p.delete(D)}function P(O){const D=O.target;D.removeEventListener("dispose",P),w(D)}function B(O){const D=n.get(O);if(D.__webglInit===void 0)return;const J=O.source,rt=g.get(J);if(rt){const _t=rt[D.__cacheKey];_t.usedTimes--,_t.usedTimes===0&&C(O),Object.keys(rt).length===0&&g.delete(J)}n.remove(O)}function C(O){const D=n.get(O);s.deleteTexture(D.__webglTexture);const J=O.source,rt=g.get(J);delete rt[D.__cacheKey],l.memory.textures--}function w(O){const D=n.get(O);if(O.depthTexture&&(O.depthTexture.dispose(),n.remove(O.depthTexture)),O.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++){if(Array.isArray(D.__webglFramebuffer[rt]))for(let _t=0;_t<D.__webglFramebuffer[rt].length;_t++)s.deleteFramebuffer(D.__webglFramebuffer[rt][_t]);else s.deleteFramebuffer(D.__webglFramebuffer[rt]);D.__webglDepthbuffer&&s.deleteRenderbuffer(D.__webglDepthbuffer[rt])}else{if(Array.isArray(D.__webglFramebuffer))for(let rt=0;rt<D.__webglFramebuffer.length;rt++)s.deleteFramebuffer(D.__webglFramebuffer[rt]);else s.deleteFramebuffer(D.__webglFramebuffer);if(D.__webglDepthbuffer&&s.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&s.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer)for(let rt=0;rt<D.__webglColorRenderbuffer.length;rt++)D.__webglColorRenderbuffer[rt]&&s.deleteRenderbuffer(D.__webglColorRenderbuffer[rt]);D.__webglDepthRenderbuffer&&s.deleteRenderbuffer(D.__webglDepthRenderbuffer)}const J=O.textures;for(let rt=0,_t=J.length;rt<_t;rt++){const ot=n.get(J[rt]);ot.__webglTexture&&(s.deleteTexture(ot.__webglTexture),l.memory.textures--),n.remove(J[rt])}n.remove(O)}let z=0;function Y(){z=0}function X(){const O=z;return O>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+i.maxTextures),z+=1,O}function $(O){const D=[];return D.push(O.wrapS),D.push(O.wrapT),D.push(O.wrapR||0),D.push(O.magFilter),D.push(O.minFilter),D.push(O.anisotropy),D.push(O.internalFormat),D.push(O.format),D.push(O.type),D.push(O.generateMipmaps),D.push(O.premultiplyAlpha),D.push(O.flipY),D.push(O.unpackAlignment),D.push(O.colorSpace),D.join()}function it(O,D){const J=n.get(O);if(O.isVideoTexture&&Ct(O),O.isRenderTargetTexture===!1&&O.isExternalTexture!==!0&&O.version>0&&J.__version!==O.version){const rt=O.image;if(rt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(rt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ut(J,O,D);return}}else O.isExternalTexture&&(J.__webglTexture=O.sourceTexture?O.sourceTexture:null);e.bindTexture(s.TEXTURE_2D,J.__webglTexture,s.TEXTURE0+D)}function k(O,D){const J=n.get(O);if(O.isRenderTargetTexture===!1&&O.version>0&&J.__version!==O.version){ut(J,O,D);return}e.bindTexture(s.TEXTURE_2D_ARRAY,J.__webglTexture,s.TEXTURE0+D)}function et(O,D){const J=n.get(O);if(O.isRenderTargetTexture===!1&&O.version>0&&J.__version!==O.version){ut(J,O,D);return}e.bindTexture(s.TEXTURE_3D,J.__webglTexture,s.TEXTURE0+D)}function q(O,D){const J=n.get(O);if(O.version>0&&J.__version!==O.version){xt(J,O,D);return}e.bindTexture(s.TEXTURE_CUBE_MAP,J.__webglTexture,s.TEXTURE0+D)}const lt={[Hl]:s.REPEAT,[Pi]:s.CLAMP_TO_EDGE,[Vl]:s.MIRRORED_REPEAT},yt={[wn]:s.NEAREST,[Tm]:s.NEAREST_MIPMAP_NEAREST,[go]:s.NEAREST_MIPMAP_LINEAR,[pn]:s.LINEAR,[Rl]:s.LINEAR_MIPMAP_NEAREST,[ss]:s.LINEAR_MIPMAP_LINEAR},St={[ox]:s.NEVER,[dx]:s.ALWAYS,[lx]:s.LESS,[Pm]:s.LEQUAL,[cx]:s.EQUAL,[fx]:s.GEQUAL,[ux]:s.GREATER,[hx]:s.NOTEQUAL};function It(O,D){if(D.type===ai&&t.has("OES_texture_float_linear")===!1&&(D.magFilter===pn||D.magFilter===Rl||D.magFilter===go||D.magFilter===ss||D.minFilter===pn||D.minFilter===Rl||D.minFilter===go||D.minFilter===ss)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(O,s.TEXTURE_WRAP_S,lt[D.wrapS]),s.texParameteri(O,s.TEXTURE_WRAP_T,lt[D.wrapT]),(O===s.TEXTURE_3D||O===s.TEXTURE_2D_ARRAY)&&s.texParameteri(O,s.TEXTURE_WRAP_R,lt[D.wrapR]),s.texParameteri(O,s.TEXTURE_MAG_FILTER,yt[D.magFilter]),s.texParameteri(O,s.TEXTURE_MIN_FILTER,yt[D.minFilter]),D.compareFunction&&(s.texParameteri(O,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(O,s.TEXTURE_COMPARE_FUNC,St[D.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(D.magFilter===wn||D.minFilter!==go&&D.minFilter!==ss||D.type===ai&&t.has("OES_texture_float_linear")===!1)return;if(D.anisotropy>1||n.get(D).__currentAnisotropy){const J=t.get("EXT_texture_filter_anisotropic");s.texParameterf(O,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,i.getMaxAnisotropy())),n.get(D).__currentAnisotropy=D.anisotropy}}}function Qt(O,D){let J=!1;O.__webglInit===void 0&&(O.__webglInit=!0,D.addEventListener("dispose",R));const rt=D.source;let _t=g.get(rt);_t===void 0&&(_t={},g.set(rt,_t));const ot=$(D);if(ot!==O.__cacheKey){_t[ot]===void 0&&(_t[ot]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,J=!0),_t[ot].usedTimes++;const Zt=_t[O.__cacheKey];Zt!==void 0&&(_t[O.__cacheKey].usedTimes--,Zt.usedTimes===0&&C(D)),O.__cacheKey=ot,O.__webglTexture=_t[ot].texture}return J}function Kt(O,D,J){return Math.floor(Math.floor(O/J)/D)}function le(O,D,J,rt){const ot=O.updateRanges;if(ot.length===0)e.texSubImage2D(s.TEXTURE_2D,0,0,0,D.width,D.height,J,rt,D.data);else{ot.sort((Mt,Lt)=>Mt.start-Lt.start);let Zt=0;for(let Mt=1;Mt<ot.length;Mt++){const Lt=ot[Zt],$t=ot[Mt],H=Lt.start+Lt.count,tt=Kt($t.start,D.width,4),Tt=Kt(Lt.start,D.width,4);$t.start<=H+1&&tt===Tt&&Kt($t.start+$t.count-1,D.width,4)===tt?Lt.count=Math.max(Lt.count,$t.start+$t.count-Lt.start):(++Zt,ot[Zt]=$t)}ot.length=Zt+1;const Dt=s.getParameter(s.UNPACK_ROW_LENGTH),Wt=s.getParameter(s.UNPACK_SKIP_PIXELS),Xt=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,D.width);for(let Mt=0,Lt=ot.length;Mt<Lt;Mt++){const $t=ot[Mt],H=Math.floor($t.start/4),tt=Math.ceil($t.count/4),Tt=H%D.width,V=Math.floor(H/D.width),gt=tt,At=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,Tt),s.pixelStorei(s.UNPACK_SKIP_ROWS,V),e.texSubImage2D(s.TEXTURE_2D,0,Tt,V,gt,At,J,rt,D.data)}O.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Dt),s.pixelStorei(s.UNPACK_SKIP_PIXELS,Wt),s.pixelStorei(s.UNPACK_SKIP_ROWS,Xt)}}function ut(O,D,J){let rt=s.TEXTURE_2D;(D.isDataArrayTexture||D.isCompressedArrayTexture)&&(rt=s.TEXTURE_2D_ARRAY),D.isData3DTexture&&(rt=s.TEXTURE_3D);const _t=Qt(O,D),ot=D.source;e.bindTexture(rt,O.__webglTexture,s.TEXTURE0+J);const Zt=n.get(ot);if(ot.version!==Zt.__version||_t===!0){e.activeTexture(s.TEXTURE0+J);const Dt=Re.getPrimaries(Re.workingColorSpace),Wt=D.colorSpace===Ns?null:Re.getPrimaries(D.colorSpace),Xt=D.colorSpace===Ns||Dt===Wt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,D.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,D.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Xt);let Mt=b(D.image,!1,i.maxTextureSize);Mt=re(D,Mt);const Lt=o.convert(D.format,D.colorSpace),$t=o.convert(D.type);let H=A(D.internalFormat,Lt,$t,D.colorSpace,D.isVideoTexture);It(rt,D);let tt;const Tt=D.mipmaps,V=D.isVideoTexture!==!0,gt=Zt.__version===void 0||_t===!0,At=ot.dataReady,Bt=U(D,Mt);if(D.isDepthTexture)H=T(D.format===Eo,D.type),gt&&(V?e.texStorage2D(s.TEXTURE_2D,1,H,Mt.width,Mt.height):e.texImage2D(s.TEXTURE_2D,0,H,Mt.width,Mt.height,0,Lt,$t,null));else if(D.isDataTexture)if(Tt.length>0){V&&gt&&e.texStorage2D(s.TEXTURE_2D,Bt,H,Tt[0].width,Tt[0].height);for(let Et=0,mt=Tt.length;Et<mt;Et++)tt=Tt[Et],V?At&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,tt.width,tt.height,Lt,$t,tt.data):e.texImage2D(s.TEXTURE_2D,Et,H,tt.width,tt.height,0,Lt,$t,tt.data);D.generateMipmaps=!1}else V?(gt&&e.texStorage2D(s.TEXTURE_2D,Bt,H,Mt.width,Mt.height),At&&le(D,Mt,Lt,$t)):e.texImage2D(s.TEXTURE_2D,0,H,Mt.width,Mt.height,0,Lt,$t,Mt.data);else if(D.isCompressedTexture)if(D.isCompressedArrayTexture){V&&gt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Bt,H,Tt[0].width,Tt[0].height,Mt.depth);for(let Et=0,mt=Tt.length;Et<mt;Et++)if(tt=Tt[Et],D.format!==Fn)if(Lt!==null)if(V){if(At)if(D.layerUpdates.size>0){const Ft=pm(tt.width,tt.height,D.format,D.type);for(const te of D.layerUpdates){const Ee=tt.data.subarray(te*Ft/tt.data.BYTES_PER_ELEMENT,(te+1)*Ft/tt.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,te,tt.width,tt.height,1,Lt,Ee)}D.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,0,tt.width,tt.height,Mt.depth,Lt,tt.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Et,H,tt.width,tt.height,Mt.depth,0,tt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else V?At&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,0,tt.width,tt.height,Mt.depth,Lt,$t,tt.data):e.texImage3D(s.TEXTURE_2D_ARRAY,Et,H,tt.width,tt.height,Mt.depth,0,Lt,$t,tt.data)}else{V&&gt&&e.texStorage2D(s.TEXTURE_2D,Bt,H,Tt[0].width,Tt[0].height);for(let Et=0,mt=Tt.length;Et<mt;Et++)tt=Tt[Et],D.format!==Fn?Lt!==null?V?At&&e.compressedTexSubImage2D(s.TEXTURE_2D,Et,0,0,tt.width,tt.height,Lt,tt.data):e.compressedTexImage2D(s.TEXTURE_2D,Et,H,tt.width,tt.height,0,tt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?At&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,tt.width,tt.height,Lt,$t,tt.data):e.texImage2D(s.TEXTURE_2D,Et,H,tt.width,tt.height,0,Lt,$t,tt.data)}else if(D.isDataArrayTexture)if(V){if(gt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Bt,H,Mt.width,Mt.height,Mt.depth),At)if(D.layerUpdates.size>0){const Et=pm(Mt.width,Mt.height,D.format,D.type);for(const mt of D.layerUpdates){const Ft=Mt.data.subarray(mt*Et/Mt.data.BYTES_PER_ELEMENT,(mt+1)*Et/Mt.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,mt,Mt.width,Mt.height,1,Lt,$t,Ft)}D.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Mt.width,Mt.height,Mt.depth,Lt,$t,Mt.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,H,Mt.width,Mt.height,Mt.depth,0,Lt,$t,Mt.data);else if(D.isData3DTexture)V?(gt&&e.texStorage3D(s.TEXTURE_3D,Bt,H,Mt.width,Mt.height,Mt.depth),At&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Mt.width,Mt.height,Mt.depth,Lt,$t,Mt.data)):e.texImage3D(s.TEXTURE_3D,0,H,Mt.width,Mt.height,Mt.depth,0,Lt,$t,Mt.data);else if(D.isFramebufferTexture){if(gt)if(V)e.texStorage2D(s.TEXTURE_2D,Bt,H,Mt.width,Mt.height);else{let Et=Mt.width,mt=Mt.height;for(let Ft=0;Ft<Bt;Ft++)e.texImage2D(s.TEXTURE_2D,Ft,H,Et,mt,0,Lt,$t,null),Et>>=1,mt>>=1}}else if(Tt.length>0){if(V&&gt){const Et=ce(Tt[0]);e.texStorage2D(s.TEXTURE_2D,Bt,H,Et.width,Et.height)}for(let Et=0,mt=Tt.length;Et<mt;Et++)tt=Tt[Et],V?At&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,Lt,$t,tt):e.texImage2D(s.TEXTURE_2D,Et,H,Lt,$t,tt);D.generateMipmaps=!1}else if(V){if(gt){const Et=ce(Mt);e.texStorage2D(s.TEXTURE_2D,Bt,H,Et.width,Et.height)}At&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,Lt,$t,Mt)}else e.texImage2D(s.TEXTURE_2D,0,H,Lt,$t,Mt);S(D)&&_(rt),Zt.__version=ot.version,D.onUpdate&&D.onUpdate(D)}O.__version=D.version}function xt(O,D,J){if(D.image.length!==6)return;const rt=Qt(O,D),_t=D.source;e.bindTexture(s.TEXTURE_CUBE_MAP,O.__webglTexture,s.TEXTURE0+J);const ot=n.get(_t);if(_t.version!==ot.__version||rt===!0){e.activeTexture(s.TEXTURE0+J);const Zt=Re.getPrimaries(Re.workingColorSpace),Dt=D.colorSpace===Ns?null:Re.getPrimaries(D.colorSpace),Wt=D.colorSpace===Ns||Zt===Dt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,D.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,D.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Wt);const Xt=D.isCompressedTexture||D.image[0].isCompressedTexture,Mt=D.image[0]&&D.image[0].isDataTexture,Lt=[];for(let mt=0;mt<6;mt++)!Xt&&!Mt?Lt[mt]=b(D.image[mt],!0,i.maxCubemapSize):Lt[mt]=Mt?D.image[mt].image:D.image[mt],Lt[mt]=re(D,Lt[mt]);const $t=Lt[0],H=o.convert(D.format,D.colorSpace),tt=o.convert(D.type),Tt=A(D.internalFormat,H,tt,D.colorSpace),V=D.isVideoTexture!==!0,gt=ot.__version===void 0||rt===!0,At=_t.dataReady;let Bt=U(D,$t);It(s.TEXTURE_CUBE_MAP,D);let Et;if(Xt){V&&gt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Bt,Tt,$t.width,$t.height);for(let mt=0;mt<6;mt++){Et=Lt[mt].mipmaps;for(let Ft=0;Ft<Et.length;Ft++){const te=Et[Ft];D.format!==Fn?H!==null?V?At&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft,0,0,te.width,te.height,H,te.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft,Tt,te.width,te.height,0,te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):V?At&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft,0,0,te.width,te.height,H,tt,te.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft,Tt,te.width,te.height,0,H,tt,te.data)}}}else{if(Et=D.mipmaps,V&&gt){Et.length>0&&Bt++;const mt=ce(Lt[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,Bt,Tt,mt.width,mt.height)}for(let mt=0;mt<6;mt++)if(Mt){V?At&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,0,0,Lt[mt].width,Lt[mt].height,H,tt,Lt[mt].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,Tt,Lt[mt].width,Lt[mt].height,0,H,tt,Lt[mt].data);for(let Ft=0;Ft<Et.length;Ft++){const Ee=Et[Ft].image[mt].image;V?At&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft+1,0,0,Ee.width,Ee.height,H,tt,Ee.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft+1,Tt,Ee.width,Ee.height,0,H,tt,Ee.data)}}else{V?At&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,0,0,H,tt,Lt[mt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,Tt,H,tt,Lt[mt]);for(let Ft=0;Ft<Et.length;Ft++){const te=Et[Ft];V?At&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft+1,0,0,H,tt,te.image[mt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Ft+1,Tt,H,tt,te.image[mt])}}}S(D)&&_(s.TEXTURE_CUBE_MAP),ot.__version=_t.version,D.onUpdate&&D.onUpdate(D)}O.__version=D.version}function zt(O,D,J,rt,_t,ot){const Zt=o.convert(J.format,J.colorSpace),Dt=o.convert(J.type),Wt=A(J.internalFormat,Zt,Dt,J.colorSpace),Xt=n.get(D),Mt=n.get(J);if(Mt.__renderTarget=D,!Xt.__hasExternalTextures){const Lt=Math.max(1,D.width>>ot),$t=Math.max(1,D.height>>ot);_t===s.TEXTURE_3D||_t===s.TEXTURE_2D_ARRAY?e.texImage3D(_t,ot,Wt,Lt,$t,D.depth,0,Zt,Dt,null):e.texImage2D(_t,ot,Wt,Lt,$t,0,Zt,Dt,null)}e.bindFramebuffer(s.FRAMEBUFFER,O),bt(D)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,rt,_t,Mt.__webglTexture,0,Nt(D)):(_t===s.TEXTURE_2D||_t>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&_t<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,rt,_t,Mt.__webglTexture,ot),e.bindFramebuffer(s.FRAMEBUFFER,null)}function Jt(O,D,J){if(s.bindRenderbuffer(s.RENDERBUFFER,O),D.depthBuffer){const rt=D.depthTexture,_t=rt&&rt.isDepthTexture?rt.type:null,ot=T(D.stencilBuffer,_t),Zt=D.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Dt=Nt(D);bt(D)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Dt,ot,D.width,D.height):J?s.renderbufferStorageMultisample(s.RENDERBUFFER,Dt,ot,D.width,D.height):s.renderbufferStorage(s.RENDERBUFFER,ot,D.width,D.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Zt,s.RENDERBUFFER,O)}else{const rt=D.textures;for(let _t=0;_t<rt.length;_t++){const ot=rt[_t],Zt=o.convert(ot.format,ot.colorSpace),Dt=o.convert(ot.type),Wt=A(ot.internalFormat,Zt,Dt,ot.colorSpace),Xt=Nt(D);J&&bt(D)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Xt,Wt,D.width,D.height):bt(D)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Xt,Wt,D.width,D.height):s.renderbufferStorage(s.RENDERBUFFER,Wt,D.width,D.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Yt(O,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,O),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const rt=n.get(D.depthTexture);rt.__renderTarget=D,(!rt.__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),it(D.depthTexture,0);const _t=rt.__webglTexture,ot=Nt(D);if(D.depthTexture.format===bo)bt(D)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,_t,0,ot):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,_t,0);else if(D.depthTexture.format===Eo)bt(D)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,_t,0,ot):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,_t,0);else throw new Error("Unknown depthTexture format")}function me(O){const D=n.get(O),J=O.isWebGLCubeRenderTarget===!0;if(D.__boundDepthTexture!==O.depthTexture){const rt=O.depthTexture;if(D.__depthDisposeCallback&&D.__depthDisposeCallback(),rt){const _t=()=>{delete D.__boundDepthTexture,delete D.__depthDisposeCallback,rt.removeEventListener("dispose",_t)};rt.addEventListener("dispose",_t),D.__depthDisposeCallback=_t}D.__boundDepthTexture=rt}if(O.depthTexture&&!D.__autoAllocateDepthBuffer){if(J)throw new Error("target.depthTexture not supported in Cube render targets");const rt=O.texture.mipmaps;rt&&rt.length>0?Yt(D.__webglFramebuffer[0],O):Yt(D.__webglFramebuffer,O)}else if(J){D.__webglDepthbuffer=[];for(let rt=0;rt<6;rt++)if(e.bindFramebuffer(s.FRAMEBUFFER,D.__webglFramebuffer[rt]),D.__webglDepthbuffer[rt]===void 0)D.__webglDepthbuffer[rt]=s.createRenderbuffer(),Jt(D.__webglDepthbuffer[rt],O,!1);else{const _t=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ot=D.__webglDepthbuffer[rt];s.bindRenderbuffer(s.RENDERBUFFER,ot),s.framebufferRenderbuffer(s.FRAMEBUFFER,_t,s.RENDERBUFFER,ot)}}else{const rt=O.texture.mipmaps;if(rt&&rt.length>0?e.bindFramebuffer(s.FRAMEBUFFER,D.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,D.__webglFramebuffer),D.__webglDepthbuffer===void 0)D.__webglDepthbuffer=s.createRenderbuffer(),Jt(D.__webglDepthbuffer,O,!1);else{const _t=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ot=D.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ot),s.framebufferRenderbuffer(s.FRAMEBUFFER,_t,s.RENDERBUFFER,ot)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function we(O,D,J){const rt=n.get(O);D!==void 0&&zt(rt.__webglFramebuffer,O,O.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),J!==void 0&&me(O)}function F(O){const D=O.texture,J=n.get(O),rt=n.get(D);O.addEventListener("dispose",P);const _t=O.textures,ot=O.isWebGLCubeRenderTarget===!0,Zt=_t.length>1;if(Zt||(rt.__webglTexture===void 0&&(rt.__webglTexture=s.createTexture()),rt.__version=D.version,l.memory.textures++),ot){J.__webglFramebuffer=[];for(let Dt=0;Dt<6;Dt++)if(D.mipmaps&&D.mipmaps.length>0){J.__webglFramebuffer[Dt]=[];for(let Wt=0;Wt<D.mipmaps.length;Wt++)J.__webglFramebuffer[Dt][Wt]=s.createFramebuffer()}else J.__webglFramebuffer[Dt]=s.createFramebuffer()}else{if(D.mipmaps&&D.mipmaps.length>0){J.__webglFramebuffer=[];for(let Dt=0;Dt<D.mipmaps.length;Dt++)J.__webglFramebuffer[Dt]=s.createFramebuffer()}else J.__webglFramebuffer=s.createFramebuffer();if(Zt)for(let Dt=0,Wt=_t.length;Dt<Wt;Dt++){const Xt=n.get(_t[Dt]);Xt.__webglTexture===void 0&&(Xt.__webglTexture=s.createTexture(),l.memory.textures++)}if(O.samples>0&&bt(O)===!1){J.__webglMultisampledFramebuffer=s.createFramebuffer(),J.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,J.__webglMultisampledFramebuffer);for(let Dt=0;Dt<_t.length;Dt++){const Wt=_t[Dt];J.__webglColorRenderbuffer[Dt]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,J.__webglColorRenderbuffer[Dt]);const Xt=o.convert(Wt.format,Wt.colorSpace),Mt=o.convert(Wt.type),Lt=A(Wt.internalFormat,Xt,Mt,Wt.colorSpace,O.isXRRenderTarget===!0),$t=Nt(O);s.renderbufferStorageMultisample(s.RENDERBUFFER,$t,Lt,O.width,O.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Dt,s.RENDERBUFFER,J.__webglColorRenderbuffer[Dt])}s.bindRenderbuffer(s.RENDERBUFFER,null),O.depthBuffer&&(J.__webglDepthRenderbuffer=s.createRenderbuffer(),Jt(J.__webglDepthRenderbuffer,O,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ot){e.bindTexture(s.TEXTURE_CUBE_MAP,rt.__webglTexture),It(s.TEXTURE_CUBE_MAP,D);for(let Dt=0;Dt<6;Dt++)if(D.mipmaps&&D.mipmaps.length>0)for(let Wt=0;Wt<D.mipmaps.length;Wt++)zt(J.__webglFramebuffer[Dt][Wt],O,D,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Dt,Wt);else zt(J.__webglFramebuffer[Dt],O,D,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Dt,0);S(D)&&_(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Zt){for(let Dt=0,Wt=_t.length;Dt<Wt;Dt++){const Xt=_t[Dt],Mt=n.get(Xt);let Lt=s.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(Lt=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Lt,Mt.__webglTexture),It(Lt,Xt),zt(J.__webglFramebuffer,O,Xt,s.COLOR_ATTACHMENT0+Dt,Lt,0),S(Xt)&&_(Lt)}e.unbindTexture()}else{let Dt=s.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(Dt=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Dt,rt.__webglTexture),It(Dt,D),D.mipmaps&&D.mipmaps.length>0)for(let Wt=0;Wt<D.mipmaps.length;Wt++)zt(J.__webglFramebuffer[Wt],O,D,s.COLOR_ATTACHMENT0,Dt,Wt);else zt(J.__webglFramebuffer,O,D,s.COLOR_ATTACHMENT0,Dt,0);S(D)&&_(Dt),e.unbindTexture()}O.depthBuffer&&me(O)}function vt(O){const D=O.textures;for(let J=0,rt=D.length;J<rt;J++){const _t=D[J];if(S(_t)){const ot=E(O),Zt=n.get(_t).__webglTexture;e.bindTexture(ot,Zt),_(ot),e.unbindTexture()}}}const pt=[],dt=[];function ct(O){if(O.samples>0){if(bt(O)===!1){const D=O.textures,J=O.width,rt=O.height;let _t=s.COLOR_BUFFER_BIT;const ot=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Zt=n.get(O),Dt=D.length>1;if(Dt)for(let Xt=0;Xt<D.length;Xt++)e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer);const Wt=O.texture.mipmaps;Wt&&Wt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer);for(let Xt=0;Xt<D.length;Xt++){if(O.resolveDepthBuffer&&(O.depthBuffer&&(_t|=s.DEPTH_BUFFER_BIT),O.stencilBuffer&&O.resolveStencilBuffer&&(_t|=s.STENCIL_BUFFER_BIT)),Dt){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Zt.__webglColorRenderbuffer[Xt]);const Mt=n.get(D[Xt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Mt,0)}s.blitFramebuffer(0,0,J,rt,0,0,J,rt,_t,s.NEAREST),h===!0&&(pt.length=0,dt.length=0,pt.push(s.COLOR_ATTACHMENT0+Xt),O.depthBuffer&&O.resolveDepthBuffer===!1&&(pt.push(ot),dt.push(ot),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,dt)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,pt))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Dt)for(let Xt=0;Xt<D.length;Xt++){e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xt,s.RENDERBUFFER,Zt.__webglColorRenderbuffer[Xt]);const Mt=n.get(D[Xt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xt,s.TEXTURE_2D,Mt,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer)}else if(O.depthBuffer&&O.resolveDepthBuffer===!1&&h){const D=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[D])}}}function Nt(O){return Math.min(i.maxSamples,O.samples)}function bt(O){const D=n.get(O);return O.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&D.__useRenderToTexture!==!1}function Ct(O){const D=l.render.frame;p.get(O)!==D&&(p.set(O,D),O.update())}function re(O,D){const J=O.colorSpace,rt=O.format,_t=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||J!==ma&&J!==Ns&&(Re.getTransfer(J)===He?(rt!==Fn||_t!==Ii)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",J)),D}function ce(O){return typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement?(f.width=O.naturalWidth||O.width,f.height=O.naturalHeight||O.height):typeof VideoFrame<"u"&&O instanceof VideoFrame?(f.width=O.displayWidth,f.height=O.displayHeight):(f.width=O.width,f.height=O.height),f}this.allocateTextureUnit=X,this.resetTextureUnits=Y,this.setTexture2D=it,this.setTexture2DArray=k,this.setTexture3D=et,this.setTextureCube=q,this.rebindTextures=we,this.setupRenderTarget=F,this.updateRenderTargetMipmap=vt,this.updateMultisampleRenderTarget=ct,this.setupDepthRenderbuffer=me,this.setupFrameBufferTexture=zt,this.useMultisampledRTT=bt}function ES(s,t){function e(n,i=Ns){let o;const l=Re.getTransfer(i);if(n===Ii)return s.UNSIGNED_BYTE;if(n===Yh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Zh)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Cm)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===Rm)return s.UNSIGNED_INT_10F_11F_11F_REV;if(n===Am)return s.BYTE;if(n===wm)return s.SHORT;if(n===So)return s.UNSIGNED_SHORT;if(n===qh)return s.INT;if(n===zs)return s.UNSIGNED_INT;if(n===ai)return s.FLOAT;if(n===Lo)return s.HALF_FLOAT;if(n===Dm)return s.ALPHA;if(n===Um)return s.RGB;if(n===Fn)return s.RGBA;if(n===bo)return s.DEPTH_COMPONENT;if(n===Eo)return s.DEPTH_STENCIL;if(n===jh)return s.RED;if(n===sc)return s.RED_INTEGER;if(n===Nm)return s.RG;if(n===Kh)return s.RG_INTEGER;if(n===Jh)return s.RGBA_INTEGER;if(n===Dl||n===Ul||n===Nl||n===Ll)if(l===He)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(n===Dl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ul)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Nl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ll)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(n===Dl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ul)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Nl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ll)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===ah||n===rh||n===oh||n===lh)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(n===ah)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===rh)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===oh)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===lh)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===ch||n===uh||n===hh)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(n===ch||n===uh)return l===He?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(n===hh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===fh||n===dh||n===ph||n===mh||n===gh||n===vh||n===_h||n===yh||n===xh||n===Sh||n===Mh||n===bh||n===Eh||n===Th)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(n===fh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===dh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ph)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===mh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===gh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===vh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===_h)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===yh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===xh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Sh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Mh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===bh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Eh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Th)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Ah||n===wh||n===Ch)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(n===Ah)return l===He?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===wh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Ch)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Rh||n===Dh||n===Uh||n===Nh)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(n===Rh)return o.COMPRESSED_RED_RGTC1_EXT;if(n===Dh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Uh)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Nh)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Mo?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}const l3=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,c3=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class u3{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(this.texture===null){const n=new Wm(t.texture);(t.depthNear!==e.depthNear||t.depthFar!==e.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new ji({vertexShader:l3,fragmentShader:c3,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new fn(new Io(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class h3 extends cs{constructor(t,e){super();const n=this;let i=null,o=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const b=typeof XRWebGLBinding<"u",S=new u3,_={},E=e.getContextAttributes();let A=null,T=null;const U=[],R=[],P=new ft;let B=null;const C=new ln;C.viewport=new Ne;const w=new ln;w.viewport=new Ne;const z=[C,w],Y=new dS;let X=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ut){let xt=U[ut];return xt===void 0&&(xt=new Yu,U[ut]=xt),xt.getTargetRaySpace()},this.getControllerGrip=function(ut){let xt=U[ut];return xt===void 0&&(xt=new Yu,U[ut]=xt),xt.getGripSpace()},this.getHand=function(ut){let xt=U[ut];return xt===void 0&&(xt=new Yu,U[ut]=xt),xt.getHandSpace()};function it(ut){const xt=R.indexOf(ut.inputSource);if(xt===-1)return;const zt=U[xt];zt!==void 0&&(zt.update(ut.inputSource,ut.frame,f||l),zt.dispatchEvent({type:ut.type,data:ut.inputSource}))}function k(){i.removeEventListener("select",it),i.removeEventListener("selectstart",it),i.removeEventListener("selectend",it),i.removeEventListener("squeeze",it),i.removeEventListener("squeezestart",it),i.removeEventListener("squeezeend",it),i.removeEventListener("end",k),i.removeEventListener("inputsourceschange",et);for(let ut=0;ut<U.length;ut++){const xt=R[ut];xt!==null&&(R[ut]=null,U[ut].disconnect(xt))}X=null,$=null,S.reset();for(const ut in _)delete _[ut];t.setRenderTarget(A),v=null,g=null,m=null,i=null,T=null,le.stop(),n.isPresenting=!1,t.setPixelRatio(B),t.setSize(P.width,P.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ut){o=ut,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ut){c=ut,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(ut){f=ut},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m===null&&b&&(m=new XRWebGLBinding(i,e)),m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(ut){if(i=ut,i!==null){if(A=t.getRenderTarget(),i.addEventListener("select",it),i.addEventListener("selectstart",it),i.addEventListener("selectend",it),i.addEventListener("squeeze",it),i.addEventListener("squeezestart",it),i.addEventListener("squeezeend",it),i.addEventListener("end",k),i.addEventListener("inputsourceschange",et),E.xrCompatible!==!0&&await e.makeXRCompatible(),B=t.getPixelRatio(),t.getSize(P),b&&"createProjectionLayer"in XRWebGLBinding.prototype){let zt=null,Jt=null,Yt=null;E.depth&&(Yt=E.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,zt=E.stencil?Eo:bo,Jt=E.stencil?Mo:zs);const me={colorFormat:e.RGBA8,depthFormat:Yt,scaleFactor:o};m=this.getBinding(),g=m.createProjectionLayer(me),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),T=new ls(g.textureWidth,g.textureHeight,{format:Fn,type:Ii,depthTexture:new km(g.textureWidth,g.textureHeight,Jt,void 0,void 0,void 0,void 0,void 0,void 0,zt),stencilBuffer:E.stencil,colorSpace:t.outputColorSpace,samples:E.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const zt={antialias:E.antialias,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(i,e,zt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),T=new ls(v.framebufferWidth,v.framebufferHeight,{format:Fn,type:Ii,colorSpace:t.outputColorSpace,stencilBuffer:E.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}T.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),le.setContext(i),le.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return S.getDepthTexture()};function et(ut){for(let xt=0;xt<ut.removed.length;xt++){const zt=ut.removed[xt],Jt=R.indexOf(zt);Jt>=0&&(R[Jt]=null,U[Jt].disconnect(zt))}for(let xt=0;xt<ut.added.length;xt++){const zt=ut.added[xt];let Jt=R.indexOf(zt);if(Jt===-1){for(let me=0;me<U.length;me++)if(me>=R.length){R.push(zt),Jt=me;break}else if(R[me]===null){R[me]=zt,Jt=me;break}if(Jt===-1)break}const Yt=U[Jt];Yt&&Yt.connect(zt)}}const q=new I,lt=new I;function yt(ut,xt,zt){q.setFromMatrixPosition(xt.matrixWorld),lt.setFromMatrixPosition(zt.matrixWorld);const Jt=q.distanceTo(lt),Yt=xt.projectionMatrix.elements,me=zt.projectionMatrix.elements,we=Yt[14]/(Yt[10]-1),F=Yt[14]/(Yt[10]+1),vt=(Yt[9]+1)/Yt[5],pt=(Yt[9]-1)/Yt[5],dt=(Yt[8]-1)/Yt[0],ct=(me[8]+1)/me[0],Nt=we*dt,bt=we*ct,Ct=Jt/(-dt+ct),re=Ct*-dt;if(xt.matrixWorld.decompose(ut.position,ut.quaternion,ut.scale),ut.translateX(re),ut.translateZ(Ct),ut.matrixWorld.compose(ut.position,ut.quaternion,ut.scale),ut.matrixWorldInverse.copy(ut.matrixWorld).invert(),Yt[10]===-1)ut.projectionMatrix.copy(xt.projectionMatrix),ut.projectionMatrixInverse.copy(xt.projectionMatrixInverse);else{const ce=we+Ct,O=F+Ct,D=Nt-re,J=bt+(Jt-re),rt=vt*F/O*ce,_t=pt*F/O*ce;ut.projectionMatrix.makePerspective(D,J,rt,_t,ce,O),ut.projectionMatrixInverse.copy(ut.projectionMatrix).invert()}}function St(ut,xt){xt===null?ut.matrixWorld.copy(ut.matrix):ut.matrixWorld.multiplyMatrices(xt.matrixWorld,ut.matrix),ut.matrixWorldInverse.copy(ut.matrixWorld).invert()}this.updateCamera=function(ut){if(i===null)return;let xt=ut.near,zt=ut.far;S.texture!==null&&(S.depthNear>0&&(xt=S.depthNear),S.depthFar>0&&(zt=S.depthFar)),Y.near=w.near=C.near=xt,Y.far=w.far=C.far=zt,(X!==Y.near||$!==Y.far)&&(i.updateRenderState({depthNear:Y.near,depthFar:Y.far}),X=Y.near,$=Y.far),Y.layers.mask=ut.layers.mask|6,C.layers.mask=Y.layers.mask&3,w.layers.mask=Y.layers.mask&5;const Jt=ut.parent,Yt=Y.cameras;St(Y,Jt);for(let me=0;me<Yt.length;me++)St(Yt[me],Jt);Yt.length===2?yt(Y,C,w):Y.projectionMatrix.copy(C.projectionMatrix),It(ut,Y,Jt)};function It(ut,xt,zt){zt===null?ut.matrix.copy(xt.matrixWorld):(ut.matrix.copy(zt.matrixWorld),ut.matrix.invert(),ut.matrix.multiply(xt.matrixWorld)),ut.matrix.decompose(ut.position,ut.quaternion,ut.scale),ut.updateMatrixWorld(!0),ut.projectionMatrix.copy(xt.projectionMatrix),ut.projectionMatrixInverse.copy(xt.projectionMatrixInverse),ut.isPerspectiveCamera&&(ut.fov=Ao*2*Math.atan(1/ut.projectionMatrix.elements[5]),ut.zoom=1)}this.getCamera=function(){return Y},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(ut){h=ut,g!==null&&(g.fixedFoveation=ut),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=ut)},this.hasDepthSensing=function(){return S.texture!==null},this.getDepthSensingMesh=function(){return S.getMesh(Y)},this.getCameraTexture=function(ut){return _[ut]};let Qt=null;function Kt(ut,xt){if(p=xt.getViewerPose(f||l),x=xt,p!==null){const zt=p.views;v!==null&&(t.setRenderTargetFramebuffer(T,v.framebuffer),t.setRenderTarget(T));let Jt=!1;zt.length!==Y.cameras.length&&(Y.cameras.length=0,Jt=!0);for(let F=0;F<zt.length;F++){const vt=zt[F];let pt=null;if(v!==null)pt=v.getViewport(vt);else{const ct=m.getViewSubImage(g,vt);pt=ct.viewport,F===0&&(t.setRenderTargetTextures(T,ct.colorTexture,ct.depthStencilTexture),t.setRenderTarget(T))}let dt=z[F];dt===void 0&&(dt=new ln,dt.layers.enable(F),dt.viewport=new Ne,z[F]=dt),dt.matrix.fromArray(vt.transform.matrix),dt.matrix.decompose(dt.position,dt.quaternion,dt.scale),dt.projectionMatrix.fromArray(vt.projectionMatrix),dt.projectionMatrixInverse.copy(dt.projectionMatrix).invert(),dt.viewport.set(pt.x,pt.y,pt.width,pt.height),F===0&&(Y.matrix.copy(dt.matrix),Y.matrix.decompose(Y.position,Y.quaternion,Y.scale)),Jt===!0&&Y.cameras.push(dt)}const Yt=i.enabledFeatures;if(Yt&&Yt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&b){m=n.getBinding();const F=m.getDepthInformation(zt[0]);F&&F.isValid&&F.texture&&S.init(F,i.renderState)}if(Yt&&Yt.includes("camera-access")&&b){t.state.unbindTexture(),m=n.getBinding();for(let F=0;F<zt.length;F++){const vt=zt[F].camera;if(vt){let pt=_[vt];pt||(pt=new Wm,_[vt]=pt);const dt=m.getCameraImage(vt);pt.sourceTexture=dt}}}}for(let zt=0;zt<U.length;zt++){const Jt=R[zt],Yt=U[zt];Jt!==null&&Yt!==void 0&&Yt.update(Jt,xt,f||l)}Qt&&Qt(ut,xt),xt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:xt}),x=null}const le=new yS;le.setAnimationLoop(Kt),this.setAnimationLoop=function(ut){Qt=ut},this.dispose=function(){}}}const $a=new bi,f3=new fe;function d3(s,t){function e(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,_x(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,E,A,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?o(S,_):_.isMeshToonMaterial?(o(S,_),m(S,_)):_.isMeshPhongMaterial?(o(S,_),p(S,_)):_.isMeshStandardMaterial?(o(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,T)):_.isMeshMatcapMaterial?(o(S,_),x(S,_)):_.isMeshDepthMaterial?o(S,_):_.isMeshDistanceMaterial?(o(S,_),b(S,_)):_.isMeshNormalMaterial?o(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?h(S,_,E,A):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function o(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,e(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===Kn&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,e(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===Kn&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,e(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,e(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const E=t.get(_),A=E.envMap,T=E.envMapRotation;A&&(S.envMap.value=A,$a.copy(T),$a.x*=-1,$a.y*=-1,$a.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&($a.y*=-1,$a.z*=-1),S.envMapRotation.value.setFromMatrix4(f3.makeRotationFromEuler($a)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,e(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function h(S,_,E,A){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*E,S.scale.value=A*.5,_.map&&(S.map.value=_.map,e(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function p(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,E){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Kn&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function b(S,_){const E=t.get(_).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function p3(s,t,e,n){let i={},o={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,A){const T=A.program;n.uniformBlockBinding(E,T)}function f(E,A){let T=i[E.id];T===void 0&&(x(E),T=p(E),i[E.id]=T,E.addEventListener("dispose",S));const U=A.program;n.updateUBOMapping(E,U);const R=t.render.frame;o[E.id]!==R&&(g(E),o[E.id]=R)}function p(E){const A=m();E.__bindingPointIndex=A;const T=s.createBuffer(),U=E.__size,R=E.usage;return s.bindBuffer(s.UNIFORM_BUFFER,T),s.bufferData(s.UNIFORM_BUFFER,U,R),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,A,T),T}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const A=i[E.id],T=E.uniforms,U=E.__cache;s.bindBuffer(s.UNIFORM_BUFFER,A);for(let R=0,P=T.length;R<P;R++){const B=Array.isArray(T[R])?T[R]:[T[R]];for(let C=0,w=B.length;C<w;C++){const z=B[C];if(v(z,R,C,U)===!0){const Y=z.__offset,X=Array.isArray(z.value)?z.value:[z.value];let $=0;for(let it=0;it<X.length;it++){const k=X[it],et=b(k);typeof k=="number"||typeof k=="boolean"?(z.__data[0]=k,s.bufferSubData(s.UNIFORM_BUFFER,Y+$,z.__data)):k.isMatrix3?(z.__data[0]=k.elements[0],z.__data[1]=k.elements[1],z.__data[2]=k.elements[2],z.__data[3]=0,z.__data[4]=k.elements[3],z.__data[5]=k.elements[4],z.__data[6]=k.elements[5],z.__data[7]=0,z.__data[8]=k.elements[6],z.__data[9]=k.elements[7],z.__data[10]=k.elements[8],z.__data[11]=0):(k.toArray(z.__data,$),$+=et.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,Y,z.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(E,A,T,U){const R=E.value,P=A+"_"+T;if(U[P]===void 0)return typeof R=="number"||typeof R=="boolean"?U[P]=R:U[P]=R.clone(),!0;{const B=U[P];if(typeof R=="number"||typeof R=="boolean"){if(B!==R)return U[P]=R,!0}else if(B.equals(R)===!1)return B.copy(R),!0}return!1}function x(E){const A=E.uniforms;let T=0;const U=16;for(let P=0,B=A.length;P<B;P++){const C=Array.isArray(A[P])?A[P]:[A[P]];for(let w=0,z=C.length;w<z;w++){const Y=C[w],X=Array.isArray(Y.value)?Y.value:[Y.value];for(let $=0,it=X.length;$<it;$++){const k=X[$],et=b(k),q=T%U,lt=q%et.boundary,yt=q+lt;T+=lt,yt!==0&&U-yt<et.storage&&(T+=U-yt),Y.__data=new Float32Array(et.storage/Float32Array.BYTES_PER_ELEMENT),Y.__offset=T,T+=et.storage}}}const R=T%U;return R>0&&(T+=U-R),E.__size=T,E.__cache={},this}function b(E){const A={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(A.boundary=4,A.storage=4):E.isVector2?(A.boundary=8,A.storage=8):E.isVector3||E.isColor?(A.boundary=16,A.storage=12):E.isVector4?(A.boundary=16,A.storage=16):E.isMatrix3?(A.boundary=48,A.storage=48):E.isMatrix4?(A.boundary=64,A.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),A}function S(E){const A=E.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),s.deleteBuffer(i[A.id]),delete i[A.id],delete o[A.id]}function _(){for(const E in i)s.deleteBuffer(i[E]);l=[],i={},o={}}return{bind:h,update:f,dispose:_}}class TS{constructor(t={}){const{canvas:e=mx(),context:n=null,depth:i=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reversedDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),b=new Int32Array(4);let S=null,_=null;const E=[],A=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=rs,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let U=!1;this._outputColorSpace=zn;let R=0,P=0,B=null,C=-1,w=null;const z=new Ne,Y=new Ne;let X=null;const $=new Gt(0);let it=0,k=e.width,et=e.height,q=1,lt=null,yt=null;const St=new Ne(0,0,k,et),It=new Ne(0,0,k,et);let Qt=!1;const Kt=new Po;let le=!1,ut=!1;const xt=new fe,zt=new I,Jt=new Ne,Yt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let me=!1;function we(){return B===null?q:1}let F=n;function vt(L,W){return e.getContext(L,W)}try{const L={alpha:!0,depth:i,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${kh}`),e.addEventListener("webglcontextlost",At,!1),e.addEventListener("webglcontextrestored",Bt,!1),e.addEventListener("webglcontextcreationerror",Et,!1),F===null){const W="webgl2";if(F=vt(W,L),F===null)throw vt(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let pt,dt,ct,Nt,bt,Ct,re,ce,O,D,J,rt,_t,ot,Zt,Dt,Wt,Xt,Mt,Lt,$t,H,tt,Tt;function V(){pt=new AR(F),pt.init(),H=new ES(F,pt),dt=new yR(F,pt,t,H),ct=new r3(F,pt),dt.reversedDepthBuffer&&g&&ct.buffers.depth.setReversed(!0),Nt=new RR(F),bt=new Y2,Ct=new o3(F,pt,ct,bt,dt,H,Nt),re=new SR(T),ce=new TR(T),O=new IA(F),tt=new vR(F,O),D=new wR(F,O,Nt,tt),J=new UR(F,D,O,Nt),Mt=new DR(F,dt,Ct),Dt=new xR(bt),rt=new q2(T,re,ce,pt,dt,tt,Dt),_t=new d3(T,bt),ot=new j2,Zt=new e3(pt),Xt=new gR(T,re,ce,ct,J,v,h),Wt=new s3(T,J,dt),Tt=new p3(F,Nt,dt,ct),Lt=new _R(F,pt,Nt),$t=new CR(F,pt,Nt),Nt.programs=rt.programs,T.capabilities=dt,T.extensions=pt,T.properties=bt,T.renderLists=ot,T.shadowMap=Wt,T.state=ct,T.info=Nt}V();const gt=new h3(T,F);this.xr=gt,this.getContext=function(){return F},this.getContextAttributes=function(){return F.getContextAttributes()},this.forceContextLoss=function(){const L=pt.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=pt.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(L){L!==void 0&&(q=L,this.setSize(k,et,!1))},this.getSize=function(L){return L.set(k,et)},this.setSize=function(L,W,Q=!0){if(gt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}k=L,et=W,e.width=Math.floor(L*q),e.height=Math.floor(W*q),Q===!0&&(e.style.width=L+"px",e.style.height=W+"px"),this.setViewport(0,0,L,W)},this.getDrawingBufferSize=function(L){return L.set(k*q,et*q).floor()},this.setDrawingBufferSize=function(L,W,Q){k=L,et=W,q=Q,e.width=Math.floor(L*Q),e.height=Math.floor(W*Q),this.setViewport(0,0,L,W)},this.getCurrentViewport=function(L){return L.copy(z)},this.getViewport=function(L){return L.copy(St)},this.setViewport=function(L,W,Q,st){L.isVector4?St.set(L.x,L.y,L.z,L.w):St.set(L,W,Q,st),ct.viewport(z.copy(St).multiplyScalar(q).round())},this.getScissor=function(L){return L.copy(It)},this.setScissor=function(L,W,Q,st){L.isVector4?It.set(L.x,L.y,L.z,L.w):It.set(L,W,Q,st),ct.scissor(Y.copy(It).multiplyScalar(q).round())},this.getScissorTest=function(){return Qt},this.setScissorTest=function(L){ct.setScissorTest(Qt=L)},this.setOpaqueSort=function(L){lt=L},this.setTransparentSort=function(L){yt=L},this.getClearColor=function(L){return L.copy(Xt.getClearColor())},this.setClearColor=function(){Xt.setClearColor(...arguments)},this.getClearAlpha=function(){return Xt.getClearAlpha()},this.setClearAlpha=function(){Xt.setClearAlpha(...arguments)},this.clear=function(L=!0,W=!0,Q=!0){let st=0;if(L){let j=!1;if(B!==null){const wt=B.texture.format;j=wt===Jh||wt===Kh||wt===sc}if(j){const wt=B.texture.type,Pt=wt===Ii||wt===zs||wt===So||wt===Mo||wt===Yh||wt===Zh,qt=Xt.getClearColor(),kt=Xt.getClearAlpha(),ae=qt.r,ue=qt.g,ee=qt.b;Pt?(x[0]=ae,x[1]=ue,x[2]=ee,x[3]=kt,F.clearBufferuiv(F.COLOR,0,x)):(b[0]=ae,b[1]=ue,b[2]=ee,b[3]=kt,F.clearBufferiv(F.COLOR,0,b))}else st|=F.COLOR_BUFFER_BIT}W&&(st|=F.DEPTH_BUFFER_BIT),Q&&(st|=F.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),F.clear(st)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",At,!1),e.removeEventListener("webglcontextrestored",Bt,!1),e.removeEventListener("webglcontextcreationerror",Et,!1),Xt.dispose(),ot.dispose(),Zt.dispose(),bt.dispose(),re.dispose(),ce.dispose(),J.dispose(),tt.dispose(),Tt.dispose(),rt.dispose(),gt.dispose(),gt.removeEventListener("sessionstart",_n),gt.removeEventListener("sessionend",zo),Bi.stop()};function At(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),U=!0}function Bt(){console.log("THREE.WebGLRenderer: Context Restored."),U=!1;const L=Nt.autoReset,W=Wt.enabled,Q=Wt.autoUpdate,st=Wt.needsUpdate,j=Wt.type;V(),Nt.autoReset=L,Wt.enabled=W,Wt.autoUpdate=Q,Wt.needsUpdate=st,Wt.type=j}function Et(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function mt(L){const W=L.target;W.removeEventListener("dispose",mt),Ft(W)}function Ft(L){te(L),bt.remove(L)}function te(L){const W=bt.get(L).programs;W!==void 0&&(W.forEach(function(Q){rt.releaseProgram(Q)}),L.isShaderMaterial&&rt.releaseShaderCache(L))}this.renderBufferDirect=function(L,W,Q,st,j,wt){W===null&&(W=Yt);const Pt=j.isMesh&&j.matrixWorld.determinant()<0,qt=Ho(L,W,Q,st,j);ct.setMaterial(st,Pt);let kt=Q.index,ae=1;if(st.wireframe===!0){if(kt=D.getWireframeAttribute(Q),kt===void 0)return;ae=2}const ue=Q.drawRange,ee=Q.attributes.position;let Me=ue.start*ae,Be=(ue.start+ue.count)*ae;wt!==null&&(Me=Math.max(Me,wt.start*ae),Be=Math.min(Be,(wt.start+wt.count)*ae)),kt!==null?(Me=Math.max(Me,0),Be=Math.min(Be,kt.count)):ee!=null&&(Me=Math.max(Me,0),Be=Math.min(Be,ee.count));const Ze=Be-Me;if(Ze<0||Ze===1/0)return;tt.setup(j,st,qt,Q,kt);let Ve,ze=Lt;if(kt!==null&&(Ve=O.get(kt),ze=$t,ze.setIndex(Ve)),j.isMesh)st.wireframe===!0?(ct.setLineWidth(st.wireframeLinewidth*we()),ze.setMode(F.LINES)):ze.setMode(F.TRIANGLES);else if(j.isLine){let se=st.linewidth;se===void 0&&(se=1),ct.setLineWidth(se*we()),j.isLineSegments?ze.setMode(F.LINES):j.isLineLoop?ze.setMode(F.LINE_LOOP):ze.setMode(F.LINE_STRIP)}else j.isPoints?ze.setMode(F.POINTS):j.isSprite&&ze.setMode(F.TRIANGLES);if(j.isBatchedMesh)if(j._multiDrawInstances!==null)Yl("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),ze.renderMultiDrawInstances(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount,j._multiDrawInstances);else if(pt.get("WEBGL_multi_draw"))ze.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else{const se=j._multiDrawStarts,je=j._multiDrawCounts,Ce=j._multiDrawCount,Rn=kt?O.get(kt).bytesPerElement:1,fs=bt.get(st).currentProgram.getUniforms();for(let En=0;En<Ce;En++)fs.setValue(F,"_gl_DrawID",En),ze.render(se[En]/Rn,je[En])}else if(j.isInstancedMesh)ze.renderInstances(Me,Ze,j.count);else if(Q.isInstancedBufferGeometry){const se=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,je=Math.min(Q.instanceCount,se);ze.renderInstances(Me,Ze,je)}else ze.render(Me,Ze)};function Ee(L,W,Q){L.transparent===!0&&L.side===is&&L.forceSinglePass===!1?(L.side=Kn,L.needsUpdate=!0,hs(L,W,Q),L.side=Os,L.needsUpdate=!0,hs(L,W,Q),L.side=is):hs(L,W,Q)}this.compile=function(L,W,Q=null){Q===null&&(Q=L),_=Zt.get(Q),_.init(W),A.push(_),Q.traverseVisible(function(j){j.isLight&&j.layers.test(W.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),L!==Q&&L.traverseVisible(function(j){j.isLight&&j.layers.test(W.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),_.setupLights();const st=new Set;return L.traverse(function(j){if(!(j.isMesh||j.isPoints||j.isLine||j.isSprite))return;const wt=j.material;if(wt)if(Array.isArray(wt))for(let Pt=0;Pt<wt.length;Pt++){const qt=wt[Pt];Ee(qt,Q,j),st.add(qt)}else Ee(wt,Q,j),st.add(wt)}),_=A.pop(),st},this.compileAsync=function(L,W,Q=null){const st=this.compile(L,W,Q);return new Promise(j=>{function wt(){if(st.forEach(function(Pt){bt.get(Pt).currentProgram.isReady()&&st.delete(Pt)}),st.size===0){j(L);return}setTimeout(wt,10)}pt.get("KHR_parallel_shader_compile")!==null?wt():setTimeout(wt,10)})};let xe=null;function vn(L){xe&&xe(L)}function _n(){Bi.stop()}function zo(){Bi.start()}const Bi=new yS;Bi.setAnimationLoop(vn),typeof self<"u"&&Bi.setContext(self),this.setAnimationLoop=function(L){xe=L,gt.setAnimationLoop(L),L===null?Bi.stop():Bi.start()},gt.addEventListener("sessionstart",_n),gt.addEventListener("sessionend",zo),this.render=function(L,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(U===!0)return;if(L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),gt.enabled===!0&&gt.isPresenting===!0&&(gt.cameraAutoUpdate===!0&&gt.updateCamera(W),W=gt.getCamera()),L.isScene===!0&&L.onBeforeRender(T,L,W,B),_=Zt.get(L,A.length),_.init(W),A.push(_),xt.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),Kt.setFromProjectionMatrix(xt,Si,W.reversedDepth),ut=this.localClippingEnabled,le=Dt.init(this.clippingPlanes,ut),S=ot.get(L,E.length),S.init(),E.push(S),gt.enabled===!0&&gt.isPresenting===!0){const wt=T.xr.getDepthSensingMesh();wt!==null&&Sa(wt,W,-1/0,T.sortObjects)}Sa(L,W,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(lt,yt),me=gt.enabled===!1||gt.isPresenting===!1||gt.hasDepthSensing()===!1,me&&Xt.addToRenderList(S,L),this.info.render.frame++,le===!0&&Dt.beginShadows();const Q=_.state.shadowsArray;Wt.render(Q,L,W),le===!0&&Dt.endShadows(),this.info.autoReset===!0&&this.info.reset();const st=S.opaque,j=S.transmissive;if(_.setupLights(),W.isArrayCamera){const wt=W.cameras;if(j.length>0)for(let Pt=0,qt=wt.length;Pt<qt;Pt++){const kt=wt[Pt];Fo(st,j,L,kt)}me&&Xt.render(L);for(let Pt=0,qt=wt.length;Pt<qt;Pt++){const kt=wt[Pt];zi(S,L,kt,kt.viewport)}}else j.length>0&&Fo(st,j,L,W),me&&Xt.render(L),zi(S,L,W);B!==null&&P===0&&(Ct.updateMultisampleRenderTarget(B),Ct.updateRenderTargetMipmap(B)),L.isScene===!0&&L.onAfterRender(T,L,W),tt.resetDefaultState(),C=-1,w=null,A.pop(),A.length>0?(_=A[A.length-1],le===!0&&Dt.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function Sa(L,W,Q,st){if(L.visible===!1)return;if(L.layers.test(W.layers)){if(L.isGroup)Q=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(W);else if(L.isLight)_.pushLight(L),L.castShadow&&_.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||Kt.intersectsSprite(L)){st&&Jt.setFromMatrixPosition(L.matrixWorld).applyMatrix4(xt);const Pt=J.update(L),qt=L.material;qt.visible&&S.push(L,Pt,qt,Q,Jt.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||Kt.intersectsObject(L))){const Pt=J.update(L),qt=L.material;if(st&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),Jt.copy(L.boundingSphere.center)):(Pt.boundingSphere===null&&Pt.computeBoundingSphere(),Jt.copy(Pt.boundingSphere.center)),Jt.applyMatrix4(L.matrixWorld).applyMatrix4(xt)),Array.isArray(qt)){const kt=Pt.groups;for(let ae=0,ue=kt.length;ae<ue;ae++){const ee=kt[ae],Me=qt[ee.materialIndex];Me&&Me.visible&&S.push(L,Pt,Me,Q,Jt.z,ee)}}else qt.visible&&S.push(L,Pt,qt,Q,Jt.z,null)}}const wt=L.children;for(let Pt=0,qt=wt.length;Pt<qt;Pt++)Sa(wt[Pt],W,Q,st)}function zi(L,W,Q,st){const j=L.opaque,wt=L.transmissive,Pt=L.transparent;_.setupLightsView(Q),le===!0&&Dt.setGlobalState(T.clippingPlanes,Q),st&&ct.viewport(z.copy(st)),j.length>0&&oi(j,W,Q),wt.length>0&&oi(wt,W,Q),Pt.length>0&&oi(Pt,W,Q),ct.buffers.depth.setTest(!0),ct.buffers.depth.setMask(!0),ct.buffers.color.setMask(!0),ct.setPolygonOffset(!1)}function Fo(L,W,Q,st){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[st.id]===void 0&&(_.state.transmissionRenderTarget[st.id]=new ls(1,1,{generateMipmaps:!0,type:pt.has("EXT_color_buffer_half_float")||pt.has("EXT_color_buffer_float")?Lo:Ii,minFilter:ss,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Re.workingColorSpace}));const wt=_.state.transmissionRenderTarget[st.id],Pt=st.viewport||z;wt.setSize(Pt.z*T.transmissionResolutionScale,Pt.w*T.transmissionResolutionScale);const qt=T.getRenderTarget(),kt=T.getActiveCubeFace(),ae=T.getActiveMipmapLevel();T.setRenderTarget(wt),T.getClearColor($),it=T.getClearAlpha(),it<1&&T.setClearColor(16777215,.5),T.clear(),me&&Xt.render(Q);const ue=T.toneMapping;T.toneMapping=rs;const ee=st.viewport;if(st.viewport!==void 0&&(st.viewport=void 0),_.setupLightsView(st),le===!0&&Dt.setGlobalState(T.clippingPlanes,st),oi(L,Q,st),Ct.updateMultisampleRenderTarget(wt),Ct.updateRenderTargetMipmap(wt),pt.has("WEBGL_multisampled_render_to_texture")===!1){let Me=!1;for(let Be=0,Ze=W.length;Be<Ze;Be++){const Ve=W[Be],ze=Ve.object,se=Ve.geometry,je=Ve.material,Ce=Ve.group;if(je.side===is&&ze.layers.test(st.layers)){const Rn=je.side;je.side=Kn,je.needsUpdate=!0,Ei(ze,Q,st,se,je,Ce),je.side=Rn,je.needsUpdate=!0,Me=!0}}Me===!0&&(Ct.updateMultisampleRenderTarget(wt),Ct.updateRenderTargetMipmap(wt))}T.setRenderTarget(qt,kt,ae),T.setClearColor($,it),ee!==void 0&&(st.viewport=ee),T.toneMapping=ue}function oi(L,W,Q){const st=W.isScene===!0?W.overrideMaterial:null;for(let j=0,wt=L.length;j<wt;j++){const Pt=L[j],qt=Pt.object,kt=Pt.geometry,ae=Pt.group;let ue=Pt.material;ue.allowOverride===!0&&st!==null&&(ue=st),qt.layers.test(Q.layers)&&Ei(qt,W,Q,kt,ue,ae)}}function Ei(L,W,Q,st,j,wt){L.onBeforeRender(T,W,Q,st,j,wt),L.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),j.onBeforeRender(T,W,Q,st,L,wt),j.transparent===!0&&j.side===is&&j.forceSinglePass===!1?(j.side=Kn,j.needsUpdate=!0,T.renderBufferDirect(Q,W,st,j,L,wt),j.side=Os,j.needsUpdate=!0,T.renderBufferDirect(Q,W,st,j,L,wt),j.side=is):T.renderBufferDirect(Q,W,st,j,L,wt),L.onAfterRender(T,W,Q,st,j,wt)}function hs(L,W,Q){W.isScene!==!0&&(W=Yt);const st=bt.get(L),j=_.state.lights,wt=_.state.shadowsArray,Pt=j.state.version,qt=rt.getParameters(L,j.state,wt,W,Q),kt=rt.getProgramCacheKey(qt);let ae=st.programs;st.environment=L.isMeshStandardMaterial?W.environment:null,st.fog=W.fog,st.envMap=(L.isMeshStandardMaterial?ce:re).get(L.envMap||st.environment),st.envMapRotation=st.environment!==null&&L.envMap===null?W.environmentRotation:L.envMapRotation,ae===void 0&&(L.addEventListener("dispose",mt),ae=new Map,st.programs=ae);let ue=ae.get(kt);if(ue!==void 0){if(st.currentProgram===ue&&st.lightsStateVersion===Pt)return yr(L,qt),ue}else qt.uniforms=rt.getUniforms(L),L.onBeforeCompile(qt,T),ue=rt.acquireProgram(qt,kt),ae.set(kt,ue),st.uniforms=qt.uniforms;const ee=st.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(ee.clippingPlanes=Dt.uniform),yr(L,qt),st.needsLights=pc(L),st.lightsStateVersion=Pt,st.needsLights&&(ee.ambientLightColor.value=j.state.ambient,ee.lightProbe.value=j.state.probe,ee.directionalLights.value=j.state.directional,ee.directionalLightShadows.value=j.state.directionalShadow,ee.spotLights.value=j.state.spot,ee.spotLightShadows.value=j.state.spotShadow,ee.rectAreaLights.value=j.state.rectArea,ee.ltc_1.value=j.state.rectAreaLTC1,ee.ltc_2.value=j.state.rectAreaLTC2,ee.pointLights.value=j.state.point,ee.pointLightShadows.value=j.state.pointShadow,ee.hemisphereLights.value=j.state.hemi,ee.directionalShadowMap.value=j.state.directionalShadowMap,ee.directionalShadowMatrix.value=j.state.directionalShadowMatrix,ee.spotShadowMap.value=j.state.spotShadowMap,ee.spotLightMatrix.value=j.state.spotLightMatrix,ee.spotLightMap.value=j.state.spotLightMap,ee.pointShadowMap.value=j.state.pointShadowMap,ee.pointShadowMatrix.value=j.state.pointShadowMatrix),st.currentProgram=ue,st.uniformsList=null,ue}function Je(L){if(L.uniformsList===null){const W=L.currentProgram.getUniforms();L.uniformsList=Zu.seqWithValue(W.seq,L.uniforms)}return L.uniformsList}function yr(L,W){const Q=bt.get(L);Q.outputColorSpace=W.outputColorSpace,Q.batching=W.batching,Q.batchingColor=W.batchingColor,Q.instancing=W.instancing,Q.instancingColor=W.instancingColor,Q.instancingMorph=W.instancingMorph,Q.skinning=W.skinning,Q.morphTargets=W.morphTargets,Q.morphNormals=W.morphNormals,Q.morphColors=W.morphColors,Q.morphTargetsCount=W.morphTargetsCount,Q.numClippingPlanes=W.numClippingPlanes,Q.numIntersection=W.numClipIntersection,Q.vertexAlphas=W.vertexAlphas,Q.vertexTangents=W.vertexTangents,Q.toneMapping=W.toneMapping}function Ho(L,W,Q,st,j){W.isScene!==!0&&(W=Yt),Ct.resetTextureUnits();const wt=W.fog,Pt=st.isMeshStandardMaterial?W.environment:null,qt=B===null?T.outputColorSpace:B.isXRRenderTarget===!0?B.texture.colorSpace:ma,kt=(st.isMeshStandardMaterial?ce:re).get(st.envMap||Pt),ae=st.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,ue=!!Q.attributes.tangent&&(!!st.normalMap||st.anisotropy>0),ee=!!Q.morphAttributes.position,Me=!!Q.morphAttributes.normal,Be=!!Q.morphAttributes.color;let Ze=rs;st.toneMapped&&(B===null||B.isXRRenderTarget===!0)&&(Ze=T.toneMapping);const Ve=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,ze=Ve!==void 0?Ve.length:0,se=bt.get(st),je=_.state.lights;if(le===!0&&(ut===!0||L!==w)){const yn=L===w&&st.id===C;Dt.setState(st,L,yn)}let Ce=!1;st.version===se.__version?(se.needsLights&&se.lightsStateVersion!==je.state.version||se.outputColorSpace!==qt||j.isBatchedMesh&&se.batching===!1||!j.isBatchedMesh&&se.batching===!0||j.isBatchedMesh&&se.batchingColor===!0&&j.colorTexture===null||j.isBatchedMesh&&se.batchingColor===!1&&j.colorTexture!==null||j.isInstancedMesh&&se.instancing===!1||!j.isInstancedMesh&&se.instancing===!0||j.isSkinnedMesh&&se.skinning===!1||!j.isSkinnedMesh&&se.skinning===!0||j.isInstancedMesh&&se.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&se.instancingColor===!1&&j.instanceColor!==null||j.isInstancedMesh&&se.instancingMorph===!0&&j.morphTexture===null||j.isInstancedMesh&&se.instancingMorph===!1&&j.morphTexture!==null||se.envMap!==kt||st.fog===!0&&se.fog!==wt||se.numClippingPlanes!==void 0&&(se.numClippingPlanes!==Dt.numPlanes||se.numIntersection!==Dt.numIntersection)||se.vertexAlphas!==ae||se.vertexTangents!==ue||se.morphTargets!==ee||se.morphNormals!==Me||se.morphColors!==Be||se.toneMapping!==Ze||se.morphTargetsCount!==ze)&&(Ce=!0):(Ce=!0,se.__version=st.version);let Rn=se.currentProgram;Ce===!0&&(Rn=hs(st,W,j));let fs=!1,En=!1,Hs=!1;const Xe=Rn.getUniforms(),kn=se.uniforms;if(ct.useProgram(Rn.program)&&(fs=!0,En=!0,Hs=!0),st.id!==C&&(C=st.id,En=!0),fs||w!==L){ct.buffers.depth.getReversed()&&L.reversedDepth!==!0&&(L._reversedDepth=!0,L.updateProjectionMatrix()),Xe.setValue(F,"projectionMatrix",L.projectionMatrix),Xe.setValue(F,"viewMatrix",L.matrixWorldInverse);const Dn=Xe.map.cameraPosition;Dn!==void 0&&Dn.setValue(F,zt.setFromMatrixPosition(L.matrixWorld)),dt.logarithmicDepthBuffer&&Xe.setValue(F,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(st.isMeshPhongMaterial||st.isMeshToonMaterial||st.isMeshLambertMaterial||st.isMeshBasicMaterial||st.isMeshStandardMaterial||st.isShaderMaterial)&&Xe.setValue(F,"isOrthographic",L.isOrthographicCamera===!0),w!==L&&(w=L,En=!0,Hs=!0)}if(j.isSkinnedMesh){Xe.setOptional(F,j,"bindMatrix"),Xe.setOptional(F,j,"bindMatrixInverse");const yn=j.skeleton;yn&&(yn.boneTexture===null&&yn.computeBoneTexture(),Xe.setValue(F,"boneTexture",yn.boneTexture,Ct))}j.isBatchedMesh&&(Xe.setOptional(F,j,"batchingTexture"),Xe.setValue(F,"batchingTexture",j._matricesTexture,Ct),Xe.setOptional(F,j,"batchingIdTexture"),Xe.setValue(F,"batchingIdTexture",j._indirectTexture,Ct),Xe.setOptional(F,j,"batchingColorTexture"),j._colorsTexture!==null&&Xe.setValue(F,"batchingColorTexture",j._colorsTexture,Ct));const Wn=Q.morphAttributes;if((Wn.position!==void 0||Wn.normal!==void 0||Wn.color!==void 0)&&Mt.update(j,Q,Rn),(En||se.receiveShadow!==j.receiveShadow)&&(se.receiveShadow=j.receiveShadow,Xe.setValue(F,"receiveShadow",j.receiveShadow)),st.isMeshGouraudMaterial&&st.envMap!==null&&(kn.envMap.value=kt,kn.flipEnvMap.value=kt.isCubeTexture&&kt.isRenderTargetTexture===!1?-1:1),st.isMeshStandardMaterial&&st.envMap===null&&W.environment!==null&&(kn.envMapIntensity.value=W.environmentIntensity),En&&(Xe.setValue(F,"toneMappingExposure",T.toneMappingExposure),se.needsLights&&dc(kn,Hs),wt&&st.fog===!0&&_t.refreshFogUniforms(kn,wt),_t.refreshMaterialUniforms(kn,st,q,et,_.state.transmissionRenderTarget[L.id]),Zu.upload(F,Je(se),kn,Ct)),st.isShaderMaterial&&st.uniformsNeedUpdate===!0&&(Zu.upload(F,Je(se),kn,Ct),st.uniformsNeedUpdate=!1),st.isSpriteMaterial&&Xe.setValue(F,"center",j.center),Xe.setValue(F,"modelViewMatrix",j.modelViewMatrix),Xe.setValue(F,"normalMatrix",j.normalMatrix),Xe.setValue(F,"modelMatrix",j.matrixWorld),st.isShaderMaterial||st.isRawShaderMaterial){const yn=st.uniformsGroups;for(let Dn=0,xr=yn.length;Dn<xr;Dn++){const Qn=yn[Dn];Tt.update(Qn,Rn),Tt.bind(Qn,Rn)}}return Rn}function dc(L,W){L.ambientLightColor.needsUpdate=W,L.lightProbe.needsUpdate=W,L.directionalLights.needsUpdate=W,L.directionalLightShadows.needsUpdate=W,L.pointLights.needsUpdate=W,L.pointLightShadows.needsUpdate=W,L.spotLights.needsUpdate=W,L.spotLightShadows.needsUpdate=W,L.rectAreaLights.needsUpdate=W,L.hemisphereLights.needsUpdate=W}function pc(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return B},this.setRenderTargetTextures=function(L,W,Q){const st=bt.get(L);st.__autoAllocateDepthBuffer=L.resolveDepthBuffer===!1,st.__autoAllocateDepthBuffer===!1&&(st.__useRenderToTexture=!1),bt.get(L.texture).__webglTexture=W,bt.get(L.depthTexture).__webglTexture=st.__autoAllocateDepthBuffer?void 0:Q,st.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(L,W){const Q=bt.get(L);Q.__webglFramebuffer=W,Q.__useDefaultFramebuffer=W===void 0};const Tf=F.createFramebuffer();this.setRenderTarget=function(L,W=0,Q=0){B=L,R=W,P=Q;let st=!0,j=null,wt=!1,Pt=!1;if(L){const kt=bt.get(L);if(kt.__useDefaultFramebuffer!==void 0)ct.bindFramebuffer(F.FRAMEBUFFER,null),st=!1;else if(kt.__webglFramebuffer===void 0)Ct.setupRenderTarget(L);else if(kt.__hasExternalTextures)Ct.rebindTextures(L,bt.get(L.texture).__webglTexture,bt.get(L.depthTexture).__webglTexture);else if(L.depthBuffer){const ee=L.depthTexture;if(kt.__boundDepthTexture!==ee){if(ee!==null&&bt.has(ee)&&(L.width!==ee.image.width||L.height!==ee.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Ct.setupDepthRenderbuffer(L)}}const ae=L.texture;(ae.isData3DTexture||ae.isDataArrayTexture||ae.isCompressedArrayTexture)&&(Pt=!0);const ue=bt.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(ue[W])?j=ue[W][Q]:j=ue[W],wt=!0):L.samples>0&&Ct.useMultisampledRTT(L)===!1?j=bt.get(L).__webglMultisampledFramebuffer:Array.isArray(ue)?j=ue[Q]:j=ue,z.copy(L.viewport),Y.copy(L.scissor),X=L.scissorTest}else z.copy(St).multiplyScalar(q).floor(),Y.copy(It).multiplyScalar(q).floor(),X=Qt;if(Q!==0&&(j=Tf),ct.bindFramebuffer(F.FRAMEBUFFER,j)&&st&&ct.drawBuffers(L,j),ct.viewport(z),ct.scissor(Y),ct.setScissorTest(X),wt){const kt=bt.get(L.texture);F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_CUBE_MAP_POSITIVE_X+W,kt.__webglTexture,Q)}else if(Pt){const kt=W;for(let ae=0;ae<L.textures.length;ae++){const ue=bt.get(L.textures[ae]);F.framebufferTextureLayer(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0+ae,ue.__webglTexture,Q,kt)}}else if(L!==null&&Q!==0){const kt=bt.get(L.texture);F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,kt.__webglTexture,Q)}C=-1},this.readRenderTargetPixels=function(L,W,Q,st,j,wt,Pt,qt=0){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let kt=bt.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Pt!==void 0&&(kt=kt[Pt]),kt){ct.bindFramebuffer(F.FRAMEBUFFER,kt);try{const ae=L.textures[qt],ue=ae.format,ee=ae.type;if(!dt.textureFormatReadable(ue)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!dt.textureTypeReadable(ee)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=L.width-st&&Q>=0&&Q<=L.height-j&&(L.textures.length>1&&F.readBuffer(F.COLOR_ATTACHMENT0+qt),F.readPixels(W,Q,st,j,H.convert(ue),H.convert(ee),wt))}finally{const ae=B!==null?bt.get(B).__webglFramebuffer:null;ct.bindFramebuffer(F.FRAMEBUFFER,ae)}}},this.readRenderTargetPixelsAsync=async function(L,W,Q,st,j,wt,Pt,qt=0){if(!(L&&L.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let kt=bt.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Pt!==void 0&&(kt=kt[Pt]),kt)if(W>=0&&W<=L.width-st&&Q>=0&&Q<=L.height-j){ct.bindFramebuffer(F.FRAMEBUFFER,kt);const ae=L.textures[qt],ue=ae.format,ee=ae.type;if(!dt.textureFormatReadable(ue))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!dt.textureTypeReadable(ee))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Me=F.createBuffer();F.bindBuffer(F.PIXEL_PACK_BUFFER,Me),F.bufferData(F.PIXEL_PACK_BUFFER,wt.byteLength,F.STREAM_READ),L.textures.length>1&&F.readBuffer(F.COLOR_ATTACHMENT0+qt),F.readPixels(W,Q,st,j,H.convert(ue),H.convert(ee),0);const Be=B!==null?bt.get(B).__webglFramebuffer:null;ct.bindFramebuffer(F.FRAMEBUFFER,Be);const Ze=F.fenceSync(F.SYNC_GPU_COMMANDS_COMPLETE,0);return F.flush(),await $E(F,Ze,4),F.bindBuffer(F.PIXEL_PACK_BUFFER,Me),F.getBufferSubData(F.PIXEL_PACK_BUFFER,0,wt),F.deleteBuffer(Me),F.deleteSync(Ze),wt}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(L,W=null,Q=0){const st=Math.pow(2,-Q),j=Math.floor(L.image.width*st),wt=Math.floor(L.image.height*st),Pt=W!==null?W.x:0,qt=W!==null?W.y:0;Ct.setTexture2D(L,0),F.copyTexSubImage2D(F.TEXTURE_2D,Q,0,0,Pt,qt,j,wt),ct.unbindTexture()};const Vo=F.createFramebuffer(),Go=F.createFramebuffer();this.copyTextureToTexture=function(L,W,Q=null,st=null,j=0,wt=null){wt===null&&(j!==0?(Yl("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),wt=j,j=0):wt=0);let Pt,qt,kt,ae,ue,ee,Me,Be,Ze;const Ve=L.isCompressedTexture?L.mipmaps[wt]:L.image;if(Q!==null)Pt=Q.max.x-Q.min.x,qt=Q.max.y-Q.min.y,kt=Q.isBox3?Q.max.z-Q.min.z:1,ae=Q.min.x,ue=Q.min.y,ee=Q.isBox3?Q.min.z:0;else{const Wn=Math.pow(2,-j);Pt=Math.floor(Ve.width*Wn),qt=Math.floor(Ve.height*Wn),L.isDataArrayTexture?kt=Ve.depth:L.isData3DTexture?kt=Math.floor(Ve.depth*Wn):kt=1,ae=0,ue=0,ee=0}st!==null?(Me=st.x,Be=st.y,Ze=st.z):(Me=0,Be=0,Ze=0);const ze=H.convert(W.format),se=H.convert(W.type);let je;W.isData3DTexture?(Ct.setTexture3D(W,0),je=F.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(Ct.setTexture2DArray(W,0),je=F.TEXTURE_2D_ARRAY):(Ct.setTexture2D(W,0),je=F.TEXTURE_2D),F.pixelStorei(F.UNPACK_FLIP_Y_WEBGL,W.flipY),F.pixelStorei(F.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),F.pixelStorei(F.UNPACK_ALIGNMENT,W.unpackAlignment);const Ce=F.getParameter(F.UNPACK_ROW_LENGTH),Rn=F.getParameter(F.UNPACK_IMAGE_HEIGHT),fs=F.getParameter(F.UNPACK_SKIP_PIXELS),En=F.getParameter(F.UNPACK_SKIP_ROWS),Hs=F.getParameter(F.UNPACK_SKIP_IMAGES);F.pixelStorei(F.UNPACK_ROW_LENGTH,Ve.width),F.pixelStorei(F.UNPACK_IMAGE_HEIGHT,Ve.height),F.pixelStorei(F.UNPACK_SKIP_PIXELS,ae),F.pixelStorei(F.UNPACK_SKIP_ROWS,ue),F.pixelStorei(F.UNPACK_SKIP_IMAGES,ee);const Xe=L.isDataArrayTexture||L.isData3DTexture,kn=W.isDataArrayTexture||W.isData3DTexture;if(L.isDepthTexture){const Wn=bt.get(L),yn=bt.get(W),Dn=bt.get(Wn.__renderTarget),xr=bt.get(yn.__renderTarget);ct.bindFramebuffer(F.READ_FRAMEBUFFER,Dn.__webglFramebuffer),ct.bindFramebuffer(F.DRAW_FRAMEBUFFER,xr.__webglFramebuffer);for(let Qn=0;Qn<kt;Qn++)Xe&&(F.framebufferTextureLayer(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,bt.get(L).__webglTexture,j,ee+Qn),F.framebufferTextureLayer(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,bt.get(W).__webglTexture,wt,Ze+Qn)),F.blitFramebuffer(ae,ue,Pt,qt,Me,Be,Pt,qt,F.DEPTH_BUFFER_BIT,F.NEAREST);ct.bindFramebuffer(F.READ_FRAMEBUFFER,null),ct.bindFramebuffer(F.DRAW_FRAMEBUFFER,null)}else if(j!==0||L.isRenderTargetTexture||bt.has(L)){const Wn=bt.get(L),yn=bt.get(W);ct.bindFramebuffer(F.READ_FRAMEBUFFER,Vo),ct.bindFramebuffer(F.DRAW_FRAMEBUFFER,Go);for(let Dn=0;Dn<kt;Dn++)Xe?F.framebufferTextureLayer(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,Wn.__webglTexture,j,ee+Dn):F.framebufferTexture2D(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,Wn.__webglTexture,j),kn?F.framebufferTextureLayer(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,yn.__webglTexture,wt,Ze+Dn):F.framebufferTexture2D(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,yn.__webglTexture,wt),j!==0?F.blitFramebuffer(ae,ue,Pt,qt,Me,Be,Pt,qt,F.COLOR_BUFFER_BIT,F.NEAREST):kn?F.copyTexSubImage3D(je,wt,Me,Be,Ze+Dn,ae,ue,Pt,qt):F.copyTexSubImage2D(je,wt,Me,Be,ae,ue,Pt,qt);ct.bindFramebuffer(F.READ_FRAMEBUFFER,null),ct.bindFramebuffer(F.DRAW_FRAMEBUFFER,null)}else kn?L.isDataTexture||L.isData3DTexture?F.texSubImage3D(je,wt,Me,Be,Ze,Pt,qt,kt,ze,se,Ve.data):W.isCompressedArrayTexture?F.compressedTexSubImage3D(je,wt,Me,Be,Ze,Pt,qt,kt,ze,Ve.data):F.texSubImage3D(je,wt,Me,Be,Ze,Pt,qt,kt,ze,se,Ve):L.isDataTexture?F.texSubImage2D(F.TEXTURE_2D,wt,Me,Be,Pt,qt,ze,se,Ve.data):L.isCompressedTexture?F.compressedTexSubImage2D(F.TEXTURE_2D,wt,Me,Be,Ve.width,Ve.height,ze,Ve.data):F.texSubImage2D(F.TEXTURE_2D,wt,Me,Be,Pt,qt,ze,se,Ve);F.pixelStorei(F.UNPACK_ROW_LENGTH,Ce),F.pixelStorei(F.UNPACK_IMAGE_HEIGHT,Rn),F.pixelStorei(F.UNPACK_SKIP_PIXELS,fs),F.pixelStorei(F.UNPACK_SKIP_ROWS,En),F.pixelStorei(F.UNPACK_SKIP_IMAGES,Hs),wt===0&&W.generateMipmaps&&F.generateMipmap(je),ct.unbindTexture()},this.initRenderTarget=function(L){bt.get(L).__webglFramebuffer===void 0&&Ct.setupRenderTarget(L)},this.initTexture=function(L){L.isCubeTexture?Ct.setTextureCube(L,0):L.isData3DTexture?Ct.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?Ct.setTexture2DArray(L,0):Ct.setTexture2D(L,0),ct.unbindTexture()},this.resetState=function(){R=0,P=0,B=null,ct.reset(),tt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Si}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Re._getDrawingBufferColorSpace(t),e.unpackColorSpace=Re._getUnpackColorSpace()}}const m3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Em,AddEquation:ua,AddOperation:Yy,AdditiveAnimationBlendMode:Lm,AdditiveBlending:em,AgXToneMapping:Qy,AlphaFormat:Dm,AlwaysCompare:dx,AlwaysDepth:$u,AlwaysStencilFunc:am,AmbientLight:oS,AnimationAction:gS,AnimationClip:$l,AnimationLoader:A1,AnimationMixer:eA,AnimationObjectGroup:$1,AnimationUtils:M1,ArcCurve:Nx,ArrayCamera:dS,ArrowHelper:AA,AttachedBindMode:sm,Audio:pS,AudioAnalyser:k1,AudioContext:ag,AudioListener:H1,AudioLoader:B1,AxesHelper:wA,BackSide:Kn,BasicDepthPacking:sx,BasicShadowMap:wy,BatchedMesh:wx,Bone:Vm,BooleanKeyframeTrack:vr,Box2:uA,Box3:Vn,Box3Helper:EA,BoxGeometry:gr,BoxHelper:bA,BufferAttribute:We,BufferGeometry:ye,BufferGeometryLoader:fS,ByteType:Am,Cache:as,Camera:ef,CameraHelper:MA,CanvasTexture:XT,CapsuleGeometry:cf,CatmullRomCurve3:Lx,CineonToneMapping:Ky,CircleGeometry:uf,ClampToEdgeWrapping:Pi,Clock:rg,Color:Gt,ColorKeyframeTrack:ng,ColorManagement:Re,CompressedArrayTexture:kT,CompressedCubeTexture:WT,CompressedTexture:lf,CompressedTextureLoader:w1,ConeGeometry:oc,ConstantAlphaFactor:Wy,ConstantColorFactor:Gy,Controls:RA,CubeCamera:xx,CubeReflectionMapping:Bs,CubeRefractionMapping:pa,CubeTexture:ac,CubeTextureLoader:C1,CubeUVReflectionMapping:No,CubicBezierCurve:qm,CubicBezierCurve3:Px,CubicInterpolant:$x,CullFaceBack:tm,CullFaceFront:Ay,CullFaceFrontBack:Qb,CullFaceNone:Ty,Curve:Ki,CurvePath:Ox,CustomBlending:Cy,CustomToneMapping:Jy,CylinderGeometry:rc,Cylindrical:cA,Data3DTexture:tf,DataArrayTexture:$h,DataTexture:os,DataTextureLoader:R1,DataUtils:pT,DecrementStencilOp:fE,DecrementWrapStencilOp:pE,DefaultLoadingManager:nS,DepthFormat:bo,DepthStencilFormat:Eo,DepthTexture:km,DetachedBindMode:tx,DirectionalLight:rS,DirectionalLightHelper:SA,DiscreteInterpolant:tS,DodecahedronGeometry:hf,DoubleSide:is,DstAlphaFactor:By,DstColorFactor:Fy,DynamicCopyUsage:RE,DynamicDrawUsage:bE,DynamicReadUsage:AE,EdgesGeometry:Ux,EllipseCurve:ff,EqualCompare:cx,EqualDepth:eh,EqualStencilFunc:_E,EquirectangularReflectionMapping:zl,EquirectangularRefractionMapping:Fl,Euler:bi,EventDispatcher:cs,ExternalTexture:Wm,ExtrudeGeometry:df,FileLoader:Fs,Float16BufferAttribute:ST,Float32BufferAttribute:jt,FloatType:ai,Fog:sf,FogExp2:nf,FramebufferTexture:GT,FrontSide:Os,Frustum:Po,FrustumArray:of,GLBufferAttribute:rA,GLSL1:UE,GLSL3:rm,GreaterCompare:ux,GreaterDepth:ih,GreaterEqualCompare:fx,GreaterEqualDepth:nh,GreaterEqualStencilFunc:ME,GreaterStencilFunc:xE,GridHelper:yA,Group:_o,HalfFloatType:Lo,HemisphereLight:iS,HemisphereLightHelper:_A,IcosahedronGeometry:pf,ImageBitmapLoader:O1,ImageLoader:tc,ImageUtils:gx,IncrementStencilOp:hE,IncrementWrapStencilOp:dE,InstancedBufferAttribute:Ro,InstancedBufferGeometry:hS,InstancedInterleavedBuffer:aA,InstancedMesh:Ax,Int16BufferAttribute:yT,Int32BufferAttribute:xT,Int8BufferAttribute:gT,IntType:qh,InterleavedBuffer:af,InterleavedBufferAttribute:fr,Interpolant:uc,InterpolateDiscrete:Gl,InterpolateLinear:Lh,InterpolateSmooth:qu,InterpolationSamplingMode:PE,InterpolationSamplingType:LE,InvertStencilOp:mE,KeepStencilOp:nr,KeyframeTrack:Oi,LOD:Ex,LatheGeometry:mf,Layers:wo,LessCompare:lx,LessDepth:th,LessEqualCompare:Pm,LessEqualDepth:hr,LessEqualStencilFunc:yE,LessStencilFunc:vE,Light:xa,LightProbe:uS,Line:ga,Line3:dA,LineBasicMaterial:Jn,LineCurve:Ym,LineCurve3:Ix,LineDashedMaterial:Kx,LineLoop:Cx,LineSegments:us,LinearFilter:pn,LinearInterpolant:eg,LinearMipMapLinearFilter:nE,LinearMipMapNearestFilter:eE,LinearMipmapLinearFilter:ss,LinearMipmapNearestFilter:Rl,LinearSRGBColorSpace:ma,LinearToneMapping:Zy,LinearTransfer:Wl,Loader:ri,LoaderUtils:hm,LoadingManager:ig,LoopOnce:ex,LoopPingPong:ix,LoopRepeat:nx,MOUSE:tr,Material:Gn,MaterialLoader:Mf,MathUtils:JE,Matrix2:ug,Matrix3:ge,Matrix4:fe,MaxEquation:Ny,Mesh:fn,MeshBasicMaterial:_a,MeshDepthMaterial:Qm,MeshDistanceMaterial:$m,MeshLambertMaterial:Zx,MeshMatcapMaterial:jx,MeshNormalMaterial:Yx,MeshPhongMaterial:Xx,MeshPhysicalMaterial:Wx,MeshStandardMaterial:Jm,MeshToonMaterial:qx,MinEquation:Uy,MirroredRepeatWrapping:Vl,MixOperation:qy,MultiplyBlending:im,MultiplyOperation:ic,NearestFilter:wn,NearestMipMapLinearFilter:tE,NearestMipMapNearestFilter:$b,NearestMipmapLinearFilter:go,NearestMipmapNearestFilter:Tm,NeutralToneMapping:$y,NeverCompare:ox,NeverDepth:Qu,NeverStencilFunc:gE,NoBlending:Ps,NoColorSpace:Ns,NoToneMapping:rs,NormalAnimationBlendMode:Qh,NormalBlending:lr,NotEqualCompare:hx,NotEqualDepth:sh,NotEqualStencilFunc:SE,NumberKeyframeTrack:Jl,Object3D:Le,ObjectLoader:P1,ObjectSpaceNormalMap:rx,OctahedronGeometry:lc,OneFactor:Py,OneMinusConstantAlphaFactor:Xy,OneMinusConstantColorFactor:ky,OneMinusDstAlphaFactor:zy,OneMinusDstColorFactor:Hy,OneMinusSrcAlphaFactor:Ju,OneMinusSrcColorFactor:Oy,OrthographicCamera:da,PCFShadowMap:Wh,PCFSoftShadowMap:Cl,PMREMGenerator:mm,Path:Bh,PerspectiveCamera:ln,Plane:Us,PlaneGeometry:Io,PlaneHelper:TA,PointLight:aS,PointLightHelper:gA,Points:Rx,PointsMaterial:Gm,PolarGridHelper:xA,PolyhedronGeometry:ya,PositionalAudio:G1,PropertyBinding:Ue,PropertyMixer:mS,QuadraticBezierCurve:Zm,QuadraticBezierCurve3:jm,Quaternion:Hn,QuaternionKeyframeTrack:hc,QuaternionLinearInterpolant:eS,RED_GREEN_RGTC2_Format:Uh,RED_RGTC1_Format:Rh,REVISION:kh,RGBADepthPacking:ax,RGBAFormat:Fn,RGBAIntegerFormat:Jh,RGBA_ASTC_10x10_Format:bh,RGBA_ASTC_10x5_Format:xh,RGBA_ASTC_10x6_Format:Sh,RGBA_ASTC_10x8_Format:Mh,RGBA_ASTC_12x10_Format:Eh,RGBA_ASTC_12x12_Format:Th,RGBA_ASTC_4x4_Format:fh,RGBA_ASTC_5x4_Format:dh,RGBA_ASTC_5x5_Format:ph,RGBA_ASTC_6x5_Format:mh,RGBA_ASTC_6x6_Format:gh,RGBA_ASTC_8x5_Format:vh,RGBA_ASTC_8x6_Format:_h,RGBA_ASTC_8x8_Format:yh,RGBA_BPTC_Format:Ah,RGBA_ETC2_EAC_Format:hh,RGBA_PVRTC_2BPPV1_Format:lh,RGBA_PVRTC_4BPPV1_Format:oh,RGBA_S3TC_DXT1_Format:Ul,RGBA_S3TC_DXT3_Format:Nl,RGBA_S3TC_DXT5_Format:Ll,RGBDepthPacking:oE,RGBFormat:Um,RGBIntegerFormat:iE,RGB_BPTC_SIGNED_Format:wh,RGB_BPTC_UNSIGNED_Format:Ch,RGB_ETC1_Format:ch,RGB_ETC2_Format:uh,RGB_PVRTC_2BPPV1_Format:rh,RGB_PVRTC_4BPPV1_Format:ah,RGB_S3TC_DXT1_Format:Dl,RGDepthPacking:lE,RGFormat:Nm,RGIntegerFormat:Kh,RawShaderMaterial:kx,Ray:mr,Raycaster:vS,RectAreaLight:lS,RedFormat:jh,RedIntegerFormat:sc,ReinhardToneMapping:jy,RenderTarget:Om,RenderTarget3D:nA,RepeatWrapping:Hl,ReplaceStencilOp:uE,ReverseSubtractEquation:Dy,RingGeometry:gf,SIGNED_RED_GREEN_RGTC2_Format:Nh,SIGNED_RED_RGTC1_Format:Dh,SRGBColorSpace:zn,SRGBTransfer:He,Scene:Fm,ShaderChunk:Se,ShaderLib:Yi,ShaderMaterial:ji,ShadowMaterial:Gx,Shape:ur,ShapeGeometry:vf,ShapePath:CA,ShapeUtils:Zi,ShortType:wm,Skeleton:rf,SkeletonHelper:mA,SkinnedMesh:Tx,Source:fa,Sphere:Cn,SphereGeometry:cc,Spherical:dm,SphericalHarmonics3:cS,SplineCurve:Km,SpotLight:sS,SpotLightHelper:pA,Sprite:bx,SpriteMaterial:Hm,SrcAlphaFactor:Ku,SrcAlphaSaturateFactor:Vy,SrcColorFactor:Iy,StaticCopyUsage:CE,StaticDrawUsage:Xl,StaticReadUsage:TE,StereoCamera:z1,StreamCopyUsage:DE,StreamDrawUsage:EE,StreamReadUsage:wE,StringKeyframeTrack:_r,SubtractEquation:Ry,SubtractiveBlending:nm,TOUCH:er,TangentSpaceNormalMap:va,TetrahedronGeometry:_f,Texture:rn,TextureLoader:D1,TextureUtils:PA,Timer:oA,TimestampQuery:NE,TorusGeometry:yf,TorusKnotGeometry:xf,Triangle:si,TriangleFanDrawMode:rE,TriangleStripDrawMode:aE,TrianglesDrawMode:sE,TubeGeometry:Sf,UVMapping:Xh,Uint16BufferAttribute:Bm,Uint32BufferAttribute:zm,Uint8BufferAttribute:vT,Uint8ClampedBufferAttribute:_T,Uniform:cg,UniformsGroup:sA,UniformsLib:Ot,UniformsUtils:yx,UnsignedByteType:Ii,UnsignedInt101111Type:Rm,UnsignedInt248Type:Mo,UnsignedInt5999Type:Cm,UnsignedIntType:zs,UnsignedShort4444Type:Yh,UnsignedShort5551Type:Zh,UnsignedShortType:So,VSMShadowMap:qi,Vector2:ft,Vector3:I,Vector4:Ne,VectorKeyframeTrack:Ql,VideoFrameTexture:VT,VideoTexture:Dx,WebGL3DRenderTarget:sT,WebGLArrayRenderTarget:iT,WebGLCoordinateSystem:Si,WebGLCubeRenderTarget:Sx,WebGLRenderTarget:ls,WebGLRenderer:TS,WebGLUtils:ES,WebGPUCoordinateSystem:To,WebXRController:Yu,WireframeGeometry:Vx,WrapAroundEnding:kl,ZeroCurvatureEnding:ar,ZeroFactor:Ly,ZeroSlopeEnding:rr,ZeroStencilOp:cE,createCanvasElement:mx},Symbol.toStringTag,{value:"Module"}));var Fp={exports:{}},Hp={},Vp={exports:{}},Gp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var sy;function g3(){if(sy)return Gp;sy=1;var s=nc();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,o=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),b=x[0].inst,S=x[1];return o(function(){b.value=v,b.getSnapshot=g,h(b)&&S({inst:b})},[m,v,g]),i(function(){return h(b)&&S({inst:b}),m(function(){h(b)&&S({inst:b})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return Gp.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,Gp}var ay;function v3(){return ay||(ay=1,Vp.exports=g3()),Vp.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ry;function _3(){if(ry)return Hp;ry=1;var s=nc(),t=v3();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,o=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Hp.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=o(null);if(x.current===null){var b={hasValue:!1,value:null};x.current=b}else b=x.current;x=c(function(){function _(R){if(!E){if(E=!0,A=R,R=g(R),v!==void 0&&b.hasValue){var P=b.value;if(v(P,R))return T=P}return T=R}if(P=T,n(A,R))return P;var B=g(R);return v!==void 0&&v(P,B)?(A=R,P):(A=R,T=B)}var E=!1,A,T,U=m===void 0?null:m;return[function(){return _(p())},U===null?void 0:function(){return _(U())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){b.hasValue=!0,b.value=S},[S]),h(S),S},Hp}var oy;function y3(){return oy||(oy=1,Fp.exports=_3()),Fp.exports}var x3=y3();const S3=bm(x3),ly=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},M3=(s=>s?ly(s):ly),{useSyncExternalStoreWithSelector:b3}=S3,E3=s=>s;function T3(s,t=E3,e){const n=b3(s.subscribe,s.getState,s.getInitialState,t,e);return jb.useDebugValue(n),n}const cy=(s,t)=>{const e=M3(s),n=(i,o=t)=>T3(e,i,o);return Object.assign(n,e),n},A3=((s,t)=>s?cy(s,t):cy);var kp={exports:{}},Wp={exports:{}},Xp={exports:{}},qp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var uy;function w3(){return uy||(uy=1,(function(s){function t(k,et){var q=k.length;k.push(et);t:for(;0<q;){var lt=q-1>>>1,yt=k[lt];if(0<i(yt,et))k[lt]=et,k[q]=yt,q=lt;else break t}}function e(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var et=k[0],q=k.pop();if(q!==et){k[0]=q;t:for(var lt=0,yt=k.length,St=yt>>>1;lt<St;){var It=2*(lt+1)-1,Qt=k[It],Kt=It+1,le=k[Kt];if(0>i(Qt,q))Kt<yt&&0>i(le,Qt)?(k[lt]=le,k[Kt]=q,lt=Kt):(k[lt]=Qt,k[It]=q,lt=It);else if(Kt<yt&&0>i(le,q))k[lt]=le,k[Kt]=q,lt=Kt;else break t}}return et}function i(k,et){var q=k.sortIndex-et.sortIndex;return q!==0?q:k.id-et.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(k){for(var et=e(f);et!==null;){if(et.callback===null)n(f);else if(et.startTime<=k)n(f),et.sortIndex=et.expirationTime,t(h,et);else break;et=e(f)}}function T(k){if(b=!1,A(k),!x)if(e(h)!==null)x=!0,$();else{var et=e(f);et!==null&&it(T,et.startTime-k)}}var U=!1,R=-1,P=5,B=-1;function C(){return!(s.unstable_now()-B<P)}function w(){if(U){var k=s.unstable_now();B=k;var et=!0;try{t:{x=!1,b&&(b=!1,_(R),R=-1),v=!0;var q=g;try{e:{for(A(k),m=e(h);m!==null&&!(m.expirationTime>k&&C());){var lt=m.callback;if(typeof lt=="function"){m.callback=null,g=m.priorityLevel;var yt=lt(m.expirationTime<=k);if(k=s.unstable_now(),typeof yt=="function"){m.callback=yt,A(k),et=!0;break e}m===e(h)&&n(h),A(k)}else n(h);m=e(h)}if(m!==null)et=!0;else{var St=e(f);St!==null&&it(T,St.startTime-k),et=!1}}break t}finally{m=null,g=q,v=!1}et=void 0}}finally{et?z():U=!1}}}var z;if(typeof E=="function")z=function(){E(w)};else if(typeof MessageChannel<"u"){var Y=new MessageChannel,X=Y.port2;Y.port1.onmessage=w,z=function(){X.postMessage(null)}}else z=function(){S(w,0)};function $(){U||(U=!0,z())}function it(k,et){R=S(function(){k(s.unstable_now())},et)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(k){k.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,$())},s.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<k?Math.floor(1e3/k):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(k){switch(g){case 1:case 2:case 3:var et=3;break;default:et=g}var q=g;g=et;try{return k()}finally{g=q}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(k,et){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var q=g;g=k;try{return et()}finally{g=q}},s.unstable_scheduleCallback=function(k,et,q){var lt=s.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?lt+q:lt):q=lt,k){case 1:var yt=-1;break;case 2:yt=250;break;case 5:yt=1073741823;break;case 4:yt=1e4;break;default:yt=5e3}return yt=q+yt,k={id:p++,callback:et,priorityLevel:k,startTime:q,expirationTime:yt,sortIndex:-1},q>lt?(k.sortIndex=q,t(f,k),e(h)===null&&k===e(f)&&(b?(_(R),R=-1):b=!0,it(T,q-lt))):(k.sortIndex=yt,t(h,k),x||v||(x=!0,$())),k},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(k){var et=g;return function(){var q=g;g=et;try{return k.apply(this,arguments)}finally{g=q}}}})(qp)),qp}var hy;function AS(){return hy||(hy=1,Xp.exports=w3()),Xp.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fy;function C3(){return fy||(fy=1,(function(s){s.exports=function(t){function e(a,r,u,d){return new lM(a,r,u,d)}function n(){}function i(a){var r="https://react.dev/errors/"+a;if(1<arguments.length){r+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)r+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(a){return a===null||typeof a!="object"?null:(a=k0&&a[k0]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===pM?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case Ar:return"Fragment";case Tr:return"Portal";case pd:return"Profiler";case H0:return"StrictMode";case gd:return"Suspense";case vd:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case qs:return(a.displayName||"Context")+".Provider";case V0:return(a._context.displayName||"Context")+".Consumer";case md:var r=a.render;return a=a.displayName,a||(a=r.displayName||r.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case _d:return r=a.displayName||null,r!==null?r:l(a.type)||"Memo";case Ys:r=a._payload,a=a._init;try{return l(a(r))}catch{}}return null}function c(a){if(yd===void 0)try{throw Error()}catch(u){var r=u.stack.trim().match(/\n( *(at )?)/);yd=r&&r[1]||"",W0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+yd+a+W0}function h(a,r){if(!a||xd)return"";xd=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(r){var Ht=function(){throw Error()};if(Object.defineProperty(Ht.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Ht,[])}catch(ve){var Vt=ve}Reflect.construct(a,[],Ht)}else{try{Ht.call()}catch(ve){Vt=ve}a.call(Ht.prototype)}}else{try{throw Error()}catch(ve){Vt=ve}(Ht=a())&&typeof Ht.catch=="function"&&Ht.catch(function(){})}}catch(ve){if(ve&&Vt&&typeof ve.stack=="string")return[ve.stack,Vt.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),N=M[0],G=M[1];if(N&&G){var K=N.split(`
`),ht=G.split(`
`);for(y=d=0;d<K.length&&!K[d].includes("DetermineComponentFrameRoot");)d++;for(;y<ht.length&&!ht[y].includes("DetermineComponentFrameRoot");)y++;if(d===K.length||y===ht.length)for(d=K.length-1,y=ht.length-1;1<=d&&0<=y&&K[d]!==ht[y];)y--;for(;1<=d&&0<=y;d--,y--)if(K[d]!==ht[y]){if(d!==1||y!==1)do if(d--,y--,0>y||K[d]!==ht[y]){var Ut=`
`+K[d].replace(" at new "," at ");return a.displayName&&Ut.includes("<anonymous>")&&(Ut=Ut.replace("<anonymous>",a.displayName)),Ut}while(1<=d&&0<=y);break}}}finally{xd=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var r="";do r+=f(a),a=a.return;while(a);return r}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var r=a,u=a;if(a.alternate)for(;r.return;)r=r.return;else{a=r;do r=a,(r.flags&4098)!==0&&(u=r.return),a=r.return;while(a)}return r.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var r=a.alternate;if(!r){if(r=m(a),r===null)throw Error(i(188));return r!==a?null:a}for(var u=a,d=r;;){var y=u.return;if(y===null)break;var M=y.alternate;if(M===null){if(d=y.return,d!==null){u=d;continue}break}if(y.child===M.child){for(M=y.child;M;){if(M===u)return g(y),a;if(M===d)return g(y),r;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=y,d=M;else{for(var N=!1,G=y.child;G;){if(G===u){N=!0,u=y,d=M;break}if(G===d){N=!0,d=y,u=M;break}G=G.sibling}if(!N){for(G=M.child;G;){if(G===u){N=!0,u=M,d=y;break}if(G===d){N=!0,d=M,u=y;break}G=G.sibling}if(!N)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:r}function x(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(r=x(a),r!==null)return r;a=a.sibling}return null}function b(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(r=b(a),r!==null))return r;a=a.sibling}return null}function S(a){return{current:a}}function _(a){0>Cr||(a.current=Ad[Cr],Ad[Cr]=null,Cr--)}function E(a,r){Cr++,Ad[Cr]=a.current,a.current=r}function A(a){return a>>>=0,a===0?32:31-(Rb(a)/Db|0)|0}function T(a){var r=a&42;if(r!==0)return r;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function U(a,r){var u=a.pendingLanes;if(u===0)return 0;var d=0,y=a.suspendedLanes,M=a.pingedLanes,N=a.warmLanes;a=a.finishedLanes!==0;var G=u&134217727;return G!==0?(u=G&~y,u!==0?d=T(u):(M&=G,M!==0?d=T(M):a||(N=G&~N,N!==0&&(d=T(N))))):(G=u&~y,G!==0?d=T(G):M!==0?d=T(M):a||(N=u&~N,N!==0&&(d=T(N)))),d===0?0:r!==0&&r!==d&&(r&y)===0&&(y=d&-d,N=r&-r,y>=N||y===32&&(N&4194176)!==0)?r:d}function R(a,r){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&r)===0}function P(a,r){switch(a){case 1:case 2:case 4:case 8:return r+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function B(){var a=Dc;return Dc<<=1,(Dc&4194176)===0&&(Dc=128),a}function C(){var a=Uc;return Uc<<=1,(Uc&62914560)===0&&(Uc=4194304),a}function w(a){for(var r=[],u=0;31>u;u++)r.push(a);return r}function z(a,r){a.pendingLanes|=r,r!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function Y(a,r,u,d,y,M){var N=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var G=a.entanglements,K=a.expirationTimes,ht=a.hiddenUpdates;for(u=N&~u;0<u;){var Ut=31-di(u),Ht=1<<Ut;G[Ut]=0,K[Ut]=-1;var Vt=ht[Ut];if(Vt!==null)for(ht[Ut]=null,Ut=0;Ut<Vt.length;Ut++){var ve=Vt[Ut];ve!==null&&(ve.lane&=-536870913)}u&=~Ht}d!==0&&X(a,d,0),M!==0&&y===0&&a.tag!==0&&(a.suspendedLanes|=M&~(N&~r))}function X(a,r,u){a.pendingLanes|=r,a.suspendedLanes&=~r;var d=31-di(r);a.entangledLanes|=r,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function $(a,r){var u=a.entangledLanes|=r;for(a=a.entanglements;u;){var d=31-di(u),y=1<<d;y&r|a[d]&r&&(a[d]|=r),u&=~y}}function it(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function k(a){if(pi&&typeof pi.onCommitFiberRoot=="function")try{pi.onCommitFiberRoot(tl,a,void 0,(a.current.flags&128)===128)}catch{}}function et(a){if(typeof Ib=="function"&&Ob(a),pi&&typeof pi.setStrictMode=="function")try{pi.setStrictMode(tl,a)}catch{}}function q(a,r){return a===r&&(a!==0||1/a===1/r)||a!==a&&r!==r}function lt(a,r){if(typeof a=="object"&&a!==null){var u=gv.get(a);return u!==void 0?u:(r={value:a,source:r,stack:p(r)},gv.set(a,r),r)}return{value:a,source:r,stack:p(r)}}function yt(a,r){Dr[Ur++]=Pc,Dr[Ur++]=Lc,Lc=a,Pc=r}function St(a,r,u){wi[Ci++]=_s,wi[Ci++]=ys,wi[Ci++]=Da,Da=a;var d=_s;a=ys;var y=32-di(d)-1;d&=~(1<<y),u+=1;var M=32-di(r)+y;if(30<M){var N=y-y%5;M=(d&(1<<N)-1).toString(32),d>>=N,y-=N,_s=1<<32-di(r)+y|u<<y|d,ys=M+a}else _s=1<<M|u<<y|d,ys=a}function It(a){a.return!==null&&(yt(a,1),St(a,1,0))}function Qt(a){for(;a===Lc;)Lc=Dr[--Ur],Dr[Ur]=null,Pc=Dr[--Ur],Dr[Ur]=null;for(;a===Da;)Da=wi[--Ci],wi[Ci]=null,ys=wi[--Ci],wi[Ci]=null,_s=wi[--Ci],wi[Ci]=null}function Kt(a,r){E(js,r),E(el,a),E(An,null),a=vM(r),_(An),E(An,a)}function le(){_(An),_(el),_(js)}function ut(a){a.memoizedState!==null&&E(Ic,a);var r=An.current,u=_M(r,a.type);r!==u&&(E(el,a),E(An,u))}function xt(a){el.current===a&&(_(An),_(el)),Ic.current===a&&(_(Ic),vs?Ra._currentValue=wr:Ra._currentValue2=wr)}function zt(a){var r=Error(i(418,""));throw F(lt(r,a)),Rd}function Jt(a,r){if(!Ti)throw Error(i(175));hb(a.stateNode,a.type,a.memoizedProps,r,a)||zt(a)}function Yt(a){for(qn=a.return;qn;)switch(qn.tag){case 3:case 27:Ji=!0;return;case 5:case 13:Ji=!1;return;default:qn=qn.return}}function me(a){if(!Ti||a!==qn)return!1;if(!Pe)return Yt(a),Pe=!0,!1;var r=!1;if(Ln?a.tag!==3&&a.tag!==27&&(a.tag!==5||av(a.type)&&!Rc(a.type,a.memoizedProps))&&(r=!0):a.tag!==3&&(a.tag!==5||av(a.type)&&!Rc(a.type,a.memoizedProps))&&(r=!0),r&&Pn&&zt(a),Yt(a),a.tag===13){if(!Ti)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));Pn=pb(a)}else Pn=qn?iv(a.stateNode):null;return!0}function we(){Ti&&(Pn=qn=null,Pe=!1)}function F(a){Vi===null?Vi=[a]:Vi.push(a)}function vt(){for(var a=Nr,r=Dd=Nr=0;r<a;){var u=Ri[r];Ri[r++]=null;var d=Ri[r];Ri[r++]=null;var y=Ri[r];Ri[r++]=null;var M=Ri[r];if(Ri[r++]=null,d!==null&&y!==null){var N=d.pending;N===null?y.next=y:(y.next=N.next,N.next=y),d.pending=y}M!==0&&Nt(u,y,M)}}function pt(a,r,u,d){Ri[Nr++]=a,Ri[Nr++]=r,Ri[Nr++]=u,Ri[Nr++]=d,Dd|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function dt(a,r,u,d){return pt(a,r,u,d),bt(a)}function ct(a,r){return pt(a,null,null,r),bt(a)}function Nt(a,r,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var y=!1,M=a.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(a=M.stateNode,a===null||a._visibility&1||(y=!0)),a=M,M=M.return;y&&r!==null&&a.tag===3&&(M=a.stateNode,y=31-di(u),M=M.hiddenUpdates,a=M[y],a===null?M[y]=[r]:a.push(r),r.lane=u|536870912)}function bt(a){if(50<ul)throw ul=0,qd=null,Error(i(185));for(var r=a.return;r!==null;)a=r,r=a.return;return a.tag===3?a.stateNode:null}function Ct(a){a!==Lr&&a.next===null&&(Lr===null?Oc=Lr=a:Lr=Lr.next=a),Bc=!0,Ud||(Ud=!0,rt(ce))}function re(a,r){if(!Nd&&Bc){Nd=!0;do for(var u=!1,d=Oc;d!==null;){if(a!==0){var y=d.pendingLanes;if(y===0)var M=0;else{var N=d.suspendedLanes,G=d.pingedLanes;M=(1<<31-di(42|a)+1)-1,M&=y&~(N&~G),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,J(d,M))}else M=De,M=U(d,d===qe?M:0),(M&3)===0||R(d,M)||(u=!0,J(d,M));d=d.next}while(u);Nd=!1}}function ce(){Bc=Ud=!1;var a=0;Pr!==0&&(AM()&&(a=Pr),Pr=0);for(var r=Hi(),u=null,d=Oc;d!==null;){var y=d.next,M=O(d,r);M===0?(d.next=null,u===null?Oc=y:u.next=y,y===null&&(Lr=u)):(u=d,(a!==0||(M&3)!==0)&&(Bc=!0)),d=y}re(a)}function O(a,r){for(var u=a.suspendedLanes,d=a.pingedLanes,y=a.expirationTimes,M=a.pendingLanes&-62914561;0<M;){var N=31-di(M),G=1<<N,K=y[N];K===-1?((G&u)===0||(G&d)!==0)&&(y[N]=P(G,r)):K<=r&&(a.expiredLanes|=G),M&=~G}if(r=qe,u=De,u=U(a,a===r?u:0),d=a.callbackNode,u===0||a===r&&Ye===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&wd(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||R(a,u)){if(r=u&-u,r===a.callbackPriority)return r;switch(d!==null&&wd(d),it(u)){case 2:case 8:u=Lb;break;case 32:u=Cd;break;case 268435456:u=Pb;break;default:u=Cd}return d=D.bind(null,a),u=Nc(u,d),a.callbackPriority=r,a.callbackNode=u,r}return d!==null&&d!==null&&wd(d),a.callbackPriority=2,a.callbackNode=null,2}function D(a,r){var u=a.callbackNode;if(Aa()&&a.callbackNode!==u)return null;var d=De;return d=U(a,a===qe?d:0),d===0?null:(y0(a,d,r),O(a,Hi()),a.callbackNode!=null&&a.callbackNode===u?D.bind(null,a):null)}function J(a,r){if(Aa())return null;y0(a,r,!0)}function rt(a){NM?LM(function(){(ke&6)!==0?Nc(mv,a):a()}):Nc(mv,a)}function _t(){return Pr===0&&(Pr=B()),Pr}function ot(a,r){if(nl===null){var u=nl=[];Ld=0,Ir=_t(),Or={status:"pending",value:void 0,then:function(d){u.push(d)}}}return Ld++,r.then(Zt,Zt),r}function Zt(){if(--Ld===0&&nl!==null){Or!==null&&(Or.status="fulfilled");var a=nl;nl=null,Ir=0,Or=null;for(var r=0;r<a.length;r++)(0,a[r])()}}function Dt(a,r){var u=[],d={status:"pending",value:null,reason:null,then:function(y){u.push(y)}};return a.then(function(){d.status="fulfilled",d.value=r;for(var y=0;y<u.length;y++)(0,u[y])(r)},function(y){for(d.status="rejected",d.reason=y,y=0;y<u.length;y++)(0,u[y])(void 0)}),d}function Wt(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Xt(a,r){a=a.updateQueue,r.updateQueue===a&&(r.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function Mt(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function Lt(a,r,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(ke&2)!==0){var y=d.pending;return y===null?r.next=r:(r.next=y.next,y.next=r),d.pending=r,r=bt(a),Nt(a,null,u),r}return pt(a,d,r,u),bt(a)}function $t(a,r,u){if(r=r.updateQueue,r!==null&&(r=r.shared,(u&4194176)!==0)){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,$(a,u)}}function H(a,r){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var y=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var N={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?y=M=N:M=M.next=N,u=u.next}while(u!==null);M===null?y=M=r:M=M.next=r}else y=M=r;u={baseState:d.baseState,firstBaseUpdate:y,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=r:a.next=r,u.lastBaseUpdate=r}function tt(){if(Pd){var a=Or;if(a!==null)throw a}}function Tt(a,r,u,d){Pd=!1;var y=a.updateQueue;Ks=!1;var M=y.firstBaseUpdate,N=y.lastBaseUpdate,G=y.shared.pending;if(G!==null){y.shared.pending=null;var K=G,ht=K.next;K.next=null,N===null?M=ht:N.next=ht,N=K;var Ut=a.alternate;Ut!==null&&(Ut=Ut.updateQueue,G=Ut.lastBaseUpdate,G!==N&&(G===null?Ut.firstBaseUpdate=ht:G.next=ht,Ut.lastBaseUpdate=K))}if(M!==null){var Ht=y.baseState;N=0,Ut=ht=K=null,G=M;do{var Vt=G.lane&-536870913,ve=Vt!==G.lane;if(ve?(De&Vt)===Vt:(d&Vt)===Vt){Vt!==0&&Vt===Ir&&(Pd=!0),Ut!==null&&(Ut=Ut.next={lane:0,tag:G.tag,payload:G.payload,callback:null,next:null});t:{var Ni=a,hl=G;Vt=r;var Fa=u;switch(hl.tag){case 1:if(Ni=hl.payload,typeof Ni=="function"){Ht=Ni.call(Fa,Ht,Vt);break t}Ht=Ni;break t;case 3:Ni.flags=Ni.flags&-65537|128;case 0:if(Ni=hl.payload,Vt=typeof Ni=="function"?Ni.call(Fa,Ht,Vt):Ni,Vt==null)break t;Ht=dd({},Ht,Vt);break t;case 2:Ks=!0}}Vt=G.callback,Vt!==null&&(a.flags|=64,ve&&(a.flags|=8192),ve=y.callbacks,ve===null?y.callbacks=[Vt]:ve.push(Vt))}else ve={lane:Vt,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ut===null?(ht=Ut=ve,K=Ht):Ut=Ut.next=ve,N|=Vt;if(G=G.next,G===null){if(G=y.shared.pending,G===null)break;ve=G,G=ve.next,ve.next=null,y.lastBaseUpdate=ve,y.shared.pending=null}}while(!0);Ut===null&&(K=Ht),y.baseState=K,y.firstBaseUpdate=ht,y.lastBaseUpdate=Ut,M===null&&(y.shared.lanes=0),$s|=N,a.lanes=N,a.memoizedState=Ht}}function V(a,r){if(typeof a!="function")throw Error(i(191,a));a.call(r)}function gt(a,r){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)V(u[a],r)}function At(a,r){if(mi(a,r))return!0;if(typeof a!="object"||a===null||typeof r!="object"||r===null)return!1;var u=Object.keys(a),d=Object.keys(r);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var y=u[d];if(!Bb.call(r,y)||!mi(a[y],r[y]))return!1}return!0}function Bt(a){return a=a.status,a==="fulfilled"||a==="rejected"}function Et(){}function mt(a,r,u){switch(u=a[u],u===void 0?a.push(r):u!==r&&(r.then(Et,Et),r=u),r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===il?Error(i(483)):a;default:if(typeof r.status=="string")r.then(Et,Et);else{if(a=qe,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=r,a.status="pending",a.then(function(d){if(r.status==="pending"){var y=r;y.status="fulfilled",y.value=d}},function(d){if(r.status==="pending"){var y=r;y.status="rejected",y.reason=d}})}switch(r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===il?Error(i(483)):a}throw Br=r,il}}function Ft(){if(Br===null)throw Error(i(459));var a=Br;return Br=null,a}function te(a){var r=sl;return sl+=1,zr===null&&(zr=[]),mt(zr,a,r)}function Ee(a,r){r=r.props.ref,a.ref=r!==void 0?r:null}function xe(a,r){throw r.$$typeof===hM?Error(i(525)):(a=Object.prototype.toString.call(r),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":a)))}function vn(a){var r=a._init;return r(a._payload)}function _n(a){function r(nt,Z){if(a){var at=nt.deletions;at===null?(nt.deletions=[Z],nt.flags|=16):at.push(Z)}}function u(nt,Z){if(!a)return null;for(;Z!==null;)r(nt,Z),Z=Z.sibling;return null}function d(nt){for(var Z=new Map;nt!==null;)nt.key!==null?Z.set(nt.key,nt):Z.set(nt.index,nt),nt=nt.sibling;return Z}function y(nt,Z){return nt=Xs(nt,Z),nt.index=0,nt.sibling=null,nt}function M(nt,Z,at){return nt.index=at,a?(at=nt.alternate,at!==null?(at=at.index,at<Z?(nt.flags|=33554434,Z):at):(nt.flags|=33554434,Z)):(nt.flags|=1048576,Z)}function N(nt){return a&&nt.alternate===null&&(nt.flags|=33554434),nt}function G(nt,Z,at,Rt){return Z===null||Z.tag!==6?(Z=ud(at,nt.mode,Rt),Z.return=nt,Z):(Z=y(Z,at),Z.return=nt,Z)}function K(nt,Z,at,Rt){var ie=at.type;return ie===Ar?Ut(nt,Z,at.props.children,Rt,at.key):Z!==null&&(Z.elementType===ie||typeof ie=="object"&&ie!==null&&ie.$$typeof===Ys&&vn(ie)===Z.type)?(Z=y(Z,at.props),Ee(Z,at),Z.return=nt,Z):(Z=Ac(at.type,at.key,at.props,null,nt.mode,Rt),Ee(Z,at),Z.return=nt,Z)}function ht(nt,Z,at,Rt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==at.containerInfo||Z.stateNode.implementation!==at.implementation?(Z=hd(at,nt.mode,Rt),Z.return=nt,Z):(Z=y(Z,at.children||[]),Z.return=nt,Z)}function Ut(nt,Z,at,Rt,ie){return Z===null||Z.tag!==7?(Z=wa(at,nt.mode,Rt,ie),Z.return=nt,Z):(Z=y(Z,at),Z.return=nt,Z)}function Ht(nt,Z,at){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=ud(""+Z,nt.mode,at),Z.return=nt,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case wc:return at=Ac(Z.type,Z.key,Z.props,null,nt.mode,at),Ee(at,Z),at.return=nt,at;case Tr:return Z=hd(Z,nt.mode,at),Z.return=nt,Z;case Ys:var Rt=Z._init;return Z=Rt(Z._payload),Ht(nt,Z,at)}if(Cc(Z)||o(Z))return Z=wa(Z,nt.mode,at,null),Z.return=nt,Z;if(typeof Z.then=="function")return Ht(nt,te(Z),at);if(Z.$$typeof===qs)return Ht(nt,xc(nt,Z),at);xe(nt,Z)}return null}function Vt(nt,Z,at,Rt){var ie=Z!==null?Z.key:null;if(typeof at=="string"&&at!==""||typeof at=="number"||typeof at=="bigint")return ie!==null?null:G(nt,Z,""+at,Rt);if(typeof at=="object"&&at!==null){switch(at.$$typeof){case wc:return at.key===ie?K(nt,Z,at,Rt):null;case Tr:return at.key===ie?ht(nt,Z,at,Rt):null;case Ys:return ie=at._init,at=ie(at._payload),Vt(nt,Z,at,Rt)}if(Cc(at)||o(at))return ie!==null?null:Ut(nt,Z,at,Rt,null);if(typeof at.then=="function")return Vt(nt,Z,te(at),Rt);if(at.$$typeof===qs)return Vt(nt,Z,xc(nt,at),Rt);xe(nt,at)}return null}function ve(nt,Z,at,Rt,ie){if(typeof Rt=="string"&&Rt!==""||typeof Rt=="number"||typeof Rt=="bigint")return nt=nt.get(at)||null,G(Z,nt,""+Rt,ie);if(typeof Rt=="object"&&Rt!==null){switch(Rt.$$typeof){case wc:return nt=nt.get(Rt.key===null?at:Rt.key)||null,K(Z,nt,Rt,ie);case Tr:return nt=nt.get(Rt.key===null?at:Rt.key)||null,ht(Z,nt,Rt,ie);case Ys:var Ke=Rt._init;return Rt=Ke(Rt._payload),ve(nt,Z,at,Rt,ie)}if(Cc(Rt)||o(Rt))return nt=nt.get(at)||null,Ut(Z,nt,Rt,ie,null);if(typeof Rt.then=="function")return ve(nt,Z,at,te(Rt),ie);if(Rt.$$typeof===qs)return ve(nt,Z,at,xc(Z,Rt),ie);xe(Z,Rt)}return null}function Ni(nt,Z,at,Rt){for(var ie=null,Ke=null,de=Z,Ie=Z=0,Mn=null;de!==null&&Ie<at.length;Ie++){de.index>Ie?(Mn=de,de=null):Mn=de.sibling;var Oe=Vt(nt,de,at[Ie],Rt);if(Oe===null){de===null&&(de=Mn);break}a&&de&&Oe.alternate===null&&r(nt,de),Z=M(Oe,Z,Ie),Ke===null?ie=Oe:Ke.sibling=Oe,Ke=Oe,de=Mn}if(Ie===at.length)return u(nt,de),Pe&&yt(nt,Ie),ie;if(de===null){for(;Ie<at.length;Ie++)de=Ht(nt,at[Ie],Rt),de!==null&&(Z=M(de,Z,Ie),Ke===null?ie=de:Ke.sibling=de,Ke=de);return Pe&&yt(nt,Ie),ie}for(de=d(de);Ie<at.length;Ie++)Mn=ve(de,nt,Ie,at[Ie],Rt),Mn!==null&&(a&&Mn.alternate!==null&&de.delete(Mn.key===null?Ie:Mn.key),Z=M(Mn,Z,Ie),Ke===null?ie=Mn:Ke.sibling=Mn,Ke=Mn);return a&&de.forEach(function(ea){return r(nt,ea)}),Pe&&yt(nt,Ie),ie}function hl(nt,Z,at,Rt){if(at==null)throw Error(i(151));for(var ie=null,Ke=null,de=Z,Ie=Z=0,Mn=null,Oe=at.next();de!==null&&!Oe.done;Ie++,Oe=at.next()){de.index>Ie?(Mn=de,de=null):Mn=de.sibling;var ea=Vt(nt,de,Oe.value,Rt);if(ea===null){de===null&&(de=Mn);break}a&&de&&ea.alternate===null&&r(nt,de),Z=M(ea,Z,Ie),Ke===null?ie=ea:Ke.sibling=ea,Ke=ea,de=Mn}if(Oe.done)return u(nt,de),Pe&&yt(nt,Ie),ie;if(de===null){for(;!Oe.done;Ie++,Oe=at.next())Oe=Ht(nt,Oe.value,Rt),Oe!==null&&(Z=M(Oe,Z,Ie),Ke===null?ie=Oe:Ke.sibling=Oe,Ke=Oe);return Pe&&yt(nt,Ie),ie}for(de=d(de);!Oe.done;Ie++,Oe=at.next())Oe=ve(de,nt,Ie,Oe.value,Rt),Oe!==null&&(a&&Oe.alternate!==null&&de.delete(Oe.key===null?Ie:Oe.key),Z=M(Oe,Z,Ie),Ke===null?ie=Oe:Ke.sibling=Oe,Ke=Oe);return a&&de.forEach(function(Wb){return r(nt,Wb)}),Pe&&yt(nt,Ie),ie}function Fa(nt,Z,at,Rt){if(typeof at=="object"&&at!==null&&at.type===Ar&&at.key===null&&(at=at.props.children),typeof at=="object"&&at!==null){switch(at.$$typeof){case wc:t:{for(var ie=at.key;Z!==null;){if(Z.key===ie){if(ie=at.type,ie===Ar){if(Z.tag===7){u(nt,Z.sibling),Rt=y(Z,at.props.children),Rt.return=nt,nt=Rt;break t}}else if(Z.elementType===ie||typeof ie=="object"&&ie!==null&&ie.$$typeof===Ys&&vn(ie)===Z.type){u(nt,Z.sibling),Rt=y(Z,at.props),Ee(Rt,at),Rt.return=nt,nt=Rt;break t}u(nt,Z);break}else r(nt,Z);Z=Z.sibling}at.type===Ar?(Rt=wa(at.props.children,nt.mode,Rt,at.key),Rt.return=nt,nt=Rt):(Rt=Ac(at.type,at.key,at.props,null,nt.mode,Rt),Ee(Rt,at),Rt.return=nt,nt=Rt)}return N(nt);case Tr:t:{for(ie=at.key;Z!==null;){if(Z.key===ie)if(Z.tag===4&&Z.stateNode.containerInfo===at.containerInfo&&Z.stateNode.implementation===at.implementation){u(nt,Z.sibling),Rt=y(Z,at.children||[]),Rt.return=nt,nt=Rt;break t}else{u(nt,Z);break}else r(nt,Z);Z=Z.sibling}Rt=hd(at,nt.mode,Rt),Rt.return=nt,nt=Rt}return N(nt);case Ys:return ie=at._init,at=ie(at._payload),Fa(nt,Z,at,Rt)}if(Cc(at))return Ni(nt,Z,at,Rt);if(o(at)){if(ie=o(at),typeof ie!="function")throw Error(i(150));return at=ie.call(at),hl(nt,Z,at,Rt)}if(typeof at.then=="function")return Fa(nt,Z,te(at),Rt);if(at.$$typeof===qs)return Fa(nt,Z,xc(nt,at),Rt);xe(nt,at)}return typeof at=="string"&&at!==""||typeof at=="number"||typeof at=="bigint"?(at=""+at,Z!==null&&Z.tag===6?(u(nt,Z.sibling),Rt=y(Z,at),Rt.return=nt,nt=Rt):(u(nt,Z),Rt=ud(at,nt.mode,Rt),Rt.return=nt,nt=Rt),N(nt)):u(nt,Z)}return function(nt,Z,at,Rt){try{sl=0;var ie=Fa(nt,Z,at,Rt);return zr=null,ie}catch(de){if(de===il)throw de;var Ke=e(29,de,null,nt.mode);return Ke.lanes=Rt,Ke.return=nt,Ke}finally{}}}function zo(a,r){a=bs,E(Fc,a),E(Fr,r),bs=a|r.baseLanes}function Bi(){E(Fc,bs),E(Fr,Fr.current)}function Sa(){bs=Fc.current,_(Fr),_(Fc)}function zi(a){var r=a.alternate;E(dn,dn.current&1),E(Di,a),Qi===null&&(r===null||Fr.current!==null||r.memoizedState!==null)&&(Qi=a)}function Fo(a){if(a.tag===22){if(E(dn,dn.current),E(Di,a),Qi===null){var r=a.alternate;r!==null&&r.memoizedState!==null&&(Qi=a)}}else oi()}function oi(){E(dn,dn.current),E(Di,Di.current)}function Ei(a){_(Di),Qi===a&&(Qi=null),_(dn)}function hs(a){for(var r=a;r!==null;){if(r.tag===13){var u=r.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||bd(u)||Ed(u)))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if((r.flags&128)!==0)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}function Je(){throw Error(i(321))}function yr(a,r){if(r===null)return!1;for(var u=0;u<r.length&&u<a.length;u++)if(!mi(a[u],r[u]))return!1;return!0}function Ho(a,r,u,d,y,M){return Js=M,be=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,pe.H=a===null||a.memoizedState===null?La:Qs,Na=!1,M=u(d,y),Na=!1,Hr&&(M=pc(r,u,d,y)),dc(a),M}function dc(a){pe.H=$i;var r=Ge!==null&&Ge.next!==null;if(Js=0,cn=Ge=be=null,Hc=!1,al=0,Vr=null,r)throw Error(i(300));a===null||xn||(a=a.dependencies,a!==null&&yc(a)&&(xn=!0))}function pc(a,r,u,d){be=a;var y=0;do{if(Hr&&(Vr=null),al=0,Hr=!1,25<=y)throw Error(i(301));if(y+=1,cn=Ge=null,a.updateQueue!=null){var M=a.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}pe.H=Pa,M=r(u,d)}while(Hr);return M}function Tf(){var a=pe.H,r=a.useState()[0];return r=typeof r.then=="function"?st(r):r,a=a.useState()[0],(Ge!==null?Ge.memoizedState:null)!==a&&(be.flags|=1024),r}function Vo(){var a=Vc!==0;return Vc=0,a}function Go(a,r,u){r.updateQueue=a.updateQueue,r.flags&=-2053,a.lanes&=~u}function L(a){if(Hc){for(a=a.memoizedState;a!==null;){var r=a.queue;r!==null&&(r.pending=null),a=a.next}Hc=!1}Js=0,cn=Ge=be=null,Hr=!1,al=Vc=0,Vr=null}function W(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return cn===null?be.memoizedState=cn=a:cn=cn.next=a,cn}function Q(){if(Ge===null){var a=be.alternate;a=a!==null?a.memoizedState:null}else a=Ge.next;var r=cn===null?be.memoizedState:cn.next;if(r!==null)cn=r,Ge=a;else{if(a===null)throw be.alternate===null?Error(i(467)):Error(i(310));Ge=a,a={memoizedState:Ge.memoizedState,baseState:Ge.baseState,baseQueue:Ge.baseQueue,queue:Ge.queue,next:null},cn===null?be.memoizedState=cn=a:cn=cn.next=a}return cn}function st(a){var r=al;return al+=1,Vr===null&&(Vr=[]),a=mt(Vr,a,r),r=be,(cn===null?r.memoizedState:cn.next)===null&&(r=r.alternate,pe.H=r===null||r.memoizedState===null?La:Qs),a}function j(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return st(a);if(a.$$typeof===qs)return Un(a)}throw Error(i(438,String(a)))}function wt(a){var r=null,u=be.updateQueue;if(u!==null&&(r=u.memoCache),r==null){var d=be.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(r={data:d.data.map(function(y){return y.slice()}),index:0})))}if(r==null&&(r={data:[],index:0}),u===null&&(u=Od(),be.updateQueue=u),u.memoCache=r,u=r.data[r.index],u===void 0)for(u=r.data[r.index]=Array(a),d=0;d<a;d++)u[d]=dM;return r.index++,u}function Pt(a,r){return typeof r=="function"?r(a):r}function qt(a){var r=Q();return kt(r,Ge,a)}function kt(a,r,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var y=a.baseQueue,M=d.pending;if(M!==null){if(y!==null){var N=y.next;y.next=M.next,M.next=N}r.baseQueue=y=M,d.pending=null}if(M=a.baseState,y===null)a.memoizedState=M;else{r=y.next;var G=N=null,K=null,ht=r,Ut=!1;do{var Ht=ht.lane&-536870913;if(Ht!==ht.lane?(De&Ht)===Ht:(Js&Ht)===Ht){var Vt=ht.revertLane;if(Vt===0)K!==null&&(K=K.next={lane:0,revertLane:0,action:ht.action,hasEagerState:ht.hasEagerState,eagerState:ht.eagerState,next:null}),Ht===Ir&&(Ut=!0);else if((Js&Vt)===Vt){ht=ht.next,Vt===Ir&&(Ut=!0);continue}else Ht={lane:0,revertLane:ht.revertLane,action:ht.action,hasEagerState:ht.hasEagerState,eagerState:ht.eagerState,next:null},K===null?(G=K=Ht,N=M):K=K.next=Ht,be.lanes|=Vt,$s|=Vt;Ht=ht.action,Na&&u(M,Ht),M=ht.hasEagerState?ht.eagerState:u(M,Ht)}else Vt={lane:Ht,revertLane:ht.revertLane,action:ht.action,hasEagerState:ht.hasEagerState,eagerState:ht.eagerState,next:null},K===null?(G=K=Vt,N=M):K=K.next=Vt,be.lanes|=Ht,$s|=Ht;ht=ht.next}while(ht!==null&&ht!==r);if(K===null?N=M:K.next=G,!mi(M,a.memoizedState)&&(xn=!0,Ut&&(u=Or,u!==null)))throw u;a.memoizedState=M,a.baseState=N,a.baseQueue=K,d.lastRenderedState=M}return y===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function ae(a){var r=Q(),u=r.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,y=u.pending,M=r.memoizedState;if(y!==null){u.pending=null;var N=y=y.next;do M=a(M,N.action),N=N.next;while(N!==y);mi(M,r.memoizedState)||(xn=!0),r.memoizedState=M,r.baseQueue===null&&(r.baseState=M),u.lastRenderedState=M}return[M,d]}function ue(a,r,u){var d=be,y=Q(),M=Pe;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=r();var N=!mi((Ge||y).memoizedState,u);if(N&&(y.memoizedState=u,xn=!0),y=y.queue,Af(Be.bind(null,d,y,a),[a]),y.getSnapshot!==r||N||cn!==null&&cn.memoizedState.tag&1){if(d.flags|=2048,Qn(9,Me.bind(null,d,y,u,r),{destroy:void 0},null),qe===null)throw Error(i(349));M||(Js&60)!==0||ee(d,r,u)}return u}function ee(a,r,u){a.flags|=16384,a={getSnapshot:r,value:u},r=be.updateQueue,r===null?(r=Od(),be.updateQueue=r,r.stores=[a]):(u=r.stores,u===null?r.stores=[a]:u.push(a))}function Me(a,r,u,d){r.value=u,r.getSnapshot=d,Ze(r)&&Ve(a)}function Be(a,r,u){return u(function(){Ze(r)&&Ve(a)})}function Ze(a){var r=a.getSnapshot;a=a.value;try{var u=r();return!mi(a,u)}catch{return!0}}function Ve(a){var r=ct(a,2);r!==null&&Xn(r,a,2)}function ze(a){var r=W();if(typeof a=="function"){var u=a;if(a=u(),Na){et(!0);try{u()}finally{et(!1)}}}return r.memoizedState=r.baseState=a,r.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Pt,lastRenderedState:a},r}function se(a,r,u,d){return a.baseState=u,kt(a,Ge,typeof d=="function"?d:Pt)}function je(a,r,u,d,y){if(vc(a))throw Error(i(485));if(a=r.action,a!==null){var M={payload:y,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(N){M.listeners.push(N)}};pe.T!==null?u(!0):M.isTransition=!1,d(M),u=r.pending,u===null?(M.next=r.pending=M,Ce(r,M)):(M.next=u.next,r.pending=u.next=M)}}function Ce(a,r){var u=r.action,d=r.payload,y=a.state;if(r.isTransition){var M=pe.T,N={};pe.T=N;try{var G=u(y,d),K=pe.S;K!==null&&K(N,G),Rn(a,r,G)}catch(ht){En(a,r,ht)}finally{pe.T=M}}else try{M=u(y,d),Rn(a,r,M)}catch(ht){En(a,r,ht)}}function Rn(a,r,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){fs(a,r,d)},function(d){return En(a,r,d)}):fs(a,r,u)}function fs(a,r,u){r.status="fulfilled",r.value=u,Hs(r),a.state=u,r=a.pending,r!==null&&(u=r.next,u===r?a.pending=null:(u=u.next,r.next=u,Ce(a,u)))}function En(a,r,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do r.status="rejected",r.reason=u,Hs(r),r=r.next;while(r!==d)}a.action=null}function Hs(a){a=a.listeners;for(var r=0;r<a.length;r++)(0,a[r])()}function Xe(a,r){return r}function kn(a,r){if(Pe){var u=qe.formState;if(u!==null){t:{var d=be;if(Pe){if(Pn){var y=sb(Pn,Ji);if(y){Pn=iv(y),d=ab(y);break t}}zt(d)}d=!1}d&&(r=u[0])}}u=W(),u.memoizedState=u.baseState=r,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Xe,lastRenderedState:r},u.queue=d,u=Cg.bind(null,be,d),d.dispatch=u,d=ze(!1);var M=Df.bind(null,be,!1,d.queue);return d=W(),y={state:r,dispatch:null,action:a,pending:null},d.queue=y,u=je.bind(null,be,y,M,u),y.dispatch=u,d.memoizedState=a,[r,u,!1]}function Wn(a){var r=Q();return yn(r,Ge,a)}function yn(a,r,u){r=kt(a,r,Xe)[0],a=qt(Pt)[0],r=typeof r=="object"&&r!==null&&typeof r.then=="function"?st(r):r;var d=Q(),y=d.queue,M=y.dispatch;return u!==d.memoizedState&&(be.flags|=2048,Qn(9,Dn.bind(null,y,u),{destroy:void 0},null)),[r,M,a]}function Dn(a,r){a.action=r}function xr(a){var r=Q(),u=Ge;if(u!==null)return yn(r,u,a);Q(),r=r.memoizedState,u=Q();var d=u.queue.dispatch;return u.memoizedState=a,[r,d,!1]}function Qn(a,r,u,d){return a={tag:a,create:r,inst:u,deps:d,next:null},r=be.updateQueue,r===null&&(r=Od(),be.updateQueue=r),u=r.lastEffect,u===null?r.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,r.lastEffect=a),a}function mg(){return Q().memoizedState}function mc(a,r,u,d){var y=W();be.flags|=a,y.memoizedState=Qn(1|r,u,{destroy:void 0},d===void 0?null:d)}function gc(a,r,u,d){var y=Q();d=d===void 0?null:d;var M=y.memoizedState.inst;Ge!==null&&d!==null&&yr(d,Ge.memoizedState.deps)?y.memoizedState=Qn(r,u,M,d):(be.flags|=a,y.memoizedState=Qn(1|r,u,M,d))}function gg(a,r){mc(8390656,8,a,r)}function Af(a,r){gc(2048,8,a,r)}function vg(a,r){return gc(4,2,a,r)}function _g(a,r){return gc(4,4,a,r)}function yg(a,r){if(typeof r=="function"){a=a();var u=r(a);return function(){typeof u=="function"?u():r(null)}}if(r!=null)return a=a(),r.current=a,function(){r.current=null}}function xg(a,r,u){u=u!=null?u.concat([a]):null,gc(4,4,yg.bind(null,r,a),u)}function wf(){}function Sg(a,r){var u=Q();r=r===void 0?null:r;var d=u.memoizedState;return r!==null&&yr(r,d[1])?d[0]:(u.memoizedState=[a,r],a)}function Mg(a,r){var u=Q();r=r===void 0?null:r;var d=u.memoizedState;if(r!==null&&yr(r,d[1]))return d[0];if(d=a(),Na){et(!0);try{a()}finally{et(!1)}}return u.memoizedState=[d,r],d}function Cf(a,r,u){return u===void 0||(Js&1073741824)!==0?a.memoizedState=r:(a.memoizedState=u,a=_0(),be.lanes|=a,$s|=a,u)}function bg(a,r,u,d){return mi(u,r)?u:Fr.current!==null?(a=Cf(a,u,d),mi(a,r)||(xn=!0),a):(Js&42)===0?(xn=!0,a.memoizedState=u):(a=_0(),be.lanes|=a,$s|=a,r)}function Eg(a,r,u,d,y){var M=Ca();ti(M!==0&&8>M?M:8);var N=pe.T,G={};pe.T=G,Df(a,!1,r,u);try{var K=y(),ht=pe.S;if(ht!==null&&ht(G,K),K!==null&&typeof K=="object"&&typeof K.then=="function"){var Ut=Dt(K,d);ko(a,r,Ut,hi(a))}else ko(a,r,d,hi(a))}catch(Ht){ko(a,r,{then:function(){},status:"rejected",reason:Ht},hi())}finally{ti(M),pe.T=N}}function Tg(a){var r=a.memoizedState;if(r!==null)return r;r={memoizedState:wr,baseState:wr,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Pt,lastRenderedState:wr},next:null};var u={};return r.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Pt,lastRenderedState:u},next:null},a.memoizedState=r,a=a.alternate,a!==null&&(a.memoizedState=r),r}function Rf(){return Un(Ra)}function Ag(){return Q().memoizedState}function wg(){return Q().memoizedState}function XS(a){for(var r=a.return;r!==null;){switch(r.tag){case 24:case 3:var u=hi();a=Mt(u);var d=Lt(r,a,u);d!==null&&(Xn(d,r,u),$t(d,r,u)),r={cache:kf()},a.payload=r;return}r=r.return}}function qS(a,r,u){var d=hi();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},vc(a)?Rg(r,u):(u=dt(a,r,u,d),u!==null&&(Xn(u,a,d),Dg(u,r,d)))}function Cg(a,r,u){var d=hi();ko(a,r,u,d)}function ko(a,r,u,d){var y={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(vc(a))Rg(r,y);else{var M=a.alternate;if(a.lanes===0&&(M===null||M.lanes===0)&&(M=r.lastRenderedReducer,M!==null))try{var N=r.lastRenderedState,G=M(N,u);if(y.hasEagerState=!0,y.eagerState=G,mi(G,N))return pt(a,r,y,0),qe===null&&vt(),!1}catch{}finally{}if(u=dt(a,r,y,d),u!==null)return Xn(u,a,d),Dg(u,r,d),!0}return!1}function Df(a,r,u,d){if(d={lane:2,revertLane:_t(),action:d,hasEagerState:!1,eagerState:null,next:null},vc(a)){if(r)throw Error(i(479))}else r=dt(a,u,d,2),r!==null&&Xn(r,a,2)}function vc(a){var r=a.alternate;return a===be||r!==null&&r===be}function Rg(a,r){Hr=Hc=!0;var u=a.pending;u===null?r.next=r:(r.next=u.next,u.next=r),a.pending=r}function Dg(a,r,u){if((u&4194176)!==0){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,$(a,u)}}function Uf(a,r,u,d){r=a.memoizedState,u=u(d,r),u=u==null?r:dd({},r,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function Ug(a,r,u,d,y,M,N){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,M,N):r.prototype&&r.prototype.isPureReactComponent?!At(u,d)||!At(y,M):!0}function Ng(a,r,u,d){a=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(u,d),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(u,d),r.state!==a&&Bd.enqueueReplaceState(r,r.state,null)}function Ma(a,r){var u=r;if("ref"in r){u={};for(var d in r)d!=="ref"&&(u[d]=r[d])}if(a=a.defaultProps){u===r&&(u=dd({},u));for(var y in a)u[y]===void 0&&(u[y]=a[y])}return u}function _c(a,r){try{var u=a.onUncaughtError;u(r.value,{componentStack:r.stack})}catch(d){setTimeout(function(){throw d})}}function Lg(a,r,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:r.tag===1?r.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Nf(a,r,u){return u=Mt(u),u.tag=3,u.payload={element:null},u.callback=function(){_c(a,r)},u}function Pg(a){return a=Mt(a),a.tag=3,a}function Ig(a,r,u,d){var y=u.type.getDerivedStateFromError;if(typeof y=="function"){var M=d.value;a.payload=function(){return y(M)},a.callback=function(){Lg(r,u,d)}}var N=u.stateNode;N!==null&&typeof N.componentDidCatch=="function"&&(a.callback=function(){Lg(r,u,d),typeof y!="function"&&(ta===null?ta=new Set([this]):ta.add(this));var G=d.stack;this.componentDidCatch(d.value,{componentStack:G!==null?G:""})})}function YS(a,r,u,d,y){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(r=u.alternate,r!==null&&Xo(r,u,y,!0),u=Di.current,u!==null){switch(u.tag){case 13:return Qi===null?rd():u.alternate===null&&sn===0&&(sn=3),u.flags&=-257,u.flags|=65536,u.lanes=y,d===zc?u.flags|=16384:(r=u.updateQueue,r===null?u.updateQueue=new Set([d]):r.add(d),ld(a,d,y)),!1;case 22:return u.flags|=65536,d===zc?u.flags|=16384:(r=u.updateQueue,r===null?(r={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=r):(u=r.retryQueue,u===null?r.retryQueue=new Set([d]):u.add(d)),ld(a,d,y)),!1}throw Error(i(435,u.tag))}return ld(a,d,y),rd(),!1}if(Pe)return r=Di.current,r!==null?((r.flags&65536)===0&&(r.flags|=256),r.flags|=65536,r.lanes=y,d!==Rd&&(a=Error(i(422),{cause:d}),F(lt(a,u)))):(d!==Rd&&(r=Error(i(423),{cause:d}),F(lt(r,u))),a=a.current.alternate,a.flags|=65536,y&=-y,a.lanes|=y,d=lt(d,u),y=Nf(a.stateNode,d,y),H(a,y),sn!==4&&(sn=2)),!1;var M=Error(i(520),{cause:d});if(M=lt(M,u),ol===null?ol=[M]:ol.push(M),sn!==4&&(sn=2),r===null)return!0;d=lt(d,u),u=r;do{switch(u.tag){case 3:return u.flags|=65536,a=y&-y,u.lanes|=a,a=Nf(u.stateNode,d,a),H(u,a),!1;case 1:if(r=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof r.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&(ta===null||!ta.has(M))))return u.flags|=65536,y&=-y,u.lanes|=y,y=Pg(y),Ig(y,a,u,d),H(u,y),!1}u=u.return}while(u!==null);return!1}function Tn(a,r,u,d){r.child=a===null?vv(r,null,u,d):Ua(r,a.child,u,d)}function Og(a,r,u,d,y){u=u.render;var M=r.ref;if("ref"in d){var N={};for(var G in d)G!=="ref"&&(N[G]=d[G])}else N=d;return ba(r),d=Ho(a,r,u,N,M,y),G=Vo(),a!==null&&!xn?(Go(a,r,y),ds(a,r,y)):(Pe&&G&&It(r),r.flags|=1,Tn(a,r,d,y),r.child)}function Bg(a,r,u,d,y){if(a===null){var M=u.type;return typeof M=="function"&&!cd(M)&&M.defaultProps===void 0&&u.compare===null?(r.tag=15,r.type=M,zg(a,r,M,d,y)):(a=Ac(u.type,null,d,r,r.mode,y),a.ref=r.ref,a.return=r,r.child=a)}if(M=a.child,!Hf(a,y)){var N=M.memoizedProps;if(u=u.compare,u=u!==null?u:At,u(N,d)&&a.ref===r.ref)return ds(a,r,y)}return r.flags|=1,a=Xs(M,d),a.ref=r.ref,a.return=r,r.child=a}function zg(a,r,u,d,y){if(a!==null){var M=a.memoizedProps;if(At(M,d)&&a.ref===r.ref)if(xn=!1,r.pendingProps=d=M,Hf(a,y))(a.flags&131072)!==0&&(xn=!0);else return r.lanes=a.lanes,ds(a,r,y)}return Lf(a,r,u,d,y)}function Fg(a,r,u){var d=r.pendingProps,y=d.children,M=(r.stateNode._pendingVisibility&2)!==0,N=a!==null?a.memoizedState:null;if(Wo(a,r),d.mode==="hidden"||M){if((r.flags&128)!==0){if(d=N!==null?N.baseLanes|u:u,a!==null){for(y=r.child=a.child,M=0;y!==null;)M=M|y.lanes|y.childLanes,y=y.sibling;r.childLanes=M&~d}else r.childLanes=0,r.child=null;return Hg(a,r,d,u)}if((u&536870912)!==0)r.memoizedState={baseLanes:0,cachePool:null},a!==null&&Sc(r,N!==null?N.cachePool:null),N!==null?zo(r,N):Bi(),Fo(r);else return r.lanes=r.childLanes=536870912,Hg(a,r,N!==null?N.baseLanes|u:u,u)}else N!==null?(Sc(r,N.cachePool),zo(r,N),oi(),r.memoizedState=null):(a!==null&&Sc(r,null),Bi(),oi());return Tn(a,r,y,u),r.child}function Hg(a,r,u,d){var y=Wf();return y=y===null?null:{parent:vs?en._currentValue:en._currentValue2,pool:y},r.memoizedState={baseLanes:u,cachePool:y},a!==null&&Sc(r,null),Bi(),Fo(r),a!==null&&Xo(a,r,d,!0),null}function Wo(a,r){var u=r.ref;if(u===null)a!==null&&a.ref!==null&&(r.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(r.flags|=2097664)}}function Lf(a,r,u,d,y){return ba(r),u=Ho(a,r,u,d,void 0,y),d=Vo(),a!==null&&!xn?(Go(a,r,y),ds(a,r,y)):(Pe&&d&&It(r),r.flags|=1,Tn(a,r,u,y),r.child)}function Vg(a,r,u,d,y,M){return ba(r),r.updateQueue=null,u=pc(r,d,u,y),dc(a),d=Vo(),a!==null&&!xn?(Go(a,r,M),ds(a,r,M)):(Pe&&d&&It(r),r.flags|=1,Tn(a,r,u,M),r.child)}function Gg(a,r,u,d,y){if(ba(r),r.stateNode===null){var M=Rr,N=u.contextType;typeof N=="object"&&N!==null&&(M=Un(N)),M=new u(d,M),r.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=Bd,r.stateNode=M,M._reactInternals=r,M=r.stateNode,M.props=d,M.state=r.memoizedState,M.refs={},Wt(r),N=u.contextType,M.context=typeof N=="object"&&N!==null?Un(N):Rr,M.state=r.memoizedState,N=u.getDerivedStateFromProps,typeof N=="function"&&(Uf(r,u,N,d),M.state=r.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(N=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),N!==M.state&&Bd.enqueueReplaceState(M,M.state,null),Tt(r,d,M,y),tt(),M.state=r.memoizedState),typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!0}else if(a===null){M=r.stateNode;var G=r.memoizedProps,K=Ma(u,G);M.props=K;var ht=M.context,Ut=u.contextType;N=Rr,typeof Ut=="object"&&Ut!==null&&(N=Un(Ut));var Ht=u.getDerivedStateFromProps;Ut=typeof Ht=="function"||typeof M.getSnapshotBeforeUpdate=="function",G=r.pendingProps!==G,Ut||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(G||ht!==N)&&Ng(r,M,d,N),Ks=!1;var Vt=r.memoizedState;M.state=Vt,Tt(r,d,M,y),tt(),ht=r.memoizedState,G||Vt!==ht||Ks?(typeof Ht=="function"&&(Uf(r,u,Ht,d),ht=r.memoizedState),(K=Ks||Ug(r,u,K,d,Vt,ht,N))?(Ut||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=d,r.memoizedState=ht),M.props=d,M.state=ht,M.context=N,d=K):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!1)}else{M=r.stateNode,Xt(a,r),N=r.memoizedProps,Ut=Ma(u,N),M.props=Ut,Ht=r.pendingProps,Vt=M.context,ht=u.contextType,K=Rr,typeof ht=="object"&&ht!==null&&(K=Un(ht)),G=u.getDerivedStateFromProps,(ht=typeof G=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(N!==Ht||Vt!==K)&&Ng(r,M,d,K),Ks=!1,Vt=r.memoizedState,M.state=Vt,Tt(r,d,M,y),tt();var ve=r.memoizedState;N!==Ht||Vt!==ve||Ks||a!==null&&a.dependencies!==null&&yc(a.dependencies)?(typeof G=="function"&&(Uf(r,u,G,d),ve=r.memoizedState),(Ut=Ks||Ug(r,u,Ut,d,Vt,ve,K)||a!==null&&a.dependencies!==null&&yc(a.dependencies))?(ht||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,ve,K),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,ve,K)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||N===a.memoizedProps&&Vt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===a.memoizedProps&&Vt===a.memoizedState||(r.flags|=1024),r.memoizedProps=d,r.memoizedState=ve),M.props=d,M.state=ve,M.context=K,d=Ut):(typeof M.componentDidUpdate!="function"||N===a.memoizedProps&&Vt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===a.memoizedProps&&Vt===a.memoizedState||(r.flags|=1024),d=!1)}return M=d,Wo(a,r),d=(r.flags&128)!==0,M||d?(M=r.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),r.flags|=1,a!==null&&d?(r.child=Ua(r,a.child,null,y),r.child=Ua(r,null,u,y)):Tn(a,r,u,y),r.memoizedState=M.state,a=r.child):a=ds(a,r,y),a}function kg(a,r,u,d){return we(),r.flags|=256,Tn(a,r,u,d),r.child}function Pf(a){return{baseLanes:a,cachePool:jg()}}function If(a,r,u){return a=a!==null?a.childLanes&~u:0,r&&(a|=Ui),a}function Wg(a,r,u){var d=r.pendingProps,y=!1,M=(r.flags&128)!==0,N;if((N=M)||(N=a!==null&&a.memoizedState===null?!1:(dn.current&2)!==0),N&&(y=!0,r.flags&=-129),N=(r.flags&32)!==0,r.flags&=-33,a===null){if(Pe){if(y?zi(r):oi(),Pe){var G=Pn,K;(K=G)&&(G=ub(G,Ji),G!==null?(r.memoizedState={dehydrated:G,treeContext:Da!==null?{id:_s,overflow:ys}:null,retryLane:536870912},K=e(18,null,null,0),K.stateNode=G,K.return=r,r.child=K,qn=r,Pn=null,K=!0):K=!1),K||zt(r)}if(G=r.memoizedState,G!==null&&(G=G.dehydrated,G!==null))return Ed(G)?r.lanes=16:r.lanes=536870912,null;Ei(r)}return G=d.children,d=d.fallback,y?(oi(),y=r.mode,G=Bf({mode:"hidden",children:G},y),d=wa(d,y,u,null),G.return=r,d.return=r,G.sibling=d,r.child=G,y=r.child,y.memoizedState=Pf(u),y.childLanes=If(a,N,u),r.memoizedState=zd,d):(zi(r),Of(r,G))}if(K=a.memoizedState,K!==null&&(G=K.dehydrated,G!==null)){if(M)r.flags&256?(zi(r),r.flags&=-257,r=zf(a,r,u)):r.memoizedState!==null?(oi(),r.child=a.child,r.flags|=128,r=null):(oi(),y=d.fallback,G=r.mode,d=Bf({mode:"visible",children:d.children},G),y=wa(y,G,u,null),y.flags|=2,d.return=r,y.return=r,d.sibling=y,r.child=d,Ua(r,a.child,null,u),d=r.child,d.memoizedState=Pf(u),d.childLanes=If(a,N,u),r.memoizedState=zd,r=y);else if(zi(r),Ed(G))N=nb(G).digest,d=Error(i(419)),d.stack="",d.digest=N,F({value:d,source:null,stack:null}),r=zf(a,r,u);else if(xn||Xo(a,r,u,!1),N=(u&a.childLanes)!==0,xn||N){if(N=qe,N!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(N.suspendedLanes|u))!==0?0:d,d!==0&&d!==K.retryLane)throw K.retryLane=d,ct(a,d),Xn(N,a,d),yv}bd(G)||rd(),r=zf(a,r,u)}else bd(G)?(r.flags|=128,r.child=a.child,r=aM.bind(null,a),ib(G,r),r=null):(a=K.treeContext,Ti&&(Pn=ob(G),qn=r,Pe=!0,Vi=null,Ji=!1,a!==null&&(wi[Ci++]=_s,wi[Ci++]=ys,wi[Ci++]=Da,_s=a.id,ys=a.overflow,Da=r)),r=Of(r,d.children),r.flags|=4096);return r}return y?(oi(),y=d.fallback,G=r.mode,K=a.child,M=K.sibling,d=Xs(K,{mode:"hidden",children:d.children}),d.subtreeFlags=K.subtreeFlags&31457280,M!==null?y=Xs(M,y):(y=wa(y,G,u,null),y.flags|=2),y.return=r,d.return=r,d.sibling=y,r.child=d,d=y,y=r.child,G=a.child.memoizedState,G===null?G=Pf(u):(K=G.cachePool,K!==null?(M=vs?en._currentValue:en._currentValue2,K=K.parent!==M?{parent:M,pool:M}:K):K=jg(),G={baseLanes:G.baseLanes|u,cachePool:K}),y.memoizedState=G,y.childLanes=If(a,N,u),r.memoizedState=zd,d):(zi(r),u=a.child,a=u.sibling,u=Xs(u,{mode:"visible",children:d.children}),u.return=r,u.sibling=null,a!==null&&(N=r.deletions,N===null?(r.deletions=[a],r.flags|=16):N.push(a)),r.child=u,r.memoizedState=null,u)}function Of(a,r){return r=Bf({mode:"visible",children:r},a.mode),r.return=a,a.child=r}function Bf(a,r){return P0(a,r,0,null)}function zf(a,r,u){return Ua(r,a.child,null,u),a=Of(r,r.pendingProps.children),a.flags|=2,r.memoizedState=null,a}function Xg(a,r,u){a.lanes|=r;var d=a.alternate;d!==null&&(d.lanes|=r),Vf(a.return,r,u)}function Ff(a,r,u,d,y){var M=a.memoizedState;M===null?a.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:y}:(M.isBackwards=r,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=y)}function qg(a,r,u){var d=r.pendingProps,y=d.revealOrder,M=d.tail;if(Tn(a,r,d.children,u),d=dn.current,(d&2)!==0)d=d&1|2,r.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=r.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&Xg(a,u,r);else if(a.tag===19)Xg(a,u,r);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===r)break t;for(;a.sibling===null;){if(a.return===null||a.return===r)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(E(dn,d),y){case"forwards":for(u=r.child,y=null;u!==null;)a=u.alternate,a!==null&&hs(a)===null&&(y=u),u=u.sibling;u=y,u===null?(y=r.child,r.child=null):(y=u.sibling,u.sibling=null),Ff(r,!1,y,u,M);break;case"backwards":for(u=null,y=r.child,r.child=null;y!==null;){if(a=y.alternate,a!==null&&hs(a)===null){r.child=y;break}a=y.sibling,y.sibling=u,u=y,y=a}Ff(r,!0,u,null,M);break;case"together":Ff(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function ds(a,r,u){if(a!==null&&(r.dependencies=a.dependencies),$s|=r.lanes,(u&r.childLanes)===0)if(a!==null){if(Xo(a,r,u,!1),(u&r.childLanes)===0)return null}else return null;if(a!==null&&r.child!==a.child)throw Error(i(153));if(r.child!==null){for(a=r.child,u=Xs(a,a.pendingProps),r.child=u,u.return=r;a.sibling!==null;)a=a.sibling,u=u.sibling=Xs(a,a.pendingProps),u.return=r;u.sibling=null}return r.child}function Hf(a,r){return(a.lanes&r)!==0?!0:(a=a.dependencies,!!(a!==null&&yc(a)))}function ZS(a,r,u){switch(r.tag){case 3:Kt(r,r.stateNode.containerInfo),Vs(r,en,a.memoizedState.cache),we();break;case 27:case 5:ut(r);break;case 4:Kt(r,r.stateNode.containerInfo);break;case 10:Vs(r,r.type,r.memoizedProps.value);break;case 13:var d=r.memoizedState;if(d!==null)return d.dehydrated!==null?(zi(r),r.flags|=128,null):(u&r.child.childLanes)!==0?Wg(a,r,u):(zi(r),a=ds(a,r,u),a!==null?a.sibling:null);zi(r);break;case 19:var y=(a.flags&128)!==0;if(d=(u&r.childLanes)!==0,d||(Xo(a,r,u,!1),d=(u&r.childLanes)!==0),y){if(d)return qg(a,r,u);r.flags|=128}if(y=r.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),E(dn,dn.current),d)break;return null;case 22:case 23:return r.lanes=0,Fg(a,r,u);case 24:Vs(r,en,a.memoizedState.cache)}return ds(a,r,u)}function Yg(a,r,u){if(a!==null)if(a.memoizedProps!==r.pendingProps)xn=!0;else{if(!Hf(a,u)&&(r.flags&128)===0)return xn=!1,ZS(a,r,u);xn=(a.flags&131072)!==0}else xn=!1,Pe&&(r.flags&1048576)!==0&&St(r,Pc,r.index);switch(r.lanes=0,r.tag){case 16:t:{a=r.pendingProps;var d=r.elementType,y=d._init;if(d=y(d._payload),r.type=d,typeof d=="function")cd(d)?(a=Ma(d,a),r.tag=1,r=Gg(null,r,d,a,u)):(r.tag=0,r=Lf(null,r,d,a,u));else{if(d!=null){if(y=d.$$typeof,y===md){r.tag=11,r=Og(null,r,d,a,u);break t}else if(y===_d){r.tag=14,r=Bg(null,r,d,a,u);break t}}throw r=l(d)||d,Error(i(306,r,""))}}return r;case 0:return Lf(a,r,r.type,r.pendingProps,u);case 1:return d=r.type,y=Ma(d,r.pendingProps),Gg(a,r,d,y,u);case 3:t:{if(Kt(r,r.stateNode.containerInfo),a===null)throw Error(i(387));var M=r.pendingProps;y=r.memoizedState,d=y.element,Xt(a,r),Tt(r,M,null,u);var N=r.memoizedState;if(M=N.cache,Vs(r,en,M),M!==y.cache&&Gf(r,[en],u,!0),tt(),M=N.element,Ti&&y.isDehydrated)if(y={element:M,isDehydrated:!1,cache:N.cache},r.updateQueue.baseState=y,r.memoizedState=y,r.flags&256){r=kg(a,r,M,u);break t}else if(M!==d){d=lt(Error(i(424)),r),F(d),r=kg(a,r,M,u);break t}else for(Ti&&(Pn=rb(r.stateNode.containerInfo),qn=r,Pe=!0,Vi=null,Ji=!0),u=vv(r,null,M,u),r.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(we(),M===d){r=ds(a,r,u);break t}Tn(a,r,M,u)}r=r.child}return r;case 26:if(Ai)return Wo(a,r),a===null?(u=ov(r.type,null,r.pendingProps,null))?r.memoizedState=u:Pe||(r.stateNode=Mb(r.type,r.pendingProps,js.current,r)):r.memoizedState=ov(r.type,a.memoizedProps,r.pendingProps,a.memoizedState),null;case 27:if(Ln)return ut(r),a===null&&Ln&&Pe&&(d=r.stateNode=dv(r.type,r.pendingProps,js.current,An.current,!1),qn=r,Ji=!0,Pn=sv(d)),d=r.pendingProps.children,a!==null||Pe?Tn(a,r,d,u):r.child=Ua(r,null,d,u),Wo(a,r),r.child;case 5:return a===null&&Pe&&(yb(r.type,r.pendingProps,An.current),(y=d=Pn)&&(d=lb(d,r.type,r.pendingProps,Ji),d!==null?(r.stateNode=d,qn=r,Pn=sv(d),Ji=!1,y=!0):y=!1),y||zt(r)),ut(r),y=r.type,M=r.pendingProps,N=a!==null?a.memoizedProps:null,d=M.children,Rc(y,M)?d=null:N!==null&&Rc(y,N)&&(r.flags|=32),r.memoizedState!==null&&(y=Ho(a,r,Tf,null,null,u),vs?Ra._currentValue=y:Ra._currentValue2=y),Wo(a,r),Tn(a,r,d,u),r.child;case 6:return a===null&&Pe&&(xb(r.pendingProps,An.current),(a=u=Pn)&&(u=cb(u,r.pendingProps,Ji),u!==null?(r.stateNode=u,qn=r,Pn=null,a=!0):a=!1),a||zt(r)),null;case 13:return Wg(a,r,u);case 4:return Kt(r,r.stateNode.containerInfo),d=r.pendingProps,a===null?r.child=Ua(r,null,d,u):Tn(a,r,d,u),r.child;case 11:return Og(a,r,r.type,r.pendingProps,u);case 7:return Tn(a,r,r.pendingProps,u),r.child;case 8:return Tn(a,r,r.pendingProps.children,u),r.child;case 12:return Tn(a,r,r.pendingProps.children,u),r.child;case 10:return d=r.pendingProps,Vs(r,r.type,d.value),Tn(a,r,d.children,u),r.child;case 9:return y=r.type._context,d=r.pendingProps.children,ba(r),y=Un(y),d=d(y),r.flags|=1,Tn(a,r,d,u),r.child;case 14:return Bg(a,r,r.type,r.pendingProps,u);case 15:return zg(a,r,r.type,r.pendingProps,u);case 19:return qg(a,r,u);case 22:return Fg(a,r,u);case 24:return ba(r),d=Un(en),a===null?(y=Wf(),y===null&&(y=qe,M=kf(),y.pooledCache=M,M.refCount++,M!==null&&(y.pooledCacheLanes|=u),y=M),r.memoizedState={parent:d,cache:y},Wt(r),Vs(r,en,y)):((a.lanes&u)!==0&&(Xt(a,r),Tt(r,null,null,u),tt()),y=a.memoizedState,M=r.memoizedState,y.parent!==d?(y={parent:d,cache:d},r.memoizedState=y,r.lanes===0&&(r.memoizedState=r.updateQueue.baseState=y),Vs(r,en,d)):(d=M.cache,Vs(r,en,d),d!==y.cache&&Gf(r,[en],u,!0))),Tn(a,r,r.pendingProps.children,u),r.child;case 29:throw r.pendingProps}throw Error(i(156,r.tag))}function Vs(a,r,u){vs?(E(Gc,r._currentValue),r._currentValue=u):(E(Gc,r._currentValue2),r._currentValue2=u)}function ps(a){var r=Gc.current;vs?a._currentValue=r:a._currentValue2=r,_(Gc)}function Vf(a,r,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&r)!==r?(a.childLanes|=r,d!==null&&(d.childLanes|=r)):d!==null&&(d.childLanes&r)!==r&&(d.childLanes|=r),a===u)break;a=a.return}}function Gf(a,r,u,d){var y=a.child;for(y!==null&&(y.return=a);y!==null;){var M=y.dependencies;if(M!==null){var N=y.child;M=M.firstContext;t:for(;M!==null;){var G=M;M=y;for(var K=0;K<r.length;K++)if(G.context===r[K]){M.lanes|=u,G=M.alternate,G!==null&&(G.lanes|=u),Vf(M.return,u,a),d||(N=null);break t}M=G.next}}else if(y.tag===18){if(N=y.return,N===null)throw Error(i(341));N.lanes|=u,M=N.alternate,M!==null&&(M.lanes|=u),Vf(N,u,a),N=null}else N=y.child;if(N!==null)N.return=y;else for(N=y;N!==null;){if(N===a){N=null;break}if(y=N.sibling,y!==null){y.return=N.return,N=y;break}N=N.return}y=N}}function Xo(a,r,u,d){a=null;for(var y=r,M=!1;y!==null;){if(!M){if((y.flags&524288)!==0)M=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var N=y.alternate;if(N===null)throw Error(i(387));if(N=N.memoizedProps,N!==null){var G=y.type;mi(y.pendingProps.value,N.value)||(a!==null?a.push(G):a=[G])}}else if(y===Ic.current){if(N=y.alternate,N===null)throw Error(i(387));N.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(a!==null?a.push(Ra):a=[Ra])}y=y.return}a!==null&&Gf(r,a,u,d),r.flags|=262144}function yc(a){for(a=a.firstContext;a!==null;){var r=a.context;if(!mi(vs?r._currentValue:r._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function ba(a){Ia=a,xs=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function Un(a){return Zg(Ia,a)}function xc(a,r){return Ia===null&&ba(a),Zg(a,r)}function Zg(a,r){var u=vs?r._currentValue:r._currentValue2;if(r={context:r,memoizedValue:u,next:null},xs===null){if(a===null)throw Error(i(308));xs=r,a.dependencies={lanes:0,firstContext:r},a.flags|=524288}else xs=xs.next=r;return u}function kf(){return{controller:new Fb,data:new Map,refCount:0}}function qo(a){a.refCount--,a.refCount===0&&Hb(Vb,function(){a.controller.abort()})}function Wf(){var a=Oa.current;return a!==null?a:qe.pooledCache}function Sc(a,r){r===null?E(Oa,Oa.current):E(Oa,r.pool)}function jg(){var a=Wf();return a===null?null:{parent:vs?en._currentValue:en._currentValue2,pool:a}}function li(a){a.flags|=4}function Kg(a,r){if(a!==null&&a.child===r.child)return!1;if((r.flags&16)!==0)return!0;for(a=r.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function Xf(a,r,u,d){if(Nn)for(u=r.child;u!==null;){if(u.tag===5||u.tag===6)Sd(a,u.stateNode);else if(!(u.tag===4||Ln&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===r)break;for(;u.sibling===null;){if(u.return===null||u.return===r)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(Zs)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=ev(M,y.type,y.memoizedProps)),Sd(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=nv(M,y.memoizedProps)),Sd(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),Xf(a,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function Jg(a,r,u,d){if(Zs)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=ev(M,y.type,y.memoizedProps)),$0(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=nv(M,y.memoizedProps)),$0(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),Jg(a,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function Qg(a,r){if(Zs&&Kg(a,r)){a=r.stateNode;var u=a.containerInfo,d=Q0();Jg(d,r,!1,!1),a.pendingChildren=d,li(r),eb(u,d)}}function qf(a,r,u,d){if(Nn)a.memoizedProps!==d&&li(r);else if(Zs){var y=a.stateNode,M=a.memoizedProps;if((a=Kg(a,r))||M!==d){var N=An.current;M=tb(y,u,M,d,!a,null),M===y?r.stateNode=y:(q0(M,u,d,N)&&li(r),r.stateNode=M,a?Xf(M,r,!1,!1):li(r))}else r.stateNode=y}}function Yf(a,r,u){if(CM(r,u)){if(a.flags|=16777216,!j0(r,u))if(b0())a.flags|=8192;else throw Br=zc,Id}else a.flags&=-16777217}function $g(a,r){if(Eb(r)){if(a.flags|=16777216,!fv(r))if(b0())a.flags|=8192;else throw Br=zc,Id}else a.flags&=-16777217}function Mc(a,r){r!==null&&(a.flags|=4),a.flags&16384&&(r=a.tag!==22?C():536870912,a.lanes|=r,Wr|=r)}function Yo(a,r){if(!Pe)switch(a.tailMode){case"hidden":r=a.tail;for(var u=null;r!==null;)r.alternate!==null&&(u=r),r=r.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?r||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function Qe(a){var r=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(r)for(var y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags&31457280,d|=y.flags&31457280,y.return=a,y=y.sibling;else for(y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags,d|=y.flags,y.return=a,y=y.sibling;return a.subtreeFlags|=d,a.childLanes=u,r}function jS(a,r,u){var d=r.pendingProps;switch(Qt(r),r.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Qe(r),null;case 1:return Qe(r),null;case 3:return u=r.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),r.memoizedState.cache!==d&&(r.flags|=2048),ps(en),le(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(me(r)?li(r):a===null||a.memoizedState.isDehydrated&&(r.flags&256)===0||(r.flags|=1024,Vi!==null&&(sd(Vi),Vi=null))),Qg(a,r),Qe(r),null;case 26:if(Ai){u=r.type;var y=r.memoizedState;return a===null?(li(r),y!==null?(Qe(r),$g(r,y)):(Qe(r),Yf(r,u,d))):y?y!==a.memoizedState?(li(r),Qe(r),$g(r,y)):(Qe(r),r.flags&=-16777217):(Nn?a.memoizedProps!==d&&li(r):qf(a,r,u,d),Qe(r),Yf(r,u,d)),null}case 27:if(Ln){if(xt(r),u=js.current,y=r.type,a!==null&&r.stateNode!=null)Nn?a.memoizedProps!==d&&li(r):qf(a,r,y,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Qe(r),null}a=An.current,me(r)?Jt(r,a):(a=dv(y,d,u,a,!0),r.stateNode=a,li(r))}return Qe(r),null}case 5:if(xt(r),u=r.type,a!==null&&r.stateNode!=null)qf(a,r,u,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Qe(r),null}a=An.current,me(r)?Jt(r,a):(y=SM(u,d,js.current,a,r),Xf(y,r,!1,!1),r.stateNode=y,q0(y,u,d,a)&&li(r))}return Qe(r),Yf(r,r.type,r.pendingProps),null;case 6:if(a&&r.stateNode!=null)u=a.memoizedProps,Nn?u!==d&&li(r):Zs&&(u!==d?(r.stateNode=Y0(d,js.current,An.current,r),li(r)):r.stateNode=a.stateNode);else{if(typeof d!="string"&&r.stateNode===null)throw Error(i(166));if(a=js.current,u=An.current,me(r)){if(!Ti)throw Error(i(176));if(a=r.stateNode,u=r.memoizedProps,d=null,y=qn,y!==null)switch(y.tag){case 27:case 5:d=y.memoizedProps}fb(a,u,r,d)||zt(r)}else r.stateNode=Y0(d,a,u,r)}return Qe(r),null;case 13:if(d=r.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(y=me(r),d!==null&&d.dehydrated!==null){if(a===null){if(!y)throw Error(i(318));if(!Ti)throw Error(i(344));if(y=r.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));db(y,r)}else we(),(r.flags&128)===0&&(r.memoizedState=null),r.flags|=4;Qe(r),y=!1}else Vi!==null&&(sd(Vi),Vi=null),y=!0;if(!y)return r.flags&256?(Ei(r),r):(Ei(r),null)}if(Ei(r),(r.flags&128)!==0)return r.lanes=u,r;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=r.child,y=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(y=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==y&&(d.flags|=2048)}return u!==a&&u&&(r.child.flags|=8192),Mc(r,r.updateQueue),Qe(r),null;case 4:return le(),Qg(a,r),a===null&&EM(r.stateNode.containerInfo),Qe(r),null;case 10:return ps(r.type),Qe(r),null;case 19:if(_(dn),y=r.memoizedState,y===null)return Qe(r),null;if(d=(r.flags&128)!==0,M=y.rendering,M===null)if(d)Yo(y,!1);else{if(sn!==0||a!==null&&(a.flags&128)!==0)for(a=r.child;a!==null;){if(M=hs(a),M!==null){for(r.flags|=128,Yo(y,!1),a=M.updateQueue,r.updateQueue=a,Mc(r,a),r.subtreeFlags=0,a=u,u=r.child;u!==null;)L0(u,a),u=u.sibling;return E(dn,dn.current&1|2),r.child}a=a.sibling}y.tail!==null&&Hi()>ll&&(r.flags|=128,d=!0,Yo(y,!1),r.lanes=4194304)}else{if(!d)if(a=hs(M),a!==null){if(r.flags|=128,d=!0,a=a.updateQueue,r.updateQueue=a,Mc(r,a),Yo(y,!0),y.tail===null&&y.tailMode==="hidden"&&!M.alternate&&!Pe)return Qe(r),null}else 2*Hi()-y.renderingStartTime>ll&&u!==536870912&&(r.flags|=128,d=!0,Yo(y,!1),r.lanes=4194304);y.isBackwards?(M.sibling=r.child,r.child=M):(a=y.last,a!==null?a.sibling=M:r.child=M,y.last=M)}return y.tail!==null?(r=y.tail,y.rendering=r,y.tail=r.sibling,y.renderingStartTime=Hi(),r.sibling=null,a=dn.current,E(dn,d?a&1|2:a&1),r):(Qe(r),null);case 22:case 23:return Ei(r),Sa(),d=r.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(r.flags|=8192):d&&(r.flags|=8192),d?(u&536870912)!==0&&(r.flags&128)===0&&(Qe(r),r.subtreeFlags&6&&(r.flags|=8192)):Qe(r),u=r.updateQueue,u!==null&&Mc(r,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(d=r.memoizedState.cachePool.pool),d!==u&&(r.flags|=2048),a!==null&&_(Oa),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),r.memoizedState.cache!==u&&(r.flags|=2048),ps(en),Qe(r),null;case 25:return null}throw Error(i(156,r.tag))}function KS(a,r){switch(Qt(r),r.tag){case 1:return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 3:return ps(en),le(),a=r.flags,(a&65536)!==0&&(a&128)===0?(r.flags=a&-65537|128,r):null;case 26:case 27:case 5:return xt(r),null;case 13:if(Ei(r),a=r.memoizedState,a!==null&&a.dehydrated!==null){if(r.alternate===null)throw Error(i(340));we()}return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 19:return _(dn),null;case 4:return le(),null;case 10:return ps(r.type),null;case 22:case 23:return Ei(r),Sa(),a!==null&&_(Oa),a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 24:return ps(en),null;case 25:return null;default:return null}}function t0(a,r){switch(Qt(r),r.tag){case 3:ps(en),le();break;case 26:case 27:case 5:xt(r);break;case 4:le();break;case 13:Ei(r);break;case 19:_(dn);break;case 10:ps(r.type);break;case 22:case 23:Ei(r),Sa(),a!==null&&_(Oa);break;case 24:ps(en)}}function Zo(a,r){try{var u=r.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var y=d.next;u=y;do{if((u.tag&a)===a){d=void 0;var M=u.create,N=u.inst;d=M(),N.destroy=d}u=u.next}while(u!==y)}}catch(G){Fe(r,r.return,G)}}function Gs(a,r,u){try{var d=r.updateQueue,y=d!==null?d.lastEffect:null;if(y!==null){var M=y.next;d=M;do{if((d.tag&a)===a){var N=d.inst,G=N.destroy;if(G!==void 0){N.destroy=void 0,y=r;var K=u;try{G()}catch(ht){Fe(y,K,ht)}}}d=d.next}while(d!==M)}}catch(ht){Fe(r,r.return,ht)}}function e0(a){var r=a.updateQueue;if(r!==null){var u=a.stateNode;try{gt(r,u)}catch(d){Fe(a,a.return,d)}}}function n0(a,r,u){u.props=Ma(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){Fe(a,r,d)}}function Ea(a,r){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var y=Jo(d);break;default:y=d}typeof u=="function"?a.refCleanup=u(y):u.current=y}}catch(M){Fe(a,r,M)}}function ci(a,r){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(y){Fe(a,r,y)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(y){Fe(a,r,y)}else u.current=null}function i0(a){var r=a.type,u=a.memoizedProps,d=a.stateNode;try{kM(d,r,u,a)}catch(y){Fe(a,a.return,y)}}function s0(a,r,u){try{WM(a.stateNode,a.type,u,r,a)}catch(d){Fe(a,a.return,d)}}function a0(a){return a.tag===5||a.tag===3||(Ai?a.tag===26:!1)||(Ln?a.tag===27:!1)||a.tag===4}function Zf(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||a0(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Ln||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function jf(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?qM(u,a,r):VM(u,a);else if(!(d===4||Ln&&d===27)&&(a=a.child,a!==null))for(jf(a,r,u),a=a.sibling;a!==null;)jf(a,r,u),a=a.sibling}function bc(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?XM(u,a,r):HM(u,a);else if(!(d===4||Ln&&d===27)&&(a=a.child,a!==null))for(bc(a,r,u),a=a.sibling;a!==null;)bc(a,r,u),a=a.sibling}function r0(a,r,u){a=a.containerInfo;try{tv(a,u)}catch(d){Fe(r,r.return,d)}}function JS(a,r){for(yM(a.containerInfo),Sn=r;Sn!==null;)if(a=Sn,r=a.child,(a.subtreeFlags&1028)!==0&&r!==null)r.return=a,Sn=r;else for(;Sn!==null;){a=Sn;var u=a.alternate;switch(r=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&u!==null){r=void 0;var d=a,y=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var N=Ma(d.type,y,d.elementType===d.type);r=M.getSnapshotBeforeUpdate(N,u),M.__reactInternalSnapshotBeforeUpdate=r}catch(G){Fe(d,d.return,G)}}break;case 3:(r&1024)!==0&&Nn&&$M(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=a.sibling,r!==null){r.return=a.return,Sn=r;break}Sn=a.return}return N=Mv,Mv=!1,N}function o0(a,r,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:ms(a,u),d&4&&Zo(5,u);break;case 1:if(ms(a,u),d&4)if(a=u.stateNode,r===null)try{a.componentDidMount()}catch(G){Fe(u,u.return,G)}else{var y=Ma(u.type,r.memoizedProps);r=r.memoizedState;try{a.componentDidUpdate(y,r,a.__reactInternalSnapshotBeforeUpdate)}catch(G){Fe(u,u.return,G)}}d&64&&e0(u),d&512&&Ea(u,u.return);break;case 3:if(ms(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=Jo(u.child.stateNode);break;case 1:a=u.child.stateNode}try{gt(d,a)}catch(G){Fe(u,u.return,G)}}break;case 26:if(Ai){ms(a,u),d&512&&Ea(u,u.return);break}case 27:case 5:ms(a,u),r===null&&d&4&&i0(u),d&512&&Ea(u,u.return);break;case 12:ms(a,u);break;case 13:ms(a,u),d&4&&c0(a,u);break;case 22:if(y=u.memoizedState!==null||Ss,!y){r=r!==null&&r.memoizedState!==null||nn;var M=Ss,N=nn;Ss=y,(nn=r)&&!N?ks(a,u,(u.subtreeFlags&8772)!==0):ms(a,u),Ss=M,nn=N}d&512&&(u.memoizedProps.mode==="manual"?Ea(u,u.return):ci(u,u.return));break;default:ms(a,u)}}function l0(a){var r=a.alternate;r!==null&&(a.alternate=null,l0(r)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(r=a.stateNode,r!==null&&wM(r)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function Fi(a,r,u){for(u=u.child;u!==null;)Kf(a,r,u),u=u.sibling}function Kf(a,r,u){if(pi&&typeof pi.onCommitFiberUnmount=="function")try{pi.onCommitFiberUnmount(tl,u)}catch{}switch(u.tag){case 26:if(Ai){nn||ci(u,r),Fi(a,r,u),u.memoizedState?cv(u.memoizedState):u.stateNode&&hv(u.stateNode);break}case 27:if(Ln){nn||ci(u,r);var d=un,y=gi;un=u.stateNode,Fi(a,r,u),Cb(u.stateNode),un=d,gi=y;break}case 5:nn||ci(u,r);case 6:if(Nn){if(d=un,y=gi,un=null,Fi(a,r,u),un=d,gi=y,un!==null)if(gi)try{ZM(un,u.stateNode)}catch(M){Fe(u,r,M)}else try{YM(un,u.stateNode)}catch(M){Fe(u,r,M)}}else Fi(a,r,u);break;case 18:Nn&&un!==null&&(gi?_b(un,u.stateNode):vb(un,u.stateNode));break;case 4:Nn?(d=un,y=gi,un=u.stateNode.containerInfo,gi=!0,Fi(a,r,u),un=d,gi=y):(Zs&&r0(u.stateNode,u,Q0()),Fi(a,r,u));break;case 0:case 11:case 14:case 15:nn||Gs(2,u,r),nn||Gs(4,u,r),Fi(a,r,u);break;case 1:nn||(ci(u,r),d=u.stateNode,typeof d.componentWillUnmount=="function"&&n0(u,r,d)),Fi(a,r,u);break;case 21:Fi(a,r,u);break;case 22:nn||ci(u,r),nn=(d=nn)||u.memoizedState!==null,Fi(a,r,u),nn=d;break;default:Fi(a,r,u)}}function c0(a,r){if(Ti&&r.memoizedState===null&&(a=r.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{gb(a)}catch(u){Fe(r,r.return,u)}}function QS(a){switch(a.tag){case 13:case 19:var r=a.stateNode;return r===null&&(r=a.stateNode=new Sv),r;case 22:return a=a.stateNode,r=a._retryCache,r===null&&(r=a._retryCache=new Sv),r;default:throw Error(i(435,a.tag))}}function Jf(a,r){var u=QS(a);r.forEach(function(d){var y=rM.bind(null,a,d);u.has(d)||(u.add(d),d.then(y,y))})}function $n(a,r){var u=r.deletions;if(u!==null)for(var d=0;d<u.length;d++){var y=u[d],M=a,N=r;if(Nn){var G=N;t:for(;G!==null;){switch(G.tag){case 27:case 5:un=G.stateNode,gi=!1;break t;case 3:un=G.stateNode.containerInfo,gi=!0;break t;case 4:un=G.stateNode.containerInfo,gi=!0;break t}G=G.return}if(un===null)throw Error(i(160));Kf(M,N,y),un=null,gi=!1}else Kf(M,N,y);M=y.alternate,M!==null&&(M.return=null),y.return=null}if(r.subtreeFlags&13878)for(r=r.child;r!==null;)u0(r,a),r=r.sibling}function u0(a,r){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:$n(r,a),ui(a),d&4&&(Gs(3,a,a.return),Zo(3,a),Gs(5,a,a.return));break;case 1:$n(r,a),ui(a),d&512&&(nn||u===null||ci(u,u.return)),d&64&&Ss&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Ai){var y=Gi;$n(r,a),ui(a),d&512&&(nn||u===null||ci(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,r=a.memoizedState,u===null?r===null?a.stateNode===null?a.stateNode=Sb(y,a.type,a.memoizedProps,a):uv(y,a.type,a.stateNode):a.stateNode=lv(y,r,a.memoizedProps):d!==r?(d===null?u.stateNode!==null&&hv(u.stateNode):cv(d),r===null?uv(y,a.type,a.stateNode):lv(y,r,a.memoizedProps)):r===null&&a.stateNode!==null&&s0(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Ln&&d&4&&a.alternate===null){y=a.stateNode;var M=a.memoizedProps;try{Ab(y),wb(a.type,M,y,a)}catch(Ut){Fe(a,a.return,Ut)}}case 5:if($n(r,a),ui(a),d&512&&(nn||u===null||ci(u,u.return)),Nn){if(a.flags&32){r=a.stateNode;try{J0(r)}catch(Ut){Fe(a,a.return,Ut)}}d&4&&a.stateNode!=null&&(r=a.memoizedProps,s0(a,r,u!==null?u.memoizedProps:r)),d&1024&&(Fd=!0)}break;case 6:if($n(r,a),ui(a),d&4&&Nn){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,r=a.stateNode;try{GM(r,u,d)}catch(Ut){Fe(a,a.return,Ut)}}break;case 3:if(Ai?(bb(),y=Gi,Gi=Td(r.containerInfo),$n(r,a),Gi=y):$n(r,a),ui(a),d&4){if(Nn&&Ti&&u!==null&&u.memoizedState.isDehydrated)try{mb(r.containerInfo)}catch(Ut){Fe(a,a.return,Ut)}if(Zs){d=r.containerInfo,u=r.pendingChildren;try{tv(d,u)}catch(Ut){Fe(a,a.return,Ut)}}}Fd&&(Fd=!1,h0(a));break;case 4:Ai?(u=Gi,Gi=Td(a.stateNode.containerInfo),$n(r,a),ui(a),Gi=u):($n(r,a),ui(a)),d&4&&Zs&&r0(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:$n(r,a),ui(a);break;case 13:$n(r,a),ui(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(kd=Hi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,Jf(a,d)));break;case 22:d&512&&(nn||u===null||ci(u,u.return)),y=a.memoizedState!==null;var N=u!==null&&u.memoizedState!==null,G=Ss,K=nn;if(Ss=G||y,nn=K||N,$n(r,a),nn=K,Ss=G,ui(a),r=a.stateNode,r._current=a,r._visibility&=-3,r._visibility|=r._pendingVisibility&2,d&8192&&(r._visibility=y?r._visibility&-2:r._visibility|1,y&&(r=Ss||nn,u===null||N||r||Sr(a)),Nn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,Nn)for(r=a;;){if(r.tag===5||Ai&&r.tag===26||Ln&&r.tag===27){if(u===null){N=u=r;try{M=N.stateNode,y?jM(M):JM(N.stateNode,N.memoizedProps)}catch(Ut){Fe(N,N.return,Ut)}}}else if(r.tag===6){if(u===null){N=r;try{var ht=N.stateNode;y?KM(ht):QM(ht,N.memoizedProps)}catch(Ut){Fe(N,N.return,Ut)}}}else if((r.tag!==22&&r.tag!==23||r.memoizedState===null||r===a)&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break t;for(;r.sibling===null;){if(r.return===null||r.return===a)break t;u===r&&(u=null),r=r.return}u===r&&(u=null),r.sibling.return=r.return,r=r.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,Jf(a,u))));break;case 19:$n(r,a),ui(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,Jf(a,d)));break;case 21:break;default:$n(r,a),ui(a)}}function ui(a){var r=a.flags;if(r&2){try{if(Nn&&(!Ln||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(a0(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Ln){var y=d.stateNode,M=Zf(a);bc(a,M,y);break}case 5:var N=d.stateNode;d.flags&32&&(J0(N),d.flags&=-33);var G=Zf(a);bc(a,G,N);break;case 3:case 4:var K=d.stateNode.containerInfo,ht=Zf(a);jf(a,ht,K);break;default:throw Error(i(161))}}}catch(Ut){Fe(a,a.return,Ut)}a.flags&=-3}r&4096&&(a.flags&=-4097)}function h0(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var r=a;h0(r),r.tag===5&&r.flags&1024&&UM(r.stateNode),a=a.sibling}}function ms(a,r){if(r.subtreeFlags&8772)for(r=r.child;r!==null;)o0(a,r.alternate,r),r=r.sibling}function Sr(a){for(a=a.child;a!==null;){var r=a;switch(r.tag){case 0:case 11:case 14:case 15:Gs(4,r,r.return),Sr(r);break;case 1:ci(r,r.return);var u=r.stateNode;typeof u.componentWillUnmount=="function"&&n0(r,r.return,u),Sr(r);break;case 26:case 27:case 5:ci(r,r.return),Sr(r);break;case 22:ci(r,r.return),r.memoizedState===null&&Sr(r);break;default:Sr(r)}a=a.sibling}}function ks(a,r,u){for(u=u&&(r.subtreeFlags&8772)!==0,r=r.child;r!==null;){var d=r.alternate,y=a,M=r,N=M.flags;switch(M.tag){case 0:case 11:case 15:ks(y,M,u),Zo(4,M);break;case 1:if(ks(y,M,u),d=M,y=d.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(ht){Fe(d,d.return,ht)}if(d=M,y=d.updateQueue,y!==null){var G=d.stateNode;try{var K=y.shared.hiddenCallbacks;if(K!==null)for(y.shared.hiddenCallbacks=null,y=0;y<K.length;y++)V(K[y],G)}catch(ht){Fe(d,d.return,ht)}}u&&N&64&&e0(M),Ea(M,M.return);break;case 26:case 27:case 5:ks(y,M,u),u&&d===null&&N&4&&i0(M),Ea(M,M.return);break;case 12:ks(y,M,u);break;case 13:ks(y,M,u),u&&N&4&&c0(y,M);break;case 22:M.memoizedState===null&&ks(y,M,u),Ea(M,M.return);break;default:ks(y,M,u)}r=r.sibling}}function Qf(a,r){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(a=r.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&qo(u))}function $f(a,r){a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&qo(a))}function Ws(a,r,u,d){if(r.subtreeFlags&10256)for(r=r.child;r!==null;)f0(a,r,u,d),r=r.sibling}function f0(a,r,u,d){var y=r.flags;switch(r.tag){case 0:case 11:case 15:Ws(a,r,u,d),y&2048&&Zo(9,r);break;case 3:Ws(a,r,u,d),y&2048&&(a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&qo(a)));break;case 12:if(y&2048){Ws(a,r,u,d),a=r.stateNode;try{var M=r.memoizedProps,N=M.id,G=M.onPostCommit;typeof G=="function"&&G(N,r.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(K){Fe(r,r.return,K)}}else Ws(a,r,u,d);break;case 23:break;case 22:M=r.stateNode,r.memoizedState!==null?M._visibility&4?Ws(a,r,u,d):jo(a,r):M._visibility&4?Ws(a,r,u,d):(M._visibility|=4,Mr(a,r,u,d,(r.subtreeFlags&10256)!==0)),y&2048&&Qf(r.alternate,r);break;case 24:Ws(a,r,u,d),y&2048&&$f(r.alternate,r);break;default:Ws(a,r,u,d)}}function Mr(a,r,u,d,y){for(y=y&&(r.subtreeFlags&10256)!==0,r=r.child;r!==null;){var M=a,N=r,G=u,K=d,ht=N.flags;switch(N.tag){case 0:case 11:case 15:Mr(M,N,G,K,y),Zo(8,N);break;case 23:break;case 22:var Ut=N.stateNode;N.memoizedState!==null?Ut._visibility&4?Mr(M,N,G,K,y):jo(M,N):(Ut._visibility|=4,Mr(M,N,G,K,y)),y&&ht&2048&&Qf(N.alternate,N);break;case 24:Mr(M,N,G,K,y),y&&ht&2048&&$f(N.alternate,N);break;default:Mr(M,N,G,K,y)}r=r.sibling}}function jo(a,r){if(r.subtreeFlags&10256)for(r=r.child;r!==null;){var u=a,d=r,y=d.flags;switch(d.tag){case 22:jo(u,d),y&2048&&Qf(d.alternate,d);break;case 24:jo(u,d),y&2048&&$f(d.alternate,d);break;default:jo(u,d)}r=r.sibling}}function Ta(a){if(a.subtreeFlags&Gr)for(a=a.child;a!==null;)d0(a),a=a.sibling}function d0(a){switch(a.tag){case 26:Ta(a),a.flags&Gr&&(a.memoizedState!==null?Tb(Gi,a.memoizedState,a.memoizedProps):K0(a.type,a.memoizedProps));break;case 5:Ta(a),a.flags&Gr&&K0(a.type,a.memoizedProps);break;case 3:case 4:if(Ai){var r=Gi;Gi=Td(a.stateNode.containerInfo),Ta(a),Gi=r}else Ta(a);break;case 22:a.memoizedState===null&&(r=a.alternate,r!==null&&r.memoizedState!==null?(r=Gr,Gr=16777216,Ta(a),Gr=r):Ta(a));break;default:Ta(a)}}function p0(a){var r=a.alternate;if(r!==null&&(a=r.child,a!==null)){r.child=null;do r=a.sibling,a.sibling=null,a=r;while(a!==null)}}function Ko(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];Sn=d,g0(d,a)}p0(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)m0(a),a=a.sibling}function m0(a){switch(a.tag){case 0:case 11:case 15:Ko(a),a.flags&2048&&Gs(9,a,a.return);break;case 3:Ko(a);break;case 12:Ko(a);break;case 22:var r=a.stateNode;a.memoizedState!==null&&r._visibility&4&&(a.return===null||a.return.tag!==13)?(r._visibility&=-5,Ec(a)):Ko(a);break;default:Ko(a)}}function Ec(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];Sn=d,g0(d,a)}p0(a)}for(a=a.child;a!==null;){switch(r=a,r.tag){case 0:case 11:case 15:Gs(8,r,r.return),Ec(r);break;case 22:u=r.stateNode,u._visibility&4&&(u._visibility&=-5,Ec(r));break;default:Ec(r)}a=a.sibling}}function g0(a,r){for(;Sn!==null;){var u=Sn;switch(u.tag){case 0:case 11:case 15:Gs(8,u,r);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:qo(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,Sn=d;else t:for(u=a;Sn!==null;){d=Sn;var y=d.sibling,M=d.return;if(l0(d),d===u){Sn=null;break t}if(y!==null){y.return=M,Sn=y;break t}Sn=M}}}function td(a){var r=Z0(a);if(r!=null){if(typeof r.memoizedProps["data-testname"]!="string")throw Error(i(364));return r}if(a=PM(a),a===null)throw Error(i(362));return a.stateNode.current}function ed(a,r){var u=a.tag;switch(r.$$typeof){case kc:if(a.type===r.value)return!0;break;case Wc:t:{for(r=r.value,a=[a,0],u=0;u<a.length;){var d=a[u++],y=d.tag,M=a[u++],N=r[M];if(y!==5&&y!==26&&y!==27||!$o(d)){for(;N!=null&&ed(d,N);)M++,N=r[M];if(M===r.length){r=!0;break t}else for(d=d.child;d!==null;)a.push(d,M),d=d.sibling}}r=!1}return r;case Xc:if((u===5||u===26||u===27)&&BM(a.stateNode,r.value))return!0;break;case Yc:if((u===5||u===6||u===26||u===27)&&(a=OM(a),a!==null&&0<=a.indexOf(r.value)))return!0;break;case qc:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===r.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function nd(a){switch(a.$$typeof){case kc:return"<"+(l(a.value)||"Unknown")+">";case Wc:return":has("+(nd(a)||"")+")";case Xc:return'[role="'+a.value+'"]';case Yc:return'"'+a.value+'"';case qc:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function v0(a,r){var u=[];a=[a,0];for(var d=0;d<a.length;){var y=a[d++],M=y.tag,N=a[d++],G=r[N];if(M!==5&&M!==26&&M!==27||!$o(y)){for(;G!=null&&ed(y,G);)N++,G=r[N];if(N===r.length)u.push(y);else for(y=y.child;y!==null;)a.push(y,N),y=y.sibling}}return u}function id(a,r){if(!Qo)throw Error(i(363));a=td(a),a=v0(a,r),r=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],y=d.tag;if(y===5||y===26||y===27)$o(d)||r.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return r}function hi(){if((ke&2)!==0&&De!==0)return De&-De;if(pe.T!==null){var a=Ir;return a!==0?a:_t()}return TM()}function _0(){Ui===0&&(Ui=(De&536870912)===0||Pe?B():536870912);var a=Di.current;return a!==null&&(a.flags|=32),Ui}function Xn(a,r,u){(a===qe&&Ye===2||a.cancelPendingCommit!==null)&&(br(a,0),gs(a,De,Ui,!1)),z(a,u),((ke&2)===0||a!==qe)&&(a===qe&&((ke&2)===0&&(Ba|=u),sn===4&&gs(a,De,Ui,!1)),Ct(a))}function y0(a,r,u){if((ke&6)!==0)throw Error(i(327));var d=!u&&(r&60)===0&&(r&a.expiredLanes)===0||R(a,r),y=d?eM(a,r):od(a,r,!0),M=d;do{if(y===0){kr&&!d&&gs(a,r,0,!1);break}else if(y===6)gs(a,r,0,!Ms);else{if(u=a.current.alternate,M&&!$S(u)){y=od(a,r,!1),M=!1;continue}if(y===2){if(M=r,a.errorRecoveryDisabledLanes&M)var N=0;else N=a.pendingLanes&-536870913,N=N!==0?N:N&536870912?536870912:0;if(N!==0){r=N;t:{var G=a;y=ol;var K=Ti&&G.current.memoizedState.isDehydrated;if(K&&(br(G,N).flags|=256),N=od(G,N,!1),N!==2){if(Hd&&!K){G.errorRecoveryDisabledLanes|=M,Ba|=M,y=4;break t}M=ts,ts=y,M!==null&&sd(M)}y=N}if(M=!1,y!==2)continue}}if(y===1){br(a,0),gs(a,r,0,!0);break}t:{switch(d=a,y){case 0:case 1:throw Error(i(345));case 4:if((r&4194176)===r){gs(d,r,Ui,!Ms);break t}break;case 2:ts=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=r,(r&62914560)===r&&(M=kd+300-Hi(),10<M)){if(gs(d,r,Ui,!Ms),U(d,0)!==0)break t;d.timeoutHandle=MM(x0.bind(null,d,u,ts,Zc,Gd,r,Ui,Ba,Wr,Ms,2,-0,0),M);break t}x0(d,u,ts,Zc,Gd,r,Ui,Ba,Wr,Ms,0,-0,0)}}break}while(!0);Ct(a)}function sd(a){ts===null?ts=a:ts.push.apply(ts,a)}function x0(a,r,u,d,y,M,N,G,K,ht,Ut,Ht,Vt){var ve=r.subtreeFlags;if((ve&8192||(ve&16785408)===16785408)&&(RM(),d0(r),r=DM(),r!==null)){a.cancelPendingCommit=r(R0.bind(null,a,u,d,y,N,G,K,1,Ht,Vt)),gs(a,M,N,!ht);return}R0(a,u,d,y,N,G,K,Ut,Ht,Vt)}function $S(a){for(var r=a;;){var u=r.tag;if((u===0||u===11||u===15)&&r.flags&16384&&(u=r.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var y=u[d],M=y.getSnapshot;y=y.value;try{if(!mi(M(),y))return!1}catch{return!1}}if(u=r.child,r.subtreeFlags&16384&&u!==null)u.return=r,r=u;else{if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function gs(a,r,u,d){r&=~Vd,r&=~Ba,a.suspendedLanes|=r,a.pingedLanes&=~r,d&&(a.warmLanes|=r),d=a.expirationTimes;for(var y=r;0<y;){var M=31-di(y),N=1<<M;d[M]=-1,y&=~N}u!==0&&X(a,u,r)}function S0(){return(ke&6)===0?(re(0),!1):!0}function ad(){if(Ae!==null){if(Ye===0)var a=Ae.return;else a=Ae,xs=Ia=null,L(a),zr=null,sl=0,a=Ae;for(;a!==null;)t0(a.alternate,a),a=a.return;Ae=null}}function br(a,r){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==Md&&(a.timeoutHandle=Md,bM(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),ad(),qe=a,Ae=u=Xs(a.current,null),De=r,Ye=0,vi=null,Ms=!1,kr=R(a,r),Hd=!1,Wr=Ui=Vd=Ba=$s=sn=0,ts=ol=null,Gd=!1,(r&8)!==0&&(r|=r&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=r;0<d;){var y=31-di(d),M=1<<y;r|=a[y],d&=~M}return bs=r,vt(),u}function M0(a,r){be=null,pe.H=$i,r===il?(r=Ft(),Ye=3):r===Id?(r=Ft(),Ye=4):Ye=r===yv?8:r!==null&&typeof r=="object"&&typeof r.then=="function"?6:1,vi=r,Ae===null&&(sn=1,_c(a,lt(r,a.current)))}function b0(){var a=Di.current;return a===null?!0:(De&4194176)===De?Qi===null:(De&62914560)===De||(De&536870912)!==0?a===Qi:!1}function E0(){var a=pe.H;return pe.H=$i,a===null?$i:a}function T0(){var a=pe.A;return pe.A=Gb,a}function rd(){sn=4,Ms||(De&4194176)!==De&&Di.current!==null||(kr=!0),($s&134217727)===0&&(Ba&134217727)===0||qe===null||gs(qe,De,Ui,!1)}function od(a,r,u){var d=ke;ke|=2;var y=E0(),M=T0();(qe!==a||De!==r)&&(Zc=null,br(a,r)),r=!1;var N=sn;t:do try{if(Ye!==0&&Ae!==null){var G=Ae,K=vi;switch(Ye){case 8:ad(),N=6;break t;case 3:case 2:case 6:Di.current===null&&(r=!0);var ht=Ye;if(Ye=0,vi=null,Er(a,G,K,ht),u&&kr){N=0;break t}break;default:ht=Ye,Ye=0,vi=null,Er(a,G,K,ht)}}tM(),N=sn;break}catch(Ut){M0(a,Ut)}while(!0);return r&&a.shellSuspendCounter++,xs=Ia=null,ke=d,pe.H=y,pe.A=M,Ae===null&&(qe=null,De=0,vt()),N}function tM(){for(;Ae!==null;)A0(Ae)}function eM(a,r){var u=ke;ke|=2;var d=E0(),y=T0();qe!==a||De!==r?(Zc=null,ll=Hi()+500,br(a,r)):kr=R(a,r);t:do try{if(Ye!==0&&Ae!==null){r=Ae;var M=vi;e:switch(Ye){case 1:Ye=0,vi=null,Er(a,r,M,1);break;case 2:if(Bt(M)){Ye=0,vi=null,w0(r);break}r=function(){Ye===2&&qe===a&&(Ye=7),Ct(a)},M.then(r,r);break t;case 3:Ye=7;break t;case 4:Ye=5;break t;case 7:Bt(M)?(Ye=0,vi=null,w0(r)):(Ye=0,vi=null,Er(a,r,M,7));break;case 5:var N=null;switch(Ae.tag){case 26:N=Ae.memoizedState;case 5:case 27:var G=Ae,K=G.type,ht=G.pendingProps;if(N?fv(N):j0(K,ht)){Ye=0,vi=null;var Ut=G.sibling;if(Ut!==null)Ae=Ut;else{var Ht=G.return;Ht!==null?(Ae=Ht,Tc(Ht)):Ae=null}break e}}Ye=0,vi=null,Er(a,r,M,5);break;case 6:Ye=0,vi=null,Er(a,r,M,6);break;case 8:ad(),sn=6;break t;default:throw Error(i(462))}}nM();break}catch(Vt){M0(a,Vt)}while(!0);return xs=Ia=null,pe.H=d,pe.A=y,ke=u,Ae!==null?0:(qe=null,De=0,vt(),sn)}function nM(){for(;Ae!==null&&!Ub();)A0(Ae)}function A0(a){var r=Yg(a.alternate,a,bs);a.memoizedProps=a.pendingProps,r===null?Tc(a):Ae=r}function w0(a){var r=a,u=r.alternate;switch(r.tag){case 15:case 0:r=Vg(u,r,r.pendingProps,r.type,void 0,De);break;case 11:r=Vg(u,r,r.pendingProps,r.type.render,r.ref,De);break;case 5:L(r);default:t0(u,r),r=Ae=L0(r,bs),r=Yg(u,r,bs)}a.memoizedProps=a.pendingProps,r===null?Tc(a):Ae=r}function Er(a,r,u,d){xs=Ia=null,L(r),zr=null,sl=0;var y=r.return;try{if(YS(a,y,r,u,De)){sn=1,_c(a,lt(u,a.current)),Ae=null;return}}catch(M){if(y!==null)throw Ae=y,M;sn=1,_c(a,lt(u,a.current)),Ae=null;return}r.flags&32768?(Pe||d===1?a=!0:kr||(De&536870912)!==0?a=!1:(Ms=a=!0,(d===2||d===3||d===6)&&(d=Di.current,d!==null&&d.tag===13&&(d.flags|=16384))),C0(r,a)):Tc(r)}function Tc(a){var r=a;do{if((r.flags&32768)!==0){C0(r,Ms);return}a=r.return;var u=jS(r.alternate,r,bs);if(u!==null){Ae=u;return}if(r=r.sibling,r!==null){Ae=r;return}Ae=r=a}while(r!==null);sn===0&&(sn=5)}function C0(a,r){do{var u=KS(a.alternate,a);if(u!==null){u.flags&=32767,Ae=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!r&&(a=a.sibling,a!==null)){Ae=a;return}Ae=a=u}while(a!==null);sn=6,Ae=null}function R0(a,r,u,d,y,M,N,G,K,ht){var Ut=pe.T,Ht=Ca();try{ti(2),pe.T=null,iM(a,r,u,d,Ht,y,M,N,G,K,ht)}finally{pe.T=Ut,ti(Ht)}}function iM(a,r,u,d,y,M,N,G){do Aa();while(za!==null);if((ke&6)!==0)throw Error(i(327));var K=a.finishedWork;if(d=a.finishedLanes,K===null)return null;if(a.finishedWork=null,a.finishedLanes=0,K===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var ht=K.lanes|K.childLanes;if(ht|=Dd,Y(a,d,ht,M,N,G),a===qe&&(Ae=qe=null,De=0),(K.subtreeFlags&10256)===0&&(K.flags&10256)===0||jc||(jc=!0,Wd=ht,Xd=u,oM(Cd,function(){return Aa(),null})),u=(K.flags&15990)!==0,(K.subtreeFlags&15990)!==0||u?(u=pe.T,pe.T=null,M=Ca(),ti(2),N=ke,ke|=4,JS(a,K),u0(K,a),xM(a.containerInfo),a.current=K,o0(a,K.alternate,K),Nb(),ke=N,ti(M),pe.T=u):a.current=K,jc?(jc=!1,za=a,cl=d):D0(a,ht),ht=a.pendingLanes,ht===0&&(ta=null),k(K.stateNode),Ct(a),r!==null)for(y=a.onRecoverableError,K=0;K<r.length;K++)ht=r[K],y(ht.value,{componentStack:ht.stack});return(cl&3)!==0&&Aa(),ht=a.pendingLanes,(d&4194218)!==0&&(ht&42)!==0?a===qd?ul++:(ul=0,qd=a):ul=0,re(0),null}function D0(a,r){(a.pooledCacheLanes&=r)===0&&(r=a.pooledCache,r!=null&&(a.pooledCache=null,qo(r)))}function Aa(){if(za!==null){var a=za,r=Wd;Wd=0;var u=it(cl),d=32>u?32:u;u=pe.T;var y=Ca();try{if(ti(d),pe.T=null,za===null)var M=!1;else{d=Xd,Xd=null;var N=za,G=cl;if(za=null,cl=0,(ke&6)!==0)throw Error(i(331));var K=ke;if(ke|=4,m0(N.current),f0(N,N.current,G,d),ke=K,re(0,!1),pi&&typeof pi.onPostCommitFiberRoot=="function")try{pi.onPostCommitFiberRoot(tl,N)}catch{}M=!0}return M}finally{ti(y),pe.T=u,D0(a,r)}}return!1}function U0(a,r,u){r=lt(u,r),r=Nf(a.stateNode,r,2),a=Lt(a,r,2),a!==null&&(z(a,2),Ct(a))}function Fe(a,r,u){if(a.tag===3)U0(a,a,u);else for(;r!==null;){if(r.tag===3){U0(r,a,u);break}else if(r.tag===1){var d=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(ta===null||!ta.has(d))){a=lt(u,a),u=Pg(2),d=Lt(r,u,2),d!==null&&(Ig(u,d,r,a),z(d,2),Ct(d));break}}r=r.return}}function ld(a,r,u){var d=a.pingCache;if(d===null){d=a.pingCache=new kb;var y=new Set;d.set(r,y)}else y=d.get(r),y===void 0&&(y=new Set,d.set(r,y));y.has(u)||(Hd=!0,y.add(u),a=sM.bind(null,a,r,u),r.then(a,a))}function sM(a,r,u){var d=a.pingCache;d!==null&&d.delete(r),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,qe===a&&(De&u)===u&&(sn===4||sn===3&&(De&62914560)===De&&300>Hi()-kd?(ke&2)===0&&br(a,0):Vd|=u,Wr===De&&(Wr=0)),Ct(a)}function N0(a,r){r===0&&(r=C()),a=ct(a,r),a!==null&&(z(a,r),Ct(a))}function aM(a){var r=a.memoizedState,u=0;r!==null&&(u=r.retryLane),N0(a,u)}function rM(a,r){var u=0;switch(a.tag){case 13:var d=a.stateNode,y=a.memoizedState;y!==null&&(u=y.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(r),N0(a,u)}function oM(a,r){return Nc(a,r)}function lM(a,r,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function cd(a){return a=a.prototype,!(!a||!a.isReactComponent)}function Xs(a,r){var u=a.alternate;return u===null?(u=e(a.tag,r,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=r,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,r=a.dependencies,u.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function L0(a,r){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=r,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,r=u.dependencies,a.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),a}function Ac(a,r,u,d,y,M){var N=0;if(d=a,typeof a=="function")cd(a)&&(N=1);else if(typeof a=="string")N=Ai&&Ln?rv(a,u,An.current)?26:pv(a)?27:5:Ai?rv(a,u,An.current)?26:5:Ln&&pv(a)?27:5;else t:switch(a){case Ar:return wa(u.children,y,M,r);case H0:N=8,y|=24;break;case pd:return a=e(12,u,r,y|2),a.elementType=pd,a.lanes=M,a;case gd:return a=e(13,u,r,y),a.elementType=gd,a.lanes=M,a;case vd:return a=e(19,u,r,y),a.elementType=vd,a.lanes=M,a;case G0:return P0(u,y,M,r);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case fM:case qs:N=10;break t;case V0:N=9;break t;case md:N=11;break t;case _d:N=14;break t;case Ys:N=16,d=null;break t}N=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return r=e(N,u,r,y),r.elementType=a,r.type=d,r.lanes=M,r}function wa(a,r,u,d){return a=e(7,a,d,r),a.lanes=u,a}function P0(a,r,u,d){a=e(22,a,d,r),a.elementType=G0,a.lanes=u;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var N=ct(M,2);N!==null&&(y._pendingVisibility|=2,Xn(N,M,2))}},attach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var N=ct(M,2);N!==null&&(y._pendingVisibility&=-3,Xn(N,M,2))}}};return a.stateNode=y,a}function ud(a,r,u){return a=e(6,a,null,r),a.lanes=u,a}function hd(a,r,u){return r=e(4,a.children!==null?a.children:[],a.key,r),r.lanes=u,r.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},r}function cM(a,r,u,d,y,M,N,G){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Md,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=d,this.onUncaughtError=y,this.onCaughtError=M,this.onRecoverableError=N,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=G,this.incompleteTransitions=new Map}function I0(a,r,u,d,y,M,N,G,K,ht,Ut,Ht){return a=new cM(a,r,u,N,G,K,ht,Ht),r=1,M===!0&&(r|=24),M=e(3,null,null,r),a.current=M,M.stateNode=a,r=kf(),r.refCount++,a.pooledCache=r,r.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:r},Wt(M),a}function O0(a){return a?(a=Rr,a):Rr}function B0(a){var r=a._reactInternals;if(r===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(r),a=a!==null?x(a):null,a===null?null:Jo(a.stateNode)}function z0(a,r,u,d,y,M){y=O0(y),d.context===null?d.context=y:d.pendingContext=y,d=Mt(r),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=Lt(a,d,r),u!==null&&(Xn(u,a,r),$t(u,a,r))}function F0(a,r){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<r?u:r}}function fd(a,r){F0(a,r),(a=a.alternate)&&F0(a,r)}var Te={},uM=nc(),fi=AS(),dd=Object.assign,hM=Symbol.for("react.element"),wc=Symbol.for("react.transitional.element"),Tr=Symbol.for("react.portal"),Ar=Symbol.for("react.fragment"),H0=Symbol.for("react.strict_mode"),pd=Symbol.for("react.profiler"),fM=Symbol.for("react.provider"),V0=Symbol.for("react.consumer"),qs=Symbol.for("react.context"),md=Symbol.for("react.forward_ref"),gd=Symbol.for("react.suspense"),vd=Symbol.for("react.suspense_list"),_d=Symbol.for("react.memo"),Ys=Symbol.for("react.lazy"),G0=Symbol.for("react.offscreen"),dM=Symbol.for("react.memo_cache_sentinel"),k0=Symbol.iterator,pM=Symbol.for("react.client.reference"),pe=uM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,yd,W0,xd=!1,Cc=Array.isArray,mM=t.rendererVersion,gM=t.rendererPackageName,X0=t.extraDevToolsConfig,Jo=t.getPublicInstance,vM=t.getRootHostContext,_M=t.getChildHostContext,yM=t.prepareForCommit,xM=t.resetAfterCommit,SM=t.createInstance,Sd=t.appendInitialChild,q0=t.finalizeInitialChildren,Rc=t.shouldSetTextContent,Y0=t.createTextInstance,MM=t.scheduleTimeout,bM=t.cancelTimeout,Md=t.noTimeout,vs=t.isPrimaryRenderer;t.warnsIfNotActing;var Nn=t.supportsMutation,Zs=t.supportsPersistence,Ti=t.supportsHydration,Z0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var EM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var ti=t.setCurrentUpdatePriority,Ca=t.getCurrentUpdatePriority,TM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var AM=t.shouldAttemptEagerTransition,wM=t.detachDeletedInstance;t.requestPostPaintCallback;var CM=t.maySuspendCommit,j0=t.preloadInstance,RM=t.startSuspendingCommit,K0=t.suspendInstance,DM=t.waitForCommitToBeReady,wr=t.NotPendingTransition,Ra=t.HostTransitionContext,UM=t.resetFormInstance;t.bindToConsole;var NM=t.supportsMicrotasks,LM=t.scheduleMicrotask,Qo=t.supportsTestSelectors,PM=t.findFiberRoot,IM=t.getBoundingRect,OM=t.getTextContent,$o=t.isHiddenSubtree,BM=t.matchAccessibilityRole,zM=t.setFocusIfFocusable,FM=t.setupIntersectionObserver,HM=t.appendChild,VM=t.appendChildToContainer,GM=t.commitTextUpdate,kM=t.commitMount,WM=t.commitUpdate,XM=t.insertBefore,qM=t.insertInContainerBefore,YM=t.removeChild,ZM=t.removeChildFromContainer,J0=t.resetTextContent,jM=t.hideInstance,KM=t.hideTextInstance,JM=t.unhideInstance,QM=t.unhideTextInstance,$M=t.clearContainer,tb=t.cloneInstance,Q0=t.createContainerChildSet,$0=t.appendChildToContainerChildSet,eb=t.finalizeContainerChildren,tv=t.replaceContainerChildren,ev=t.cloneHiddenInstance,nv=t.cloneHiddenTextInstance,bd=t.isSuspenseInstancePending,Ed=t.isSuspenseInstanceFallback,nb=t.getSuspenseInstanceFallbackErrorDetails,ib=t.registerSuspenseInstanceRetry,sb=t.canHydrateFormStateMarker,ab=t.isFormStateMarkerMatching,iv=t.getNextHydratableSibling,sv=t.getFirstHydratableChild,rb=t.getFirstHydratableChildWithinContainer,ob=t.getFirstHydratableChildWithinSuspenseInstance,lb=t.canHydrateInstance,cb=t.canHydrateTextInstance,ub=t.canHydrateSuspenseInstance,hb=t.hydrateInstance,fb=t.hydrateTextInstance,db=t.hydrateSuspenseInstance,pb=t.getNextHydratableInstanceAfterSuspenseInstance,mb=t.commitHydratedContainer,gb=t.commitHydratedSuspenseInstance,vb=t.clearSuspenseBoundary,_b=t.clearSuspenseBoundaryFromContainer,av=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var yb=t.validateHydratableInstance,xb=t.validateHydratableTextInstance,Ai=t.supportsResources,rv=t.isHostHoistableType,Td=t.getHoistableRoot,ov=t.getResource,lv=t.acquireResource,cv=t.releaseResource,Sb=t.hydrateHoistable,uv=t.mountHoistable,hv=t.unmountHoistable,Mb=t.createHoistableInstance,bb=t.prepareToCommitHoistables,Eb=t.mayResourceSuspendCommit,fv=t.preloadResource,Tb=t.suspendResource,Ln=t.supportsSingletons,dv=t.resolveSingletonInstance,Ab=t.clearSingleton,wb=t.acquireSingletonInstance,Cb=t.releaseSingletonInstance,pv=t.isHostSingletonType,Ad=[],Cr=-1,Rr={},di=Math.clz32?Math.clz32:A,Rb=Math.log,Db=Math.LN2,Dc=128,Uc=4194304,Nc=fi.unstable_scheduleCallback,wd=fi.unstable_cancelCallback,Ub=fi.unstable_shouldYield,Nb=fi.unstable_requestPaint,Hi=fi.unstable_now,mv=fi.unstable_ImmediatePriority,Lb=fi.unstable_UserBlockingPriority,Cd=fi.unstable_NormalPriority,Pb=fi.unstable_IdlePriority,Ib=fi.log,Ob=fi.unstable_setDisableYieldValue,tl=null,pi=null,mi=typeof Object.is=="function"?Object.is:q,gv=new WeakMap,Dr=[],Ur=0,Lc=null,Pc=0,wi=[],Ci=0,Da=null,_s=1,ys="",An=S(null),el=S(null),js=S(null),Ic=S(null),qn=null,Pn=null,Pe=!1,Vi=null,Ji=!1,Rd=Error(i(519)),Ri=[],Nr=0,Dd=0,Oc=null,Lr=null,Ud=!1,Bc=!1,Nd=!1,Pr=0,nl=null,Ld=0,Ir=0,Or=null,Ks=!1,Pd=!1,Bb=Object.prototype.hasOwnProperty,il=Error(i(460)),Id=Error(i(474)),zc={then:function(){}},Br=null,zr=null,sl=0,Ua=_n(!0),vv=_n(!1),Fr=S(null),Fc=S(0),Di=S(null),Qi=null,dn=S(0),Js=0,be=null,Ge=null,cn=null,Hc=!1,Hr=!1,Na=!1,Vc=0,al=0,Vr=null,zb=0,Od=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},$i={readContext:Un,use:j,useCallback:Je,useContext:Je,useEffect:Je,useImperativeHandle:Je,useLayoutEffect:Je,useInsertionEffect:Je,useMemo:Je,useReducer:Je,useRef:Je,useState:Je,useDebugValue:Je,useDeferredValue:Je,useTransition:Je,useSyncExternalStore:Je,useId:Je};$i.useCacheRefresh=Je,$i.useMemoCache=Je,$i.useHostTransitionStatus=Je,$i.useFormState=Je,$i.useActionState=Je,$i.useOptimistic=Je;var La={readContext:Un,use:j,useCallback:function(a,r){return W().memoizedState=[a,r===void 0?null:r],a},useContext:Un,useEffect:gg,useImperativeHandle:function(a,r,u){u=u!=null?u.concat([a]):null,mc(4194308,4,yg.bind(null,r,a),u)},useLayoutEffect:function(a,r){return mc(4194308,4,a,r)},useInsertionEffect:function(a,r){mc(4,2,a,r)},useMemo:function(a,r){var u=W();r=r===void 0?null:r;var d=a();if(Na){et(!0);try{a()}finally{et(!1)}}return u.memoizedState=[d,r],d},useReducer:function(a,r,u){var d=W();if(u!==void 0){var y=u(r);if(Na){et(!0);try{u(r)}finally{et(!1)}}}else y=r;return d.memoizedState=d.baseState=y,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:y},d.queue=a,a=a.dispatch=qS.bind(null,be,a),[d.memoizedState,a]},useRef:function(a){var r=W();return a={current:a},r.memoizedState=a},useState:function(a){a=ze(a);var r=a.queue,u=Cg.bind(null,be,r);return r.dispatch=u,[a.memoizedState,u]},useDebugValue:wf,useDeferredValue:function(a,r){var u=W();return Cf(u,a,r)},useTransition:function(){var a=ze(!1);return a=Eg.bind(null,be,a.queue,!0,!1),W().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,r,u){var d=be,y=W();if(Pe){if(u===void 0)throw Error(i(407));u=u()}else{if(u=r(),qe===null)throw Error(i(349));(De&60)!==0||ee(d,r,u)}y.memoizedState=u;var M={value:u,getSnapshot:r};return y.queue=M,gg(Be.bind(null,d,M,a),[a]),d.flags|=2048,Qn(9,Me.bind(null,d,M,u,r),{destroy:void 0},null),u},useId:function(){var a=W(),r=qe.identifierPrefix;if(Pe){var u=ys,d=_s;u=(d&~(1<<32-di(d)-1)).toString(32)+u,r=":"+r+"R"+u,u=Vc++,0<u&&(r+="H"+u.toString(32)),r+=":"}else u=zb++,r=":"+r+"r"+u.toString(32)+":";return a.memoizedState=r},useCacheRefresh:function(){return W().memoizedState=XS.bind(null,be)}};La.useMemoCache=wt,La.useHostTransitionStatus=Rf,La.useFormState=kn,La.useActionState=kn,La.useOptimistic=function(a){var r=W();r.memoizedState=r.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return r.queue=u,r=Df.bind(null,be,!0,u),u.dispatch=r,[a,r]};var Qs={readContext:Un,use:j,useCallback:Sg,useContext:Un,useEffect:Af,useImperativeHandle:xg,useInsertionEffect:vg,useLayoutEffect:_g,useMemo:Mg,useReducer:qt,useRef:mg,useState:function(){return qt(Pt)},useDebugValue:wf,useDeferredValue:function(a,r){var u=Q();return bg(u,Ge.memoizedState,a,r)},useTransition:function(){var a=qt(Pt)[0],r=Q().memoizedState;return[typeof a=="boolean"?a:st(a),r]},useSyncExternalStore:ue,useId:Ag};Qs.useCacheRefresh=wg,Qs.useMemoCache=wt,Qs.useHostTransitionStatus=Rf,Qs.useFormState=Wn,Qs.useActionState=Wn,Qs.useOptimistic=function(a,r){var u=Q();return se(u,Ge,a,r)};var Pa={readContext:Un,use:j,useCallback:Sg,useContext:Un,useEffect:Af,useImperativeHandle:xg,useInsertionEffect:vg,useLayoutEffect:_g,useMemo:Mg,useReducer:ae,useRef:mg,useState:function(){return ae(Pt)},useDebugValue:wf,useDeferredValue:function(a,r){var u=Q();return Ge===null?Cf(u,a,r):bg(u,Ge.memoizedState,a,r)},useTransition:function(){var a=ae(Pt)[0],r=Q().memoizedState;return[typeof a=="boolean"?a:st(a),r]},useSyncExternalStore:ue,useId:Ag};Pa.useCacheRefresh=wg,Pa.useMemoCache=wt,Pa.useHostTransitionStatus=Rf,Pa.useFormState=xr,Pa.useActionState=xr,Pa.useOptimistic=function(a,r){var u=Q();return Ge!==null?se(u,Ge,a,r):(u.baseState=a,[a,u.queue.dispatch])};var Bd={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,r,u){a=a._reactInternals;var d=hi(),y=Mt(d);y.payload=r,u!=null&&(y.callback=u),r=Lt(a,y,d),r!==null&&(Xn(r,a,d),$t(r,a,d))},enqueueReplaceState:function(a,r,u){a=a._reactInternals;var d=hi(),y=Mt(d);y.tag=1,y.payload=r,u!=null&&(y.callback=u),r=Lt(a,y,d),r!==null&&(Xn(r,a,d),$t(r,a,d))},enqueueForceUpdate:function(a,r){a=a._reactInternals;var u=hi(),d=Mt(u);d.tag=2,r!=null&&(d.callback=r),r=Lt(a,d,u),r!==null&&(Xn(r,a,u),$t(r,a,u))}},_v=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var r=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(r))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},yv=Error(i(461)),xn=!1,zd={dehydrated:null,treeContext:null,retryLane:0},Gc=S(null),Ia=null,xs=null,Fb=typeof AbortController<"u"?AbortController:function(){var a=[],r=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){r.aborted=!0,a.forEach(function(u){return u()})}},Hb=fi.unstable_scheduleCallback,Vb=fi.unstable_NormalPriority,en={$$typeof:qs,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},xv=pe.S;pe.S=function(a,r){typeof r=="object"&&r!==null&&typeof r.then=="function"&&ot(a,r),xv!==null&&xv(a,r)};var Oa=S(null),Ss=!1,nn=!1,Fd=!1,Sv=typeof WeakSet=="function"?WeakSet:Set,Sn=null,Mv=!1,un=null,gi=!1,Gi=null,Gr=8192,Gb={getCacheForType:function(a){var r=Un(en),u=r.data.get(a);return u===void 0&&(u=a(),r.data.set(a,u)),u}},kc=0,Wc=1,Xc=2,qc=3,Yc=4;if(typeof Symbol=="function"&&Symbol.for){var rl=Symbol.for;kc=rl("selector.component"),Wc=rl("selector.has_pseudo_class"),Xc=rl("selector.role"),qc=rl("selector.test_id"),Yc=rl("selector.text")}var kb=typeof WeakMap=="function"?WeakMap:Map,ke=0,qe=null,Ae=null,De=0,Ye=0,vi=null,Ms=!1,kr=!1,Hd=!1,bs=0,sn=0,$s=0,Ba=0,Vd=0,Ui=0,Wr=0,ol=null,ts=null,Gd=!1,kd=0,ll=1/0,Zc=null,ta=null,jc=!1,za=null,cl=0,Wd=0,Xd=null,ul=0,qd=null;return Te.attemptContinuousHydration=function(a){if(a.tag===13){var r=ct(a,67108864);r!==null&&Xn(r,a,67108864),fd(a,67108864)}},Te.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var r=hi(),u=ct(a,r);u!==null&&Xn(u,a,r),fd(a,r)}},Te.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var r=T(a.pendingLanes);if(r!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;r;){var u=1<<31-di(r);a.entanglements[1]|=u,r&=~u}Ct(a),(ke&6)===0&&(ll=Hi()+500,re(0))}}break;case 13:r=ct(a,2),r!==null&&Xn(r,a,2),S0(),fd(a,2)}},Te.batchedUpdates=function(a,r){return a(r)},Te.createComponentSelector=function(a){return{$$typeof:kc,value:a}},Te.createContainer=function(a,r,u,d,y,M,N,G,K,ht){return I0(a,r,!1,null,u,d,M,N,G,K,ht,null)},Te.createHasPseudoClassSelector=function(a){return{$$typeof:Wc,value:a}},Te.createHydrationContainer=function(a,r,u,d,y,M,N,G,K,ht,Ut,Ht,Vt){return a=I0(u,d,!0,a,y,M,G,K,ht,Ut,Ht,Vt),a.context=O0(null),u=a.current,d=hi(),y=Mt(d),y.callback=r??null,Lt(u,y,d),a.current.lanes=d,z(a,d),Ct(a),a},Te.createPortal=function(a,r,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Tr,key:d==null?null:""+d,children:a,containerInfo:r,implementation:u}},Te.createRoleSelector=function(a){return{$$typeof:Xc,value:a}},Te.createTestNameSelector=function(a){return{$$typeof:qc,value:a}},Te.createTextSelector=function(a){return{$$typeof:Yc,value:a}},Te.defaultOnCaughtError=function(a){console.error(a)},Te.defaultOnRecoverableError=function(a){_v(a)},Te.defaultOnUncaughtError=function(a){_v(a)},Te.deferredUpdates=function(a){var r=pe.T,u=Ca();try{return ti(32),pe.T=null,a()}finally{ti(u),pe.T=r}},Te.discreteUpdates=function(a,r,u,d,y){var M=pe.T,N=Ca();try{return ti(2),pe.T=null,a(r,u,d,y)}finally{ti(N),pe.T=M,ke===0&&(ll=Hi()+500)}},Te.findAllNodes=id,Te.findBoundingRects=function(a,r){if(!Qo)throw Error(i(363));r=id(a,r),a=[];for(var u=0;u<r.length;u++)a.push(IM(r[u]));for(r=a.length-1;0<r;r--){u=a[r];for(var d=u.x,y=d+u.width,M=u.y,N=M+u.height,G=r-1;0<=G;G--)if(r!==G){var K=a[G],ht=K.x,Ut=ht+K.width,Ht=K.y,Vt=Ht+K.height;if(d>=ht&&M>=Ht&&y<=Ut&&N<=Vt){a.splice(r,1);break}else if(d!==ht||u.width!==K.width||Vt<M||Ht>N){if(!(M!==Ht||u.height!==K.height||Ut<d||ht>y)){ht>d&&(K.width+=ht-d,K.x=d),Ut<y&&(K.width=y-ht),a.splice(r,1);break}}else{Ht>M&&(K.height+=Ht-M,K.y=M),Vt<N&&(K.height=N-Ht),a.splice(r,1);break}}}return a},Te.findHostInstance=B0,Te.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?b(a):null,a===null?null:Jo(a.stateNode)},Te.findHostInstanceWithWarning=function(a){return B0(a)},Te.flushPassiveEffects=Aa,Te.flushSyncFromReconciler=function(a){var r=ke;ke|=1;var u=pe.T,d=Ca();try{if(ti(2),pe.T=null,a)return a()}finally{ti(d),pe.T=u,ke=r,(ke&6)===0&&re(0)}},Te.flushSyncWork=S0,Te.focusWithin=function(a,r){if(!Qo)throw Error(i(363));for(a=td(a),r=v0(a,r),r=Array.from(r),a=0;a<r.length;){var u=r[a++],d=u.tag;if(!$o(u)){if((d===5||d===26||d===27)&&zM(u.stateNode))return!0;for(u=u.child;u!==null;)r.push(u),u=u.sibling}}return!1},Te.getFindAllNodesFailureDescription=function(a,r){if(!Qo)throw Error(i(363));var u=0,d=[];a=[td(a),0];for(var y=0;y<a.length;){var M=a[y++],N=M.tag,G=a[y++],K=r[G];if((N!==5&&N!==26&&N!==27||!$o(M))&&(ed(M,K)&&(d.push(nd(K)),G++,G>u&&(u=G)),G<r.length))for(M=M.child;M!==null;)a.push(M,G),M=M.sibling}if(u<r.length){for(a=[];u<r.length;u++)a.push(nd(r[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},Te.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return Jo(a.child.stateNode);default:return a.child.stateNode}},Te.injectIntoDevTools=function(){var a={bundleType:0,version:mM,rendererPackageName:gM,currentDispatcherRef:pe,findFiberByHostInstance:Z0,reconcilerVersion:"19.0.0"};if(X0!==null&&(a.rendererConfig=X0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var r=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(r.isDisabled||!r.supportsFiber)a=!0;else{try{tl=r.inject(a),pi=r}catch{}a=!!r.checkDCE}}return a},Te.isAlreadyRendering=function(){return!1},Te.observeVisibleRects=function(a,r,u,d){if(!Qo)throw Error(i(363));a=id(a,r);var y=FM(a,u,d).disconnect;return{disconnect:function(){y()}}},Te.shouldError=function(){return null},Te.shouldSuspend=function(){return!1},Te.startHostTransition=function(a,r,u,d){if(a.tag!==5)throw Error(i(476));var y=Tg(a).queue;Eg(a,y,r,wr,u===null?n:function(){var M=Tg(a).next.queue;return ko(a,M,{},hi()),u(d)})},Te.updateContainer=function(a,r,u,d){var y=r.current,M=hi();return z0(y,M,a,r,u,d),M},Te.updateContainerSync=function(a,r,u,d){return r.tag===0&&Aa(),z0(r.current,2,a,r,u,d),2},Te},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})})(Wp)),Wp.exports}var dy;function R3(){return dy||(dy=1,kp.exports=C3()),kp.exports}var D3=R3();const U3=bm(D3);var py=AS();function fg(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=fg(n,t,e);if(i)return i;n=t?null:n.sibling}}function wS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const dg=wS(ne.createContext(null));class CS extends ne.Component{render(){return ne.createElement(dg.Provider,{value:this._reactInternals},this.props.children)}}function RS(){const s=ne.useContext(dg);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=ne.useId();return ne.useMemo(()=>{for(const e of[s,s?.alternate]){if(!e)continue;const n=fg(e,!1,i=>{let o=i.memoizedState;for(;o;){if(o.memoizedState===t)return!0;o=o.next}});if(n)return n}},[s,t])}const N3=Symbol.for("react.context"),L3=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===N3;function P3(){const s=RS(),[t]=ne.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;L3(n)&&n!==dg&&!t.has(n)&&t.set(n,ne.use(wS(n))),e=e.return}return t}function I3(){const s=P3();return ne.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>ne.createElement(t,null,ne.createElement(e.Provider,{...n,value:s.get(e)})),t=>ne.createElement(CS,{...t})),[s])}function DS(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const US=s=>s&&s.isOrthographicCamera,O3=s=>s&&s.hasOwnProperty("current"),B3=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),fc=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?ne.useLayoutEffect:ne.useEffect;function NS(s){const t=ne.useRef(s);return fc(()=>void(t.current=s),[s]),t}function z3(){const s=RS(),t=I3();return ne.useMemo(()=>({children:e})=>{const i=!!fg(s,!0,o=>o.type===ne.StrictMode)?ne.StrictMode:ne.Fragment;return xi.jsx(i,{children:xi.jsx(t,{children:e})})},[s,t])}function F3({set:s}){return fc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const H3=(s=>(s=class extends ne.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function LS(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function fo(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const $e={obj:s=>s===Object(s)&&!$e.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if($e.str(s)||$e.num(s)||$e.boo(s))return s===t;const o=$e.obj(s);if(o&&n==="reference")return s===t;const l=$e.arr(s);if(l&&e==="reference")return s===t;if((l||o)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(o&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!$e.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if($e.und(c)){if(l&&s.length===0&&t.length===0||o&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function V3(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];e?.type!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const PS=["children","key","ref"];function G3(s){const t={};for(const e in s)PS.includes(e)||(t[e]=s[e]);return t}function zh(s,t,e,n){const i=s;let o=i?.__r3f;return o||(o={root:t,type:e,parent:null,children:[],props:G3(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=o)),o}function ec(s,t){if(!t.includes("-"))return{root:s,key:t,target:s[t]};if(t in s)return{root:s,key:t,target:s[t]};let e=s;const n=t.split("-");for(const i of n){if(typeof e!="object"||e===null){if(e!==void 0){const o=n.slice(n.indexOf(i)).join("-");return{root:e,key:o,target:void 0}}return{root:s,key:t,target:void 0}}t=i,s=e,e=e[t]}return{root:s,key:t,target:e}}const my=/-\d+$/;function Fh(s,t){if($e.str(t.props.attach)){if(my.test(t.props.attach)){const i=t.props.attach.replace(my,""),{root:o,key:l}=ec(s.object,i);Array.isArray(o[l])||(o[l]=[])}const{root:e,key:n}=ec(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else $e.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function Hh(s,t){if($e.str(t.props.attach)){const{root:e,key:n}=ec(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const vm=[...PS,"args","dispose","attach","object","onUpdate","dispose"],gy=new Map;function k3(s){let t=gy.get(s.constructor);try{t||(t=new s.constructor,gy.set(s.constructor,t))}catch{}return t}function W3(s,t){const e={};for(const n in t)if(!vm.includes(n)&&!$e.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(vm.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:o}=ec(s.object,n);if(i.constructor&&i.constructor.length===0){const l=k3(i);$e.und(l)||(e[o]=l[o])}else e[o]=0}return e}const X3=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],q3=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function ha(s,t){var e;const n=s.__r3f,i=n&&DS(n).getState(),o=n?.eventCount;for(const c in t){let h=t[c];if(vm.includes(c))continue;if(n&&q3.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=ec(s,c);if(m===void 0&&(typeof f!="object"||f===null))throw Error(`R3F: Cannot set "${c}". Ensure it is an object before setting "${p}".`);if(m instanceof wo&&h instanceof wo)m.mask=h.mask;else if(m instanceof Gt&&B3(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&X3.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Fn&&f[p].type===Ii&&(f[p].colorSpace=zn)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&o!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Bo(n),s}function Bo(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function Y3(s,t){s.manual||(US(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const ii=s=>s?.isObject3D;function Gu(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function IS(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function Z3(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{IS(e.capturedMap,t,n,i)})}function j3(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let _=0;_<v.length;_++){const E=fo(v[_]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(_){const E=fo(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var A;E.events.compute==null||E.events.compute(h,E,(A=E.previousRoot)==null?void 0:A.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let b=v.flatMap(x).sort((_,E)=>{const A=fo(_.object),T=fo(E.object);return!A||!T?_.distance-E.distance:T.events.priority-A.events.priority||_.distance-E.distance}).filter(_=>{const E=Gu(_);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(b=p.events.filter(b,p));for(const _ of b){let E=_.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let _ of p.internal.capturedMap.get(h.pointerId).values())m.has(Gu(_.intersection))||g.push(_.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=fo(v.object);if(x||v.object.traverseAncestors(b=>{const S=fo(b);if(S)return x=S,!1}),x){const{raycaster:b,pointer:S,camera:_,internal:E}=x,A=new I(S.x,S.y,0).unproject(_),T=C=>{var w,z;return(w=(z=E.capturedMap.get(C))==null?void 0:z.has(v.eventObject))!=null?w:!1},U=C=>{const w={intersection:v,target:f.target};E.capturedMap.has(C)?E.capturedMap.get(C).set(v.eventObject,w):E.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},R=C=>{const w=E.capturedMap.get(C);w&&IS(E.capturedMap,v.eventObject,w,C)};let P={};for(let C in f){let w=f[C];typeof w!="function"&&(P[C]=w)}let B={...v,...P,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:A,ray:b.ray,camera:_,stopPropagation(){const C="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(B.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=h.slice(0,h.indexOf(v));o([...w,v])}},target:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:R},currentTarget:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:R},nativeEvent:f};if(m(B),g.stopped===!0)break}}}return h}function o(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Gu(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>o([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),o([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),_=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&_<=2&&(l(p,g.interaction),m&&m(p)),v&&o(S);function E(A){const T=A.eventObject,U=T.__r3f;if(!(U!=null&&U.eventCount))return;const R=U.handlers;if(v){if(R.onPointerOver||R.onPointerEnter||R.onPointerOut||R.onPointerLeave){const P=Gu(A),B=g.hovered.get(P);B?B.stopped&&A.stopPropagation():(g.hovered.set(P,A),R.onPointerOver==null||R.onPointerOver(A),R.onPointerEnter==null||R.onPointerEnter(A))}R.onPointerMove==null||R.onPointerMove(A)}else{const P=R[h];P?(!x||g.initialHits.includes(T))&&(l(p,g.interaction.filter(B=>!g.initialHits.includes(B))),P(A)):x&&g.initialHits.includes(T)&&l(p,g.interaction.filter(B=>!g.initialHits.includes(B)))}}i(S,p,_,E)}}return{handlePointer:c}}const vy=s=>!!(s!=null&&s.render),OS=ne.createContext(null),K3=(s,t)=>{const e=A3((c,h)=>{const f=new I,p=new I,m=new I;function g(_=h().camera,E=p,A=h().size){const{width:T,height:U,top:R,left:P}=A,B=T/U;E.isVector3?m.copy(E):m.set(...E);const C=_.getWorldPosition(f).distanceTo(m);if(US(_))return{width:T/_.zoom,height:U/_.zoom,top:R,left:P,factor:1,distance:C,aspect:B};{const w=_.fov*Math.PI/180,z=2*Math.tan(w/2)*C,Y=z*(T/U);return{width:Y,height:z,top:R,left:P,factor:T/Y,distance:C,aspect:B}}}let v;const x=_=>c(E=>({performance:{...E.performance,current:_}})),b=new ft;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(h(),_),advance:(_,E)=>t(_,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new rg,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=h();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(h().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,A=0,T=0)=>{const U=h().camera,R={width:_,height:E,top:A,left:T};c(P=>({size:R,viewport:{...P.viewport,...g(U,p,R)}}))},setDpr:_=>c(E=>{const A=LS(_);return{viewport:{...E.viewport,dpr:A,initialDpr:E.viewport.initialDpr||A}}}),setFrameloop:(_="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:ne.createRef(),active:!1,frames:0,priority:0,subscribe:(_,E,A)=>{const T=h().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:A}),T.subscribers=T.subscribers.sort((U,R)=>U.priority-R.priority),()=>{const U=h().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(E>0?1:0),U.subscribers=U.subscribers.filter(R=>R.ref!==_))}}}}}),n=e.getState();let i=n.size,o=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==o){i=h,o=f.dpr,Y3(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function BS(){const s=ne.useContext(OS);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function ca(s=e=>e,t){return BS()(s,t)}function J3(s,t=0){const e=BS(),n=e.getState().internal.subscribe,i=NS(s);return fc(()=>n(i,t,e),[t,n,e]),null}function Q3(s){const t=U3(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:ne.version}),t}const zS=0,Uo={},$3=/^three(?=[A-Z])/,Ef=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let tD=0;const eD=s=>typeof s=="function";function nD(s){if(eD(s)){const t=`${tD++}`;return Uo[t]=s,t}else Object.assign(Uo,s)}function FS(s,t){const e=Ef(s),n=Uo[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function iD(s,t,e){var n;return s=Ef(s)in Uo?s:s.replace($3,""),FS(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,zh(t.object,e,s,t)}function sD(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Hh(s.parent,s):ii(s.object)&&(s.object.visible=!1),s.isHidden=!0,Bo(s)}}function HS(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Fh(s.parent,s):ii(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Bo(s)}}function pg(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,o;const l=Uo[Ef(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(o=t.props.args)!=null?o:[]),t.object.__r3f=t}if(ha(t.object,t.props),t.props.attach)Fh(s,t);else if(ii(t.object)&&ii(s.object)){const l=s.object.children.indexOf(e?.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)pg(t,l);Bo(t)}}function Yp(s,t){t&&(t.parent=s,s.children.push(t),pg(s,t))}function _y(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),pg(s,t,e)}function VS(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():py.unstable_scheduleCallback(py.unstable_IdlePriority,t)}}function _m(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?Hh(s,t):ii(t.object)&&ii(s.object)&&(s.object.remove(t.object),Z3(DS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let o=t.children.length-1;o>=0;o--){const l=t.children[o];_m(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&VS(t.object),e===void 0&&Bo(t)}function aD(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const ju=[];function rD(){for(const[e]of ju){const n=e.parent;if(n){e.props.attach?Hh(n,e):ii(e.object)&&ii(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?Hh(e,i):ii(i.object)&&ii(e.object)&&e.object.remove(i.object)}e.isHidden&&HS(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&VS(e.object)}for(const[e,n,i]of ju){e.props=n;const o=e.parent;if(o){var s,t;const l=Uo[Ef(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,aD(i,e.object),ha(e.object,e.props),e.props.attach?Fh(o,e):ii(e.object)&&ii(o.object)&&o.object.add(e.object);for(const c of e.children)c.props.attach?Fh(e,c):ii(c.object)&&ii(e.object)&&e.object.add(c.object);Bo(e)}}ju.length=0}const Zp=()=>{},yy={};let ku=zS;const oD=0,lD=4,ym=Q3({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:iD,removeChild:_m,appendChild:Yp,appendInitialChild:Yp,insertBefore:_y,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||Yp(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||_m(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||_y(n,t,e)},getRootHostContext:()=>yy,getChildHostContext:()=>yy,commitUpdate(s,t,e,n,i){var o,l,c;FS(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((o=n.args)==null?void 0:o.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)ju.push([s,{...n},i]);else{const p=W3(s,n);Object.keys(p).length&&(Object.assign(s.props,p),ha(s.object,p))}(i.sibling===null||(i.flags&lD)===oD)&&rD()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s?.object,prepareForCommit:()=>null,preparePortalMount:s=>zh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:sD,unhideInstance:HS,createTextInstance:Zp,hideTextInstance:Zp,unhideTextInstance:Zp,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:ne.createContext(null),setCurrentUpdatePriority(s){ku=s},getCurrentUpdatePriority(){return ku},resolveUpdatePriority(){var s;if(ku!==zS)return ku;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Xu.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Xu.ContinuousEventPriority;default:return Xu.DefaultEventPriority}},resetFormInstance(){}}),pr=new Map,po={objects:"shallow",strict:!1};function cD(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:o}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:o}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function uD(s){const t=pr.get(s),e=t?.fiber,n=t?.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,o=n||K3(Mm,Sy),l=e||ym.createContainer(o,Xu.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||pr.set(s,{fiber:l,store:o});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(St=>g=St);let{gl:v,size:x,scene:b,events:S,onCreated:_,shadows:E=!1,linear:A=!1,flat:T=!1,legacy:U=!1,orthographic:R=!1,frameloop:P="always",dpr:B=[1,2],performance:C,raycaster:w,camera:z,onPointerMissed:Y}=m,X=o.getState(),$=X.gl;if(!X.gl){const St={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},It=typeof v=="function"?await v(St):v;vy(It)?$=It:$=new TS({...St,...v}),X.set({gl:$})}let it=X.raycaster;it||X.set({raycaster:it=new vS});const{params:k,...et}=w||{};if($e.equ(et,it,po)||ha(it,{...et}),$e.equ(k,it.params,po)||ha(it,{params:{...it.params,...k}}),!X.camera||X.camera===h&&!$e.equ(h,z,po)){h=z;const St=z?.isCamera,It=St?z:R?new da(0,0,0,0,.1,1e3):new ln(75,0,.1,1e3);St||(It.position.z=5,z&&(ha(It,z),It.manual||("aspect"in z||"left"in z||"right"in z||"bottom"in z||"top"in z)&&(It.manual=!0,It.updateProjectionMatrix())),!X.camera&&!(z!=null&&z.rotation)&&It.lookAt(0,0,0)),X.set({camera:It}),it.camera=It}if(!X.scene){let St;b!=null&&b.isScene?(St=b,zh(St,o,"",{})):(St=new Fm,zh(St,o,"",{}),b&&ha(St,b)),X.set({scene:St})}S&&!X.events.handlers&&X.set({events:S(o)});const q=cD(s,x);if($e.equ(q,X.size,po)||X.setSize(q.width,q.height,q.top,q.left),B&&X.viewport.dpr!==LS(B)&&X.setDpr(B),X.frameloop!==P&&X.setFrameloop(P),X.onPointerMissed||X.set({onPointerMissed:Y}),C&&!$e.equ(C,X.performance,po)&&X.set(St=>({performance:{...St.performance,...C}})),!X.xr){var lt;const St=(Kt,le)=>{const ut=o.getState();ut.frameloop!=="never"&&Sy(Kt,!0,ut,le)},It=()=>{const Kt=o.getState();Kt.gl.xr.enabled=Kt.gl.xr.isPresenting,Kt.gl.xr.setAnimationLoop(Kt.gl.xr.isPresenting?St:null),Kt.gl.xr.isPresenting||Mm(Kt)},Qt={connect(){const Kt=o.getState().gl;Kt.xr.addEventListener("sessionstart",It),Kt.xr.addEventListener("sessionend",It)},disconnect(){const Kt=o.getState().gl;Kt.xr.removeEventListener("sessionstart",It),Kt.xr.removeEventListener("sessionend",It)}};typeof((lt=$.xr)==null?void 0:lt.addEventListener)=="function"&&Qt.connect(),X.set({xr:Qt})}if($.shadowMap){const St=$.shadowMap.enabled,It=$.shadowMap.type;if($.shadowMap.enabled=!!E,$e.boo(E))$.shadowMap.type=Cl;else if($e.str(E)){var yt;const Qt={basic:wy,percentage:Wh,soft:Cl,variance:qi};$.shadowMap.type=(yt=Qt[E])!=null?yt:Cl}else $e.obj(E)&&Object.assign($.shadowMap,E);(St!==$.shadowMap.enabled||It!==$.shadowMap.type)&&($.shadowMap.needsUpdate=!0)}return Re.enabled=!U,f||($.outputColorSpace=A?ma:zn,$.toneMapping=T?rs:Em),X.legacy!==U&&X.set(()=>({legacy:U})),X.linear!==A&&X.set(()=>({linear:A})),X.flat!==T&&X.set(()=>({flat:T})),v&&!$e.fun(v)&&!vy(v)&&!$e.equ(v,$,po)&&ha($,v),c=_,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{ym.updateContainer(xi.jsx(hD,{store:o,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),o},unmount(){GS(s)}}}function hD({store:s,children:t,onCreated:e,rootElement:n}){return fc(()=>{const i=s.getState();i.set(o=>({internal:{...o.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),xi.jsx(OS.Provider,{value:s,children:t})}function GS(s,t){const e=pr.get(s),n=e?.fiber;if(n){const i=e?.store.getState();i&&(i.internal.active=!1),ym.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var o,l,c,h;i.events.disconnect==null||i.events.disconnect(),(o=i.gl)==null||(l=o.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),V3(i.scene),pr.delete(s)}catch{}},500)})}}const fD=new Set,dD=new Set,pD=new Set;function jp(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Bl(s,t){switch(s){case"before":return jp(fD,t);case"after":return jp(dD,t);case"tail":return jp(pD,t)}}let Kp,Jp;function xm(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),Kp=t.internal.subscribers;for(let i=0;i<Kp.length;i++)Jp=Kp[i],Jp.ref.current(Jp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let Vh=!1,Sm=!1,Qp,xy,mo;function kS(s){xy=requestAnimationFrame(kS),Vh=!0,Qp=0,Bl("before",s),Sm=!0;for(const e of pr.values()){var t;mo=e.store.getState(),mo.internal.active&&(mo.frameloop==="always"||mo.internal.frames>0)&&!((t=mo.gl.xr)!=null&&t.isPresenting)&&(Qp+=xm(s,mo))}if(Sm=!1,Bl("after",s),Qp===0)return Bl("tail",s),Vh=!1,cancelAnimationFrame(xy)}function Mm(s,t=1){var e;if(!s)return pr.forEach(n=>Mm(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):Sm?s.internal.frames=2:s.internal.frames=1,Vh||(Vh=!0,requestAnimationFrame(kS)))}function Sy(s,t=!0,e,n){if(t&&Bl("before",s),e)xm(s,e,n);else for(const i of pr.values())xm(s,i.store.getState());t&&Bl("after",s)}const $p={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function mD(s){const{handlePointer:t}=j3(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys($p).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(o=>({events:{...o.events,connected:e}})),i.handlers)for(const o in i.handlers){const l=i.handlers[o],[c,h]=$p[o];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const o=n.handlers[i],[l]=$p[i];n.connected.removeEventListener(l,o)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function My(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function gD({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[o,l]=ne.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=ne.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:o,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=ne.useRef(!1);ne.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=ne.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:A,width:T,height:U,bottom:R,right:P,x:B,y:C}=c.current.element.getBoundingClientRect(),w={left:E,top:A,width:T,height:U,bottom:R,right:P,x:B,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),p.current&&!xD(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[_,f?My(_,f):_,h?My(_,h):_]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function b(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=WS(_),b())};return _D(v,!!t),vD(g),ne.useEffect(()=>{x(),b()},[t,v,g]),ne.useEffect(()=>x,[]),[S,o,m]}function vD(s){ne.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function _D(s,t){ne.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function WS(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(o=>o==="auto"||o==="scroll")&&t.push(s),[...t,...WS(s.parentElement)]}const yD=["x","y","top","bottom","left","right","width","height"],xD=(s,t)=>yD.every(e=>s[e]===t[e]);function SD({ref:s,children:t,fallback:e,resize:n,style:i,gl:o,events:l=mD,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,scene:A,onPointerMissed:T,onCreated:U,...R}){ne.useMemo(()=>nD(m3),[]);const P=z3(),[B,C]=gD({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=ne.useRef(null),z=ne.useRef(null);ne.useImperativeHandle(s,()=>w.current);const Y=NS(T),[X,$]=ne.useState(!1),[it,k]=ne.useState(!1);if(X)throw X;if(it)throw it;const et=ne.useRef(null);fc(()=>{const lt=w.current;if(C.width>0&&C.height>0&&lt){et.current||(et.current=uD(lt));async function yt(){await et.current.configure({gl:o,scene:A,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,size:C,onPointerMissed:(...St)=>Y.current==null?void 0:Y.current(...St),onCreated:St=>{St.events.connect==null||St.events.connect(c?O3(c)?c.current:c:z.current),h&&St.setEvents({compute:(It,Qt)=>{const Kt=It[h+"X"],le=It[h+"Y"];Qt.pointer.set(Kt/Qt.size.width*2-1,-(le/Qt.size.height)*2+1),Qt.raycaster.setFromCamera(Qt.pointer,Qt.camera)}}),U?.(St)}}),et.current.render(xi.jsx(P,{children:xi.jsx(H3,{set:k,children:xi.jsx(ne.Suspense,{fallback:xi.jsx(F3,{set:$}),children:t??null})})}))}yt()}}),ne.useEffect(()=>{const lt=w.current;if(lt)return()=>GS(lt)},[]);const q=c?"none":"auto";return xi.jsx("div",{ref:z,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:q,...i},...R,children:xi.jsx("div",{ref:B,style:{width:"100%",height:"100%"},children:xi.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function OD(s){return xi.jsx(CS,{children:xi.jsx(SD,{...s})})}function Gh(){return Gh=Object.assign?Object.assign.bind():function(s){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)({}).hasOwnProperty.call(e,n)&&(s[n]=e[n])}return s},Gh.apply(null,arguments)}var MD=Object.defineProperty,bD=(s,t,e)=>t in s?MD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,ED=(s,t,e)=>(bD(s,t+"",e),e);class TD{constructor(){ED(this,"_listeners")}addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}}var AD=Object.defineProperty,wD=(s,t,e)=>t in s?AD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,oe=(s,t,e)=>(wD(s,typeof t!="symbol"?t+"":t,e),e);const Wu=new mr,by=new Us,CD=Math.cos(70*(Math.PI/180)),Ey=(s,t)=>(s%t+t)%t;let RD=class extends TD{constructor(t,e){super(),oe(this,"object"),oe(this,"domElement"),oe(this,"enabled",!0),oe(this,"target",new I),oe(this,"minDistance",0),oe(this,"maxDistance",1/0),oe(this,"minZoom",0),oe(this,"maxZoom",1/0),oe(this,"minPolarAngle",0),oe(this,"maxPolarAngle",Math.PI),oe(this,"minAzimuthAngle",-1/0),oe(this,"maxAzimuthAngle",1/0),oe(this,"enableDamping",!1),oe(this,"dampingFactor",.05),oe(this,"enableZoom",!0),oe(this,"zoomSpeed",1),oe(this,"enableRotate",!0),oe(this,"rotateSpeed",1),oe(this,"enablePan",!0),oe(this,"panSpeed",1),oe(this,"screenSpacePanning",!0),oe(this,"keyPanSpeed",7),oe(this,"zoomToCursor",!1),oe(this,"autoRotate",!1),oe(this,"autoRotateSpeed",2),oe(this,"reverseOrbit",!1),oe(this,"reverseHorizontalOrbit",!1),oe(this,"reverseVerticalOrbit",!1),oe(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),oe(this,"mouseButtons",{LEFT:tr.ROTATE,MIDDLE:tr.DOLLY,RIGHT:tr.PAN}),oe(this,"touches",{ONE:er.ROTATE,TWO:er.DOLLY_PAN}),oe(this,"target0"),oe(this,"position0"),oe(this,"zoom0"),oe(this,"_domElementKeyEvents",null),oe(this,"getPolarAngle"),oe(this,"getAzimuthalAngle"),oe(this,"setPolarAngle"),oe(this,"setAzimuthalAngle"),oe(this,"getDistance"),oe(this,"getZoomScale"),oe(this,"listenToKeyEvents"),oe(this,"stopListenToKeyEvents"),oe(this,"saveState"),oe(this,"reset"),oe(this,"update"),oe(this,"connect"),oe(this,"dispose"),oe(this,"dollyIn"),oe(this,"dollyOut"),oe(this,"getScale"),oe(this,"setScale"),this.object=t,this.domElement=e,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>p.phi,this.getAzimuthalAngle=()=>p.theta,this.setPolarAngle=H=>{let tt=Ey(H,2*Math.PI),Tt=p.phi;Tt<0&&(Tt+=2*Math.PI),tt<0&&(tt+=2*Math.PI);let V=Math.abs(tt-Tt);2*Math.PI-V<V&&(tt<Tt?tt+=2*Math.PI:Tt+=2*Math.PI),m.phi=tt-Tt,n.update()},this.setAzimuthalAngle=H=>{let tt=Ey(H,2*Math.PI),Tt=p.theta;Tt<0&&(Tt+=2*Math.PI),tt<0&&(tt+=2*Math.PI);let V=Math.abs(tt-Tt);2*Math.PI-V<V&&(tt<Tt?tt+=2*Math.PI:Tt+=2*Math.PI),m.theta=tt-Tt,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=H=>{H.addEventListener("keydown",ot),this._domElementKeyEvents=H},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",ot),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),h=c.NONE},this.update=(()=>{const H=new I,tt=new I(0,1,0),Tt=new Hn().setFromUnitVectors(t.up,tt),V=Tt.clone().invert(),gt=new I,At=new Hn,Bt=2*Math.PI;return function(){const mt=n.object.position;Tt.setFromUnitVectors(t.up,tt),V.copy(Tt).invert(),H.copy(mt).sub(n.target),H.applyQuaternion(Tt),p.setFromVector3(H),n.autoRotate&&h===c.NONE&&$(Y()),n.enableDamping?(p.theta+=m.theta*n.dampingFactor,p.phi+=m.phi*n.dampingFactor):(p.theta+=m.theta,p.phi+=m.phi);let Ft=n.minAzimuthAngle,te=n.maxAzimuthAngle;isFinite(Ft)&&isFinite(te)&&(Ft<-Math.PI?Ft+=Bt:Ft>Math.PI&&(Ft-=Bt),te<-Math.PI?te+=Bt:te>Math.PI&&(te-=Bt),Ft<=te?p.theta=Math.max(Ft,Math.min(te,p.theta)):p.theta=p.theta>(Ft+te)/2?Math.max(Ft,p.theta):Math.min(te,p.theta)),p.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,p.phi)),p.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(v,n.dampingFactor):n.target.add(v),n.zoomToCursor&&C||n.object.isOrthographicCamera?p.radius=Qt(p.radius):p.radius=Qt(p.radius*g),H.setFromSpherical(p),H.applyQuaternion(V),mt.copy(n.target).add(H),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(m.theta*=1-n.dampingFactor,m.phi*=1-n.dampingFactor,v.multiplyScalar(1-n.dampingFactor)):(m.set(0,0,0),v.set(0,0,0));let Ee=!1;if(n.zoomToCursor&&C){let xe=null;if(n.object instanceof ln&&n.object.isPerspectiveCamera){const vn=H.length();xe=Qt(vn*g);const _n=vn-xe;n.object.position.addScaledVector(P,_n),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const vn=new I(B.x,B.y,0);vn.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix(),Ee=!0;const _n=new I(B.x,B.y,0);_n.unproject(n.object),n.object.position.sub(_n).add(vn),n.object.updateMatrixWorld(),xe=H.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;xe!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(xe).add(n.object.position):(Wu.origin.copy(n.object.position),Wu.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Wu.direction))<CD?t.lookAt(n.target):(by.setFromNormalAndCoplanarPoint(n.object.up,n.target),Wu.intersectPlane(by,n.target))))}else n.object instanceof da&&n.object.isOrthographicCamera&&(Ee=g!==1,Ee&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix()));return g=1,C=!1,Ee||gt.distanceToSquared(n.object.position)>f||8*(1-At.dot(n.object.quaternion))>f?(n.dispatchEvent(i),gt.copy(n.object.position),At.copy(n.object.quaternion),Ee=!1,!0):!1}})(),this.connect=H=>{n.domElement=H,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Wt),n.domElement.addEventListener("pointerdown",ce),n.domElement.addEventListener("pointercancel",D),n.domElement.addEventListener("wheel",_t)},this.dispose=()=>{var H,tt,Tt,V,gt,At;n.domElement&&(n.domElement.style.touchAction="auto"),(H=n.domElement)==null||H.removeEventListener("contextmenu",Wt),(tt=n.domElement)==null||tt.removeEventListener("pointerdown",ce),(Tt=n.domElement)==null||Tt.removeEventListener("pointercancel",D),(V=n.domElement)==null||V.removeEventListener("wheel",_t),(gt=n.domElement)==null||gt.ownerDocument.removeEventListener("pointermove",O),(At=n.domElement)==null||At.ownerDocument.removeEventListener("pointerup",D),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",ot)};const n=this,i={type:"change"},o={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let h=c.NONE;const f=1e-6,p=new dm,m=new dm;let g=1;const v=new I,x=new ft,b=new ft,S=new ft,_=new ft,E=new ft,A=new ft,T=new ft,U=new ft,R=new ft,P=new I,B=new ft;let C=!1;const w=[],z={};function Y(){return 2*Math.PI/60/60*n.autoRotateSpeed}function X(){return Math.pow(.95,n.zoomSpeed)}function $(H){n.reverseOrbit||n.reverseHorizontalOrbit?m.theta+=H:m.theta-=H}function it(H){n.reverseOrbit||n.reverseVerticalOrbit?m.phi+=H:m.phi-=H}const k=(()=>{const H=new I;return function(Tt,V){H.setFromMatrixColumn(V,0),H.multiplyScalar(-Tt),v.add(H)}})(),et=(()=>{const H=new I;return function(Tt,V){n.screenSpacePanning===!0?H.setFromMatrixColumn(V,1):(H.setFromMatrixColumn(V,0),H.crossVectors(n.object.up,H)),H.multiplyScalar(Tt),v.add(H)}})(),q=(()=>{const H=new I;return function(Tt,V){const gt=n.domElement;if(gt&&n.object instanceof ln&&n.object.isPerspectiveCamera){const At=n.object.position;H.copy(At).sub(n.target);let Bt=H.length();Bt*=Math.tan(n.object.fov/2*Math.PI/180),k(2*Tt*Bt/gt.clientHeight,n.object.matrix),et(2*V*Bt/gt.clientHeight,n.object.matrix)}else gt&&n.object instanceof da&&n.object.isOrthographicCamera?(k(Tt*(n.object.right-n.object.left)/n.object.zoom/gt.clientWidth,n.object.matrix),et(V*(n.object.top-n.object.bottom)/n.object.zoom/gt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function lt(H){n.object instanceof ln&&n.object.isPerspectiveCamera||n.object instanceof da&&n.object.isOrthographicCamera?g=H:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function yt(H){lt(g/H)}function St(H){lt(g*H)}function It(H){if(!n.zoomToCursor||!n.domElement)return;C=!0;const tt=n.domElement.getBoundingClientRect(),Tt=H.clientX-tt.left,V=H.clientY-tt.top,gt=tt.width,At=tt.height;B.x=Tt/gt*2-1,B.y=-(V/At)*2+1,P.set(B.x,B.y,1).unproject(n.object).sub(n.object.position).normalize()}function Qt(H){return Math.max(n.minDistance,Math.min(n.maxDistance,H))}function Kt(H){x.set(H.clientX,H.clientY)}function le(H){It(H),T.set(H.clientX,H.clientY)}function ut(H){_.set(H.clientX,H.clientY)}function xt(H){b.set(H.clientX,H.clientY),S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const tt=n.domElement;tt&&($(2*Math.PI*S.x/tt.clientHeight),it(2*Math.PI*S.y/tt.clientHeight)),x.copy(b),n.update()}function zt(H){U.set(H.clientX,H.clientY),R.subVectors(U,T),R.y>0?yt(X()):R.y<0&&St(X()),T.copy(U),n.update()}function Jt(H){E.set(H.clientX,H.clientY),A.subVectors(E,_).multiplyScalar(n.panSpeed),q(A.x,A.y),_.copy(E),n.update()}function Yt(H){It(H),H.deltaY<0?St(X()):H.deltaY>0&&yt(X()),n.update()}function me(H){let tt=!1;switch(H.code){case n.keys.UP:q(0,n.keyPanSpeed),tt=!0;break;case n.keys.BOTTOM:q(0,-n.keyPanSpeed),tt=!0;break;case n.keys.LEFT:q(n.keyPanSpeed,0),tt=!0;break;case n.keys.RIGHT:q(-n.keyPanSpeed,0),tt=!0;break}tt&&(H.preventDefault(),n.update())}function we(){if(w.length==1)x.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),tt=.5*(w[0].pageY+w[1].pageY);x.set(H,tt)}}function F(){if(w.length==1)_.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),tt=.5*(w[0].pageY+w[1].pageY);_.set(H,tt)}}function vt(){const H=w[0].pageX-w[1].pageX,tt=w[0].pageY-w[1].pageY,Tt=Math.sqrt(H*H+tt*tt);T.set(0,Tt)}function pt(){n.enableZoom&&vt(),n.enablePan&&F()}function dt(){n.enableZoom&&vt(),n.enableRotate&&we()}function ct(H){if(w.length==1)b.set(H.pageX,H.pageY);else{const Tt=$t(H),V=.5*(H.pageX+Tt.x),gt=.5*(H.pageY+Tt.y);b.set(V,gt)}S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const tt=n.domElement;tt&&($(2*Math.PI*S.x/tt.clientHeight),it(2*Math.PI*S.y/tt.clientHeight)),x.copy(b)}function Nt(H){if(w.length==1)E.set(H.pageX,H.pageY);else{const tt=$t(H),Tt=.5*(H.pageX+tt.x),V=.5*(H.pageY+tt.y);E.set(Tt,V)}A.subVectors(E,_).multiplyScalar(n.panSpeed),q(A.x,A.y),_.copy(E)}function bt(H){const tt=$t(H),Tt=H.pageX-tt.x,V=H.pageY-tt.y,gt=Math.sqrt(Tt*Tt+V*V);U.set(0,gt),R.set(0,Math.pow(U.y/T.y,n.zoomSpeed)),yt(R.y),T.copy(U)}function Ct(H){n.enableZoom&&bt(H),n.enablePan&&Nt(H)}function re(H){n.enableZoom&&bt(H),n.enableRotate&&ct(H)}function ce(H){var tt,Tt;n.enabled!==!1&&(w.length===0&&((tt=n.domElement)==null||tt.ownerDocument.addEventListener("pointermove",O),(Tt=n.domElement)==null||Tt.ownerDocument.addEventListener("pointerup",D)),Xt(H),H.pointerType==="touch"?Zt(H):J(H))}function O(H){n.enabled!==!1&&(H.pointerType==="touch"?Dt(H):rt(H))}function D(H){var tt,Tt,V;Mt(H),w.length===0&&((tt=n.domElement)==null||tt.releasePointerCapture(H.pointerId),(Tt=n.domElement)==null||Tt.ownerDocument.removeEventListener("pointermove",O),(V=n.domElement)==null||V.ownerDocument.removeEventListener("pointerup",D)),n.dispatchEvent(l),h=c.NONE}function J(H){let tt;switch(H.button){case 0:tt=n.mouseButtons.LEFT;break;case 1:tt=n.mouseButtons.MIDDLE;break;case 2:tt=n.mouseButtons.RIGHT;break;default:tt=-1}switch(tt){case tr.DOLLY:if(n.enableZoom===!1)return;le(H),h=c.DOLLY;break;case tr.ROTATE:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enablePan===!1)return;ut(H),h=c.PAN}else{if(n.enableRotate===!1)return;Kt(H),h=c.ROTATE}break;case tr.PAN:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enableRotate===!1)return;Kt(H),h=c.ROTATE}else{if(n.enablePan===!1)return;ut(H),h=c.PAN}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(o)}function rt(H){if(n.enabled!==!1)switch(h){case c.ROTATE:if(n.enableRotate===!1)return;xt(H);break;case c.DOLLY:if(n.enableZoom===!1)return;zt(H);break;case c.PAN:if(n.enablePan===!1)return;Jt(H);break}}function _t(H){n.enabled===!1||n.enableZoom===!1||h!==c.NONE&&h!==c.ROTATE||(H.preventDefault(),n.dispatchEvent(o),Yt(H),n.dispatchEvent(l))}function ot(H){n.enabled===!1||n.enablePan===!1||me(H)}function Zt(H){switch(Lt(H),w.length){case 1:switch(n.touches.ONE){case er.ROTATE:if(n.enableRotate===!1)return;we(),h=c.TOUCH_ROTATE;break;case er.PAN:if(n.enablePan===!1)return;F(),h=c.TOUCH_PAN;break;default:h=c.NONE}break;case 2:switch(n.touches.TWO){case er.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;pt(),h=c.TOUCH_DOLLY_PAN;break;case er.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;dt(),h=c.TOUCH_DOLLY_ROTATE;break;default:h=c.NONE}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(o)}function Dt(H){switch(Lt(H),h){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;ct(H),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Nt(H),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ct(H),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;re(H),n.update();break;default:h=c.NONE}}function Wt(H){n.enabled!==!1&&H.preventDefault()}function Xt(H){w.push(H)}function Mt(H){delete z[H.pointerId];for(let tt=0;tt<w.length;tt++)if(w[tt].pointerId==H.pointerId){w.splice(tt,1);return}}function Lt(H){let tt=z[H.pointerId];tt===void 0&&(tt=new ft,z[H.pointerId]=tt),tt.set(H.pageX,H.pageY)}function $t(H){const tt=H.pointerId===w[0].pointerId?w[1]:w[0];return z[tt.pointerId]}this.dollyIn=(H=X())=>{St(H),n.update()},this.dollyOut=(H=X())=>{yt(H),n.update()},this.getScale=()=>g,this.setScale=H=>{lt(H),n.update()},this.getZoomScale=()=>X(),e!==void 0&&this.connect(e),this.update()}};const zD=ne.forwardRef(({makeDefault:s,camera:t,regress:e,domElement:n,enableDamping:i=!0,keyEvents:o=!1,onChange:l,onStart:c,onEnd:h,...f},p)=>{const m=ca(R=>R.invalidate),g=ca(R=>R.camera),v=ca(R=>R.gl),x=ca(R=>R.events),b=ca(R=>R.setEvents),S=ca(R=>R.set),_=ca(R=>R.get),E=ca(R=>R.performance),A=t||g,T=n||x.connected||v.domElement,U=ne.useMemo(()=>new RD(A),[A]);return J3(()=>{U.enabled&&U.update()},-1),ne.useEffect(()=>(o&&U.connect(o===!0?T:o),U.connect(T),()=>void U.dispose()),[o,T,e,U,m]),ne.useEffect(()=>{const R=C=>{m(),e&&E.regress(),l&&l(C)},P=C=>{c&&c(C)},B=C=>{h&&h(C)};return U.addEventListener("change",R),U.addEventListener("start",P),U.addEventListener("end",B),()=>{U.removeEventListener("start",P),U.removeEventListener("end",B),U.removeEventListener("change",R)}},[l,c,h,U,m,b]),ne.useEffect(()=>{if(s){const R=_().controls;return S({controls:U}),()=>S({controls:R})}},[s,U]),ne.createElement("primitive",Gh({ref:p,object:U,enableDamping:i},f))});function DD(s,t){const e=s+"Geometry";return ne.forwardRef(({args:n,children:i,...o},l)=>{const c=ne.useRef(null);return ne.useImperativeHandle(l,()=>c.current),ne.useLayoutEffect(()=>void t?.(c.current)),ne.createElement("mesh",Gh({ref:c},o),ne.createElement(e,{attach:"geometry",args:n}),i)})}const FD=DD("sphere");export{ye as B,OD as C,zD as O,jb as R,FD as S,I as V,ND as c,xi as j,ne as r,J3 as u};
//# sourceMappingURL=three-vendor-DzGpvYrn.js.map
